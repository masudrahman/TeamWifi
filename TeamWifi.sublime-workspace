{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Coo",
				"Coordinates"
			],
			[
				"s",
				"script	Tag"
			],
			[
				"l",
				"li	Tag"
			],
			[
				"o",
				"option	Tag"
			],
			[
				"ge",
				"geojsonMarkerOptions3"
			],
			[
				"geo",
				"geoOption"
			],
			[
				"tes",
				"testResult"
			],
			[
				"cur",
				"currentLat"
			],
			[
				"lat",
				"latlng"
			],
			[
				"p",
				"p"
			],
			[
				"Us",
				"User-Comments"
			],
			[
				"Wi",
				"Wifi-Name"
			],
			[
				"pr",
				"properties"
			],
			[
				"on",
				"onEachFeature"
			],
			[
				"fo",
				"form	Tag"
			],
			[
				"en_",
				"en_HelpText"
			],
			[
				"en",
				"en_Label"
			],
			[
				"lo",
				"log_table_simple_extended"
			],
			[
				"h",
				"h4	Tag"
			],
			[
				"vi",
				"video"
			],
			[
				"more",
				"more-info"
			],
			[
				"F",
				"Forms_ID"
			],
			[
				"H",
				"HTTParty"
			],
			[
				"col",
				"column"
			],
			[
				"ma",
				"margin-right"
			],
			[
				"mar",
				"margin-left"
			],
			[
				"al",
				"vertical-align"
			],
			[
				"team",
				"team-member-pic"
			],
			[
				"te",
				"team-member"
			],
			[
				"u",
				"ul	Tag"
			],
			[
				"outpu",
				"outputY"
			],
			[
				"outp",
				"outputY"
			],
			[
				"out",
				"outputY"
			],
			[
				"input",
				"inputX"
			],
			[
				"in",
				"included_cols"
			],
			[
				"fff",
				"fff"
			],
			[
				"local",
				"localhost"
			],
			[
				"La",
				"Laravel"
			],
			[
				"ba",
				"background"
			],
			[
				"fon",
				"font-style"
			],
			[
				"back",
				"background-color"
			],
			[
				"fa",
				"favorites"
			],
			[
				"curren",
				"currentSong"
			],
			[
				"rando",
				"randomSong"
			],
			[
				"fun",
				"function"
			]
		]
	},
	"buffers":
	[
		{
			"file": "views/index.handlebars",
			"settings":
			{
				"buffer_size": 13302,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 5 files for \"leaflet.js\"\n\n/Users/masudrahman/Code/TeamWifi/views/index.handlebars:\n    7  	<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/js/bootstrap.min.js\" integrity=\"sha384-BLiI7JTZm+JWlgKa0M0kGRpJbF2J8q+qreVrKBC47e3K6BW78kGLrCkeRX6I9RoK\" crossorigin=\"anonymous\"></script>\n    8  \n    9: 	<script src=\"http://cdn.leafletjs.com/leaflet-0.7/leaflet.js\"></script>\n   10  	<!--<script src=\"https://maps.google.com/maps/api/js?key=AIzaSyBQIoDF-NYDXiovnOeBtRBzqzr7S2VQv8E\" type=\"text/javascript\"></script> -->\n   11  	<script src=\"./js/myscript.js\" type=\"text/javascript\"></script>\n\n1 match in 1 file\n\n\nSearching 682 files for \"filename\"\n\n/Users/masudrahman/Code/TeamWifi/bower_components/leaflet.locatecontrol/.bower.json:\n   29    ],\n   30    \"license\": \"MIT\",\n   31:   \"readmeFilename\": \"README.md\",\n   32    \"_release\": \"0.56.0\",\n   33    \"_resolution\": {\n\n/Users/masudrahman/Code/TeamWifi/bower_components/leaflet.locatecontrol/bower.json:\n   29    ],\n   30    \"license\": \"MIT\",\n   31:   \"readmeFilename\": \"README.md\"\n   32  }\n   33  \n\n/Users/masudrahman/Code/TeamWifi/bower_components/leaflet.locatecontrol/package.json:\n   16    ],\n   17    \"license\": \"MIT\",\n   18:   \"readmeFilename\": \"README.md\",\n   19    \"scripts\": {\n   20      \"build\": \"grunt\",\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/History.md:\n  465  ==================\n  466  \n  467:   * Fixed: set `filename` on cached templates [matthewleon]\n  468  \n  469  2.5.4 / 2012-01-02\n  ...\n  537  \n  538    * Added docs for `status` option special-case. Closes #739\n  539:   * Fixed `options.filename`, exposing the view path to template engines\n  540  \n  541  2.4.2. / 2011-07-06\n  ...\n  668  \n  669    * Added second callback support for `res.download()` connection errors\n  670:   * Fixed `filename` option passing to template engine\n  671  \n  672  2.2.1 / 2011-04-04\n  ...\n  728    * Changed; `partial()` \"locals\" are now optional\n  729    * Fixed `SlowBuffer` support. Closes #584 [reported by tyrda01]\n  730:   * Fixed .filename view engine option [reported by drudge]\n  731    * Fixed blog example\n  732    * Fixed `{req,res}.app` reference when mounting [Ben Weaver]\n  ...\n 1034    * Added ETag support to Request#sendfile()\n 1035    * Added options to Request#sendfile(), passed to fs.createReadStream()\n 1036:   * Added filename arg to Request#download()\n 1037    * Performance enhanced due to pre-reversing plugins so that plugins.reverse() is not called on each request\n 1038    * Performance enhanced by preventing several calls to toLowerCase() in Router#match()\n ....\n 1217    * Changed; Hooks (before / after) pass request as arg as well as evaluated in their context\n 1218    * Updated node support to 0.1.27 Closes #169\n 1219:   * Updated dirname(__filename) -> __dirname\n 1220    * Updated libxmljs support to v0.2.0\n 1221    * Added session support with memory store / reaping\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/package.json:\n   77    },\n   78    \"readme\": \"[![express logo](http://f.cl.ly/items/0V2S1n0K1i3y1c122g04/Screen%20Shot%202012-04-11%20at%209.59.42%20AM.png)](http://expressjs.com/)\\n\\n  Fast, unopinionated, minimalist web framework for [node](http://nodejs.org).\\n\\n  [![Build Status](https://secure.travis-ci.org/visionmedia/express.png)](http://travis-ci.org/visionmedia/express) [![Gittip](http://img.shields.io/gittip/visionmedia.png)](https://www.gittip.com/visionmedia/)\\n\\n```js\\nvar express = require('express');\\nvar app = express();\\n\\napp.get('/', function(req, res){\\n  res.send('Hello World');\\n});\\n\\napp.listen(3000);\\n```\\n\\n## Installation\\n\\n    $ npm install -g express\\n\\n## Quick Start\\n\\n The quickest way to get started with express is to utilize the executable `express(1)` to generate an application as shown below:\\n\\n Create the app:\\n\\n    $ npm install -g express\\n    $ express /tmp/foo && cd /tmp/foo\\n\\n Install dependencies:\\n\\n    $ npm install\\n\\n Start the server:\\n\\n    $ node app\\n\\n## Features\\n\\n  * Built on [Connect](http://github.com/senchalabs/connect)\\n  * Robust routing\\n  * HTTP helpers (redirection, caching, etc)\\n  * View system supporting 14+ template engines\\n  * Content negotiation\\n  * Focus on high performance\\n  * Environment based configuration\\n  * Executable for generating applications quickly\\n  * High test coverage\\n\\n## Philosophy\\n\\n  The Express philosophy is to provide small, robust tooling for HTTP servers, making\\n  it a great solution for single page applications, web sites, hybrids, or public\\n  HTTP APIs.\\n\\n  Built on Connect, you can use _only_ what you need, and nothing more. Applications\\n  can be as big or as small as you like, even a single file. Express does\\n  not force you to use any specific ORM or template engine. With support for over\\n  14 template engines via [Consolidate.js](http://github.com/visionmedia/consolidate.js),\\n  you can quickly craft your perfect framework.\\n\\n## More Information\\n\\n  * [Website and Documentation](http://expressjs.com/) stored at [visionmedia/expressjs.com](https://github.com/visionmedia/expressjs.com)\\n  * Join #express on freenode\\n  * [Google Group](http://groups.google.com/group/express-js) for discussion\\n  * Follow [tjholowaychuk](http://twitter.com/tjholowaychuk) on twitter for updates\\n  * Visit the [Wiki](http://github.com/visionmedia/express/wiki)\\n  * [Русскоязычная документация](http://jsman.ru/express/)\\n  * Run express examples [online](https://runnable.com/express)\\n\\n## Viewing Examples\\n\\nClone the Express repo, then install the dev dependencies to install all the example / test suite dependencies:\\n\\n    $ git clone git://github.com/visionmedia/express.git --depth 1\\n    $ cd express\\n    $ npm install\\n\\nThen run whichever tests you want:\\n\\n    $ node examples/content-negotiation\\n\\nYou can also view live examples here:\\n\\n<a href=\\\"https://runnable.com/express\\\" target=\\\"_blank\\\"><img src=\\\"https://runnable.com/external/styles/assets/runnablebtn.png\\\" style=\\\"width:67px;height:25px;\\\"></a>\\n\\n## Running Tests\\n\\nTo run the test suite, first invoke the following command within the repo, installing the development dependencies:\\n\\n    $ npm install\\n\\nThen run the tests:\\n\\n    $ make test\\n\\n## Contributors\\n\\n  https://github.com/visionmedia/express/graphs/contributors\\n\\n## License\\n\\n(The MIT License)\\n\\nCopyright (c) 2009-2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\",\n   79:   \"readmeFilename\": \"Readme.md\",\n   80    \"bugs\": {\n   81      \"url\": \"https://github.com/visionmedia/express/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/lib/response.js:\n  261   *\n  262   *   - `maxAge` defaulting to 0\n  263:  *   - `root`   root directory for relative filenames\n  264   *\n  265   * Examples:\n  ...\n  350   * Transfer the file at the given `path` as an attachment.\n  351   *\n  352:  * Optionally providing an alternate attachment `filename`,\n  353   * and optional callback `fn(err)`. The callback is invoked\n  354   * when the data transfer is complete, or when an error has\n  ...\n  358   *\n  359   * @param {String} path\n  360:  * @param {String|Function} filename or fn\n  361   * @param {Function} fn\n  362   * @api public\n  363   */\n  364  \n  365: res.download = function(path, filename, fn){\n  366    // support function as second arg\n  367:   if ('function' == typeof filename) {\n  368:     fn = filename;\n  369:     filename = null;\n  370    }\n  371  \n  372:   filename = filename || path;\n  373:   this.set('Content-Disposition', 'attachment; filename=\"' + basename(filename) + '\"');\n  374    return this.sendfile(path, fn);\n  375  };\n  ...\n  487  \n  488  /**\n  489:  * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n  490   *\n  491:  * @param {String} filename\n  492   * @return {ServerResponse}\n  493   * @api public\n  494   */\n  495  \n  496: res.attachment = function(filename){\n  497:   if (filename) this.type(extname(filename));\n  498:   this.set('Content-Disposition', filename\n  499:     ? 'attachment; filename=\"' + basename(filename) + '\"'\n  500      : 'attachment');\n  501    return this;\n  ...\n  767   *\n  768   *  - `cache`     boolean hinting to the engine it should cache\n  769:  *  - `filename`  filename of the view being rendered\n  770   *\n  771   * @param  {String} view\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/buffer-crc32/package.json:\n   31    },\n   32    \"readme\": \"# buffer-crc32\\n\\n[![Build Status](https://secure.travis-ci.org/brianloveswords/buffer-crc32.png?branch=master)](http://travis-ci.org/brianloveswords/buffer-crc32)\\n\\ncrc32 that works with binary data and fancy character sets, outputs\\nbuffer, signed or unsigned data and has tests.\\n\\nDerived from the sample CRC implementation in the PNG specification: http://www.w3.org/TR/PNG/#D-CRCAppendix\\n\\n# install\\n```\\nnpm install buffer-crc32\\n```\\n\\n# example\\n```js\\nvar crc32 = require('buffer-crc32');\\n// works with buffers\\nvar buf = Buffer([0x00, 0x73, 0x75, 0x70, 0x20, 0x62, 0x72, 0x6f, 0x00])\\ncrc32(buf) // -> <Buffer 94 5a ab 4a>\\n\\n// has convenience methods for getting signed or unsigned ints\\ncrc32.signed(buf) // -> -1805997238\\ncrc32.unsigned(buf) // -> 2488970058\\n\\n// will cast to buffer if given a string, so you can\\n// directly use foreign characters safely\\ncrc32('自動販売機') // -> <Buffer cb 03 1a c5>\\n\\n// and works in append mode too\\nvar partialCrc = crc32('hey');\\nvar partialCrc = crc32(' ', partialCrc);\\nvar partialCrc = crc32('sup', partialCrc);\\nvar partialCrc = crc32(' ', partialCrc);\\nvar finalCrc = crc32('bros', partialCrc); // -> <Buffer 47 fa 55 70>\\n```\\n\\n# tests\\nThis was tested against the output of zlib's crc32 method. You can run\\nthe tests with`npm test` (requires tap)\\n\\n# see also\\nhttps://github.com/alexgorbatchev/node-crc, `crc.buffer.crc32` also\\nsupports buffer inputs and return unsigned ints (thanks @tjholowaychuk).\\n\\n# license\\nMIT/X11\\n\",\n   33:   \"readmeFilename\": \"README.md\",\n   34    \"bugs\": {\n   35      \"url\": \"https://github.com/brianloveswords/buffer-crc32/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/commander/package.json:\n   32    },\n   33    \"readme\": \"# Commander.js\\n\\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\\n\\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\\n\\n## Installation\\n\\n    $ npm install commander\\n\\n## Option parsing\\n\\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\\n\\n```js\\n#!/usr/bin/env node\\n\\n/**\\n * Module dependencies.\\n */\\n\\nvar program = require('commander');\\n\\nprogram\\n  .version('0.0.1')\\n  .option('-p, --peppers', 'Add peppers')\\n  .option('-P, --pineapple', 'Add pineapple')\\n  .option('-b, --bbq', 'Add bbq sauce')\\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\\n  .parse(process.argv);\\n\\nconsole.log('you ordered a pizza with:');\\nif (program.peppers) console.log('  - peppers');\\nif (program.pineapple) console.log('  - pineapple');\\nif (program.bbq) console.log('  - bbq');\\nconsole.log('  - %s cheese', program.cheese);\\n```\\n\\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \\\"--template-engine\\\" are camel-cased, becoming `program.templateEngine` etc.\\n\\n## Automated --help\\n\\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\\n\\n```  \\n $ ./examples/pizza --help\\n\\n   Usage: pizza [options]\\n\\n   Options:\\n\\n     -V, --version        output the version number\\n     -p, --peppers        Add peppers\\n     -P, --pineapple      Add pineapple\\n     -b, --bbq            Add bbq sauce\\n     -c, --cheese <type>  Add the specified type of cheese [marble]\\n     -h, --help           output usage information\\n\\n```\\n\\n## Coercion\\n\\n```js\\nfunction range(val) {\\n  return val.split('..').map(Number);\\n}\\n\\nfunction list(val) {\\n  return val.split(',');\\n}\\n\\nprogram\\n  .version('0.0.1')\\n  .usage('[options] <file ...>')\\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\\n  .option('-f, --float <n>', 'A float argument', parseFloat)\\n  .option('-r, --range <a>..<b>', 'A range', range)\\n  .option('-l, --list <items>', 'A list', list)\\n  .option('-o, --optional [value]', 'An optional value')\\n  .parse(process.argv);\\n\\nconsole.log(' int: %j', program.integer);\\nconsole.log(' float: %j', program.float);\\nconsole.log(' optional: %j', program.optional);\\nprogram.range = program.range || [];\\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\\nconsole.log(' list: %j', program.list);\\nconsole.log(' args: %j', program.args);\\n```\\n\\n## Custom help\\n\\n You can display arbitrary `-h, --help` information\\n by listening for \\\"--help\\\". Commander will automatically\\n exit once you are done so that the remainder of your program\\n does not execute causing undesired behaviours, for example\\n in the following executable \\\"stuff\\\" will not output when\\n `--help` is used.\\n\\n```js\\n#!/usr/bin/env node\\n\\n/**\\n * Module dependencies.\\n */\\n\\nvar program = require('../');\\n\\nfunction list(val) {\\n  return val.split(',').map(Number);\\n}\\n\\nprogram\\n  .version('0.0.1')\\n  .option('-f, --foo', 'enable some foo')\\n  .option('-b, --bar', 'enable some bar')\\n  .option('-B, --baz', 'enable some baz');\\n\\n// must be before .parse() since\\n// node's emit() is immediate\\n\\nprogram.on('--help', function(){\\n  console.log('  Examples:');\\n  console.log('');\\n  console.log('    $ custom-help --help');\\n  console.log('    $ custom-help -h');\\n  console.log('');\\n});\\n\\nprogram.parse(process.argv);\\n\\nconsole.log('stuff');\\n```\\n\\nyielding the following help output:\\n\\n```\\n\\nUsage: custom-help [options]\\n\\nOptions:\\n\\n  -h, --help     output usage information\\n  -V, --version  output the version number\\n  -f, --foo      enable some foo\\n  -b, --bar      enable some bar\\n  -B, --baz      enable some baz\\n\\nExamples:\\n\\n  $ custom-help --help\\n  $ custom-help -h\\n\\n```\\n\\n## .prompt(msg, fn)\\n\\n Single-line prompt:\\n\\n```js\\nprogram.prompt('name: ', function(name){\\n  console.log('hi %s', name);\\n});\\n```\\n\\n Multi-line prompt:\\n\\n```js\\nprogram.prompt('description:', function(name){\\n  console.log('hi %s', name);\\n});\\n```\\n\\n Coercion:\\n\\n```js\\nprogram.prompt('Age: ', Number, function(age){\\n  console.log('age: %j', age);\\n});\\n```\\n\\n```js\\nprogram.prompt('Birthdate: ', Date, function(date){\\n  console.log('date: %s', date);\\n});\\n```\\n\\n```js\\nprogram.prompt('Email: ', /^.+@.+\\\\..+$/, function(email){\\n  console.log('email: %j', email);\\n});\\n```\\n\\n## .password(msg[, mask], fn)\\n\\nPrompt for password without echoing:\\n\\n```js\\nprogram.password('Password: ', function(pass){\\n  console.log('got \\\"%s\\\"', pass);\\n  process.stdin.destroy();\\n});\\n```\\n\\nPrompt for password with mask char \\\"*\\\":\\n\\n```js\\nprogram.password('Password: ', '*', function(pass){\\n  console.log('got \\\"%s\\\"', pass);\\n  process.stdin.destroy();\\n});\\n```\\n\\n## .confirm(msg, fn)\\n\\n Confirm with the given `msg`:\\n\\n```js\\nprogram.confirm('continue? ', function(ok){\\n  console.log(' got %j', ok);\\n});\\n```\\n\\n## .choose(list, fn)\\n\\n Let the user choose from a `list`:\\n\\n```js\\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\\n\\nconsole.log('Choose the coolest pet:');\\nprogram.choose(list, function(i){\\n  console.log('you chose %d \\\"%s\\\"', i, list[i]);\\n});\\n```\\n\\n## .outputHelp()\\n\\n  Output help information without exiting.\\n\\n## .help()\\n\\n  Output help information and exit immediately.\\n\\n## Links\\n\\n - [API documentation](http://visionmedia.github.com/commander.js/)\\n - [ascii tables](https://github.com/LearnBoost/cli-table)\\n - [progress bars](https://github.com/visionmedia/node-progress)\\n - [more progress bars](https://github.com/substack/node-multimeter)\\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\\n\\n## License \\n\\n(The MIT License)\\n\\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\",\n   34:   \"readmeFilename\": \"Readme.md\",\n   35    \"bugs\": {\n   36      \"url\": \"https://github.com/visionmedia/commander.js/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/commander/node_modules/keypress/package.json:\n   23    \"license\": \"MIT\",\n   24    \"readme\": \"keypress\\n========\\n### Make any Node ReadableStream emit \\\"keypress\\\" events\\n\\n\\nPrevious to Node `v0.8.x`, there was an undocumented `\\\"keypress\\\"` event that\\n`process.stdin` would emit when it was a TTY. Some people discovered this hidden\\ngem, and started using it in their own code.\\n\\nNow in Node `v0.8.x`, this `\\\"keypress\\\"` event does not get emitted by default,\\nbut rather only when it is being used in conjuction with the `readline` (or by\\nextension, the `repl`) module.\\n\\nThis module is the exact logic from the node `v0.8.x` releases ripped out into its\\nown module.\\n\\n__Bonus:__ Now with mouse support!\\n\\nInstallation\\n------------\\n\\nInstall with `npm`:\\n\\n``` bash\\n$ npm install keypress\\n```\\n\\nOr add it to the `\\\"dependencies\\\"` section of your _package.json_ file.\\n\\n\\nExample\\n-------\\n\\n#### Listening for \\\"keypress\\\" events\\n\\n``` js\\nvar keypress = require('keypress');\\n\\n// make `process.stdin` begin emitting \\\"keypress\\\" events\\nkeypress(process.stdin);\\n\\n// listen for the \\\"keypress\\\" event\\nprocess.stdin.on('keypress', function (ch, key) {\\n  console.log('got \\\"keypress\\\"', key);\\n  if (key && key.ctrl && key.name == 'c') {\\n    process.stdin.pause();\\n  }\\n});\\n\\nprocess.stdin.setRawMode(true);\\nprocess.stdin.resume();\\n```\\n\\n#### Listening for \\\"mousepress\\\" events\\n\\n``` js\\nvar keypress = require('keypress');\\n\\n// make `process.stdin` begin emitting \\\"mousepress\\\" (and \\\"keypress\\\") events\\nkeypress(process.stdin);\\n\\n// you must enable the mouse events before they will begin firing\\nkeypress.enableMouse(process.stdout);\\n\\nprocess.stdin.on('mousepress', function (info) {\\n  console.log('got \\\"mousepress\\\" event at %d x %d', info.x, info.y);\\n});\\n\\nprocess.on('exit', function () {\\n  // disable mouse on exit, so that the state\\n  // is back to normal for the terminal\\n  keypress.disableMouse(process.stdout);\\n});\\n```\\n\\n\\nLicense\\n-------\\n\\n(The MIT License)\\n\\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\",\n   25:   \"readmeFilename\": \"README.md\",\n   26    \"bugs\": {\n   27      \"url\": \"https://github.com/TooTallNate/keypress/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/package.json:\n   56    },\n   57    \"readme\": \"# Connect [![build status](https://secure.travis-ci.org/senchalabs/connect.png)](http://travis-ci.org/senchalabs/connect)\\n\\n  Connect is an extensible HTTP server framework for [node](http://nodejs.org), providing high performance \\\"plugins\\\" known as _middleware_.\\n\\n Connect is bundled with over _20_ commonly used middleware, including\\n a logger, session support, cookie parser, and [more](http://senchalabs.github.com/connect). Be sure to view the 2.x [documentation](http://senchalabs.github.com/connect/).\\n\\n```js\\nvar connect = require('connect')\\n  , http = require('http');\\n\\nvar app = connect()\\n  .use(connect.favicon())\\n  .use(connect.logger('dev'))\\n  .use(connect.static('public'))\\n  .use(connect.directory('public'))\\n  .use(connect.cookieParser())\\n  .use(connect.session({ secret: 'my secret here' }))\\n  .use(function(req, res){\\n    res.end('Hello from Connect!\\\\n');\\n  });\\n\\nhttp.createServer(app).listen(3000);\\n```\\n\\n## Middleware\\n\\n  - [basicAuth](http://www.senchalabs.org/connect/basicAuth.html)\\n  - [bodyParser](http://www.senchalabs.org/connect/bodyParser.html)\\n  - [compress](http://www.senchalabs.org/connect/compress.html)\\n  - [cookieParser](http://www.senchalabs.org/connect/cookieParser.html)\\n  - [cookieSession](http://www.senchalabs.org/connect/cookieSession.html)\\n  - [csrf](http://www.senchalabs.org/connect/csrf.html)\\n  - [directory](http://www.senchalabs.org/connect/directory.html)\\n  - [errorHandler](http://www.senchalabs.org/connect/errorHandler.html)\\n  - [favicon](http://www.senchalabs.org/connect/favicon.html)\\n  - [json](http://www.senchalabs.org/connect/json.html)\\n  - [limit](http://www.senchalabs.org/connect/limit.html)\\n  - [logger](http://www.senchalabs.org/connect/logger.html)\\n  - [methodOverride](http://www.senchalabs.org/connect/methodOverride.html)\\n  - [multipart](http://www.senchalabs.org/connect/multipart.html)\\n  - [urlencoded](http://www.senchalabs.org/connect/urlencoded.html)\\n  - [query](http://www.senchalabs.org/connect/query.html)\\n  - [responseTime](http://www.senchalabs.org/connect/responseTime.html)\\n  - [session](http://www.senchalabs.org/connect/session.html)\\n  - [static](http://www.senchalabs.org/connect/static.html)\\n  - [staticCache](http://www.senchalabs.org/connect/staticCache.html)\\n  - [subdomains](http://www.senchalabs.org/connect/subdomains.html)\\n  - [vhost](http://www.senchalabs.org/connect/vhost.html)\\n\\n## Running Tests\\n\\nfirst:\\n\\n    $ npm install -d\\n\\nthen:\\n\\n    $ make test\\n\\n## Contributors\\n\\n https://github.com/senchalabs/connect/graphs/contributors\\n\\n## Node Compatibility\\n\\n  Connect `< 1.x` is compatible with node 0.2.x\\n\\n\\n  Connect `1.x` is compatible with node 0.4.x\\n\\n\\n  Connect `2.x` is compatible with node 0.6.x\\n\\n\\n  Connect (_master_) is compatible with node 0.8.x\\n\\n## CLA\\n\\n [http://sencha.com/cla](http://sencha.com/cla)\\n\\n## License\\n\\nView the [LICENSE](https://github.com/senchalabs/connect/blob/master/LICENSE) file. The [Silk](http://www.famfamfam.com/lab/icons/silk/) icons used by the `directory` middleware created by/copyright of [FAMFAMFAM](http://www.famfamfam.com/).\\n\",\n   58:   \"readmeFilename\": \"Readme.md\",\n   59    \"bugs\": {\n   60      \"url\": \"https://github.com/senchalabs/connect/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/lib/connect.js:\n   84   */\n   85  \n   86: fs.readdirSync(__dirname + '/middleware').forEach(function(filename){\n   87:   if (!/\\.js$/.test(filename)) return;\n   88:   var name = basename(filename, '.js');\n   89    function load(){ return require('./middleware/' + name); }\n   90    exports.middleware.__defineGetter__(name, load);\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/lib/middleware/multipart.js:\n   52   *\n   53   *     req.files.images.forEach(function(file){\n   54:  *       console.log('  uploaded : %s %skb : %s', file.originalFilename, file.size / 1024 | 0, file.path);\n   55   *     });\n   56   *\n   ..\n   66   *     req.form.on('part', function(part){\n   67   *       // transfer to s3 etc\n   68:  *       console.log('upload %s %s', part.name, part.filename);\n   69:  *       var out = fs.createWriteStream('/tmp/' + part.filename);\n   70   *       part.pipe(out);\n   71   *     });\n   ..\n  135        if (!options.defer) {\n  136          form.on('file', function(name, val){\n  137:           val.name = val.originalFilename;\n  138            val.type = val.headers['content-type'] || null;\n  139            ondata(name, val, files);\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/batch/package.json:\n   13    \"main\": \"index\",\n   14    \"readme\": \"\\n# batch\\n\\n  Simple async batch with concurrency control and progress reporting.\\n\\n## Installation\\n\\n```\\n$ npm install batch\\n```\\n\\n## API\\n\\n```js\\nvar Batch = require('batch')\\n  , batch = new Batch;\\n\\nbatch.concurrency(4);\\n\\nids.forEach(function(id){\\n  batch.push(function(done){\\n    User.get(id, done);\\n  });\\n});\\n\\nbatch.on('progress', function(e){\\n\\n});\\n\\nbatch.end(function(err, users){\\n\\n});\\n```\\n\\n### Progress events\\n\\n  Contain the \\\"job\\\" index, response value, duration information, and completion data.\\n\\n```js\\n{ index: 1,\\n  value: 'bar',\\n  pending: 2,\\n  total: 3,\\n  complete: 2,\\n  percent: 66,\\n  start: Thu Oct 04 2012 12:25:53 GMT-0700 (PDT),\\n  end: Thu Oct 04 2012 12:25:53 GMT-0700 (PDT),\\n  duration: 0 }\\n```\\n\\n## License\\n\\n(The MIT License)\\n\\nCopyright (c) 2013 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\",\n   15:   \"readmeFilename\": \"Readme.md\",\n   16    \"_id\": \"batch@0.5.0\",\n   17    \"dist\": {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/bytes/package.json:\n   20    },\n   21    \"readme\": \"# node-bytes\\n\\n  Byte string parser / formatter.\\n\\n## Example:\\n\\n```js\\nbytes('1kb')\\n// => 1024\\n\\nbytes('2mb')\\n// => 2097152\\n\\nbytes('1gb')\\n// => 1073741824\\n\\nbytes(1073741824)\\n// => 1gb\\n```\\n\\n## Installation\\n\\n```\\n$ npm install bytes\\n$ component install visionmedia/bytes.js\\n```\\n\\n## License \\n\\n(The MIT License)\\n\\nCopyright (c) 2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\",\n   22:   \"readmeFilename\": \"Readme.md\",\n   23    \"_id\": \"bytes@0.2.1\",\n   24    \"dist\": {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/CHANGELOG.md:\n   68  * Emit error on aborted connections (Eugene Girshov)\n   69  * Add support for empty requests (Eugene Girshov)\n   70: * Fix name/filename handling in Content-Disposition (jesperp)\n   71  * Tolerate malformed closing boundary in multipart (Eugene Girshov)\n   72  * Ignore preamble in multipart messages (Eugene Girshov)\n   ..\n  112  \n  113  * Do not default to the default to the field name for file uploads where\n  114:   filename=\"\".\n  115  \n  116  ### v1.0.5\n  117  \n  118: * Support filename=\"\" in multipart parts\n  119  * Explain unexpected end() errors in parser better\n  120  \n  ...\n  129  ### v1.0.3\n  130  \n  131: * Fix problems with utf8 characters (#84) / semicolons in filenames (#58)\n  132  * Small performance improvements\n  133  * New test suite and fixture system\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/index.js:\n  389        this.partName = m[1];\n  390      }\n  391:     this.partFilename = parseFilename(this.headerValue);\n  392    } else if (this.headerField === 'content-transfer-encoding') {\n  393      this.partTransferEncoding = this.headerValue.toLowerCase();\n  ...\n  444    self.destStream.headers = self.partHeaders;\n  445    self.destStream.name = self.partName;\n  446:   self.destStream.filename = self.partFilename;\n  447    self.destStream.byteOffset = self.bytesReceived + offset;\n  448    var partContentLength = self.destStream.headers['content-length'];\n  ...\n  453  \n  454    self.emit('part', self.destStream);\n  455:   if (self.destStream.filename == null && self.autoFields) {\n  456      handleField(self, self.destStream);\n  457:   } else if (self.destStream.filename != null && self.autoFiles) {\n  458      handleFile(self, self.destStream);\n  459    }\n  ...\n  498    var file = {\n  499      fieldName: fileStream.name,\n  500:     originalFilename: fileStream.filename,\n  501:     path: uploadPath(self.uploadDir, fileStream.filename),\n  502      headers: fileStream.headers,\n  503    };\n  ...\n  556    self.partHeaders = {};\n  557    self.partName = null;\n  558:   self.partFilename = null;\n  559    self.partTransferEncoding = 'binary';\n  560    self.destStream = null;\n  ...\n  594  }\n  595  \n  596: function uploadPath(baseDir, filename) {\n  597:   var ext = path.extname(filename).replace(FILE_EXT_RE, '$1');\n  598    var name = process.pid + '-' +\n  599      (Math.random() * 0x100000000 + 1).toString(36) + ext;\n  ...\n  601  }\n  602  \n  603: function parseFilename(headerValue) {\n  604:   var m = headerValue.match(/\\bfilename=\"(.*?)\"($|; )/i);\n  605    if (!m) return;\n  606  \n  607:   var filename = m[1].substr(m[1].lastIndexOf('\\\\') + 1);\n  608:   filename = filename.replace(/%22/g, '\"');\n  609:   filename = filename.replace(/&#([\\d]{4});/g, function(m, code) {\n  610      return String.fromCharCode(code);\n  611    });\n  612:   return filename;\n  613  }\n  614  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/package.json:\n   33      \"stream-counter\": \"~0.2.0\"\n   34    },\n   35:   \"readme\": \"[![Build Status](https://travis-ci.org/superjoe30/node-multiparty.png?branch=master)](https://travis-ci.org/superjoe30/node-multiparty)\\n# multiparty\\n\\nParse http requests with content-type `multipart/form-data`, also known as file uploads.\\n\\nSee also [busboy](https://github.com/mscdex/busboy) - a\\n[faster](https://github.com/mscdex/dicer/wiki/Benchmarks) alternative\\nwhich may be worth looking into.\\n\\n### Why the fork?\\n\\n * This module uses the Node.js v0.10 streams properly, *even in Node.js v0.8*\\n * It will not create a temp file for you unless you want it to.\\n * Counts bytes and does math to help you figure out the `Content-Length` of\\n   each part.\\n * You can easily stream uploads to s3 with\\n   [knox](https://github.com/LearnBoost/knox), for [example](examples/s3.js).\\n * Less bugs. This code is simpler, has all deprecated functionality removed,\\n   has cleaner tests, and does not try to do anything beyond multipart stream\\n   parsing.\\n\\n## Installation\\n\\n```\\nnpm install multiparty\\n```\\n\\n## Usage\\n\\n * See [examples](examples).\\n\\nParse an incoming `multipart/form-data` request.\\n\\n```js\\nvar multiparty = require('multiparty')\\n  , http = require('http')\\n  , util = require('util')\\n\\nhttp.createServer(function(req, res) {\\n  if (req.url === '/upload' && req.method === 'POST') {\\n    // parse a file upload\\n    var form = new multiparty.Form();\\n\\n    form.parse(req, function(err, fields, files) {\\n      res.writeHead(200, {'content-type': 'text/plain'});\\n      res.write('received upload:\\\\n\\\\n');\\n      res.end(util.inspect({fields: fields, files: files}));\\n    });\\n\\n    return;\\n  }\\n\\n  // show a file upload form\\n  res.writeHead(200, {'content-type': 'text/html'});\\n  res.end(\\n    '<form action=\\\"/upload\\\" enctype=\\\"multipart/form-data\\\" method=\\\"post\\\">'+\\n    '<input type=\\\"text\\\" name=\\\"title\\\"><br>'+\\n    '<input type=\\\"file\\\" name=\\\"upload\\\" multiple=\\\"multiple\\\"><br>'+\\n    '<input type=\\\"submit\\\" value=\\\"Upload\\\">'+\\n    '</form>'\\n  );\\n}).listen(8080);\\n```\\n\\n## API\\n\\n### multiparty.Form\\n```js\\nvar form = new multiparty.Form(options)\\n```\\nCreates a new form. Options:\\n\\n * `encoding` - sets encoding for the incoming form fields. Defaults to `utf8`.\\n * `maxFieldSize` - Limits the amount of memory a field (not a file) can\\n   allocate in bytes. If this value is exceeded, an `error` event is emitted.\\n   The default size is 2MB.\\n * `maxFields` - Limits the number of fields that will be parsed before\\n   emitting an `error` event. A file counts as a field in this case.\\n   Defaults to 1000.\\n * `autoFields` - Enables `field` events. This is automatically set to `true`\\n   if you add a `field` listener.\\n * `autoFiles` - Enables `file` events. This is automatically set to `true`\\n   if you add a `file` listener.\\n * `uploadDir` - Only relevant when `autoFiles` is `true`. The directory for\\n   placing file uploads in. You can move them later using `fs.rename()`.\\n   Defaults to `os.tmpDir()`.\\n * `hash` - Only relevant when `autoFiles` is `true`. If you want checksums\\n   calculated for incoming files, set this to either `sha1` or `md5`.\\n   Defaults to off.\\n\\n#### form.parse(request, [cb])\\n\\nParses an incoming node.js `request` containing form data. If `cb` is\\nprovided, `autoFields` and `autoFiles` are set to `true` and all fields and\\nfiles are collected and passed to the callback:\\n\\n```js\\nform.parse(req, function(err, fieldsObject, filesObject, fieldsList, filesList) {\\n  // ...\\n});\\n```\\n\\nIt is often convenient to access a field or file by name. In this situation,\\nuse `fieldsObject` or `filesObject`. However sometimes, as in the case of a\\n`<input type=\\\"file\\\" multiple=\\\"multiple\\\">` the multipart stream will contain\\nmultiple files of the same input name, and you are interested in all of them.\\nIn this case, use `filesList`.\\n\\nAnother example is when you do not care what the field name of a file is; you\\nare merely interested in a single upload. In this case, set `maxFields` to 1\\n(assuming no other fields expected besides the file) and use `filesList[0]`.\\n\\n#### form.bytesReceived\\n\\nThe amount of bytes received for this form so far.\\n\\n#### form.bytesExpected\\n\\nThe expected number of bytes in this form.\\n\\n### Events\\n\\n#### 'error' (err)\\n\\nYou definitely want to handle this event. If not your server *will* crash when\\nusers submit bogus multipart requests!\\n\\n#### 'part' (part)\\n\\nEmitted when a part is encountered in the request. `part` is a\\n`ReadableStream`. It also has the following properties:\\n\\n * `headers` - the headers for this part. For example, you may be interested\\n   in `content-type`.\\n * `name` - the field name for this part\\n * `filename` - only if the part is an incoming file\\n * `byteOffset` - the byte offset of this part in the request body\\n * `byteCount` - assuming that this is the last part in the request,\\n   this is the size of this part in bytes. You could use this, for\\n   example, to set the `Content-Length` header if uploading to S3.\\n   If the part had a `Content-Length` header then that value is used\\n   here instead.\\n\\n#### 'aborted'\\n\\nEmitted when the request is aborted. This event will be followed shortly\\nby an `error` event. In practice you do not need to handle this event.\\n\\n#### 'progress' (bytesReceived, bytesExpected)\\n\\n#### 'close'\\n\\nEmitted after all parts have been parsed and emitted. Not emitted if an `error`\\nevent is emitted. This is typically when you would send your response.\\n\\n#### 'file' (name, file)\\n\\n**By default multiparty will not touch your hard drive.** But if you add this\\nlistener, multiparty automatically sets `form.autoFiles` to `true` and will\\nstream uploads to disk for you. \\n\\n * `name` - the field name for this file\\n * `file` - an object with these properties:\\n   - `fieldName` - same as `name` - the field name for this file\\n   - `originalFilename` - the filename that the user reports for the file\\n   - `path` - the absolute path of the uploaded file on disk\\n   - `headers` - the HTTP headers that were sent along with this file\\n   - `size` - size of the file in bytes\\n\\nIf you set the `form.hash` option, then `file` will also contain a `hash`\\nproperty which is the checksum of the file.\\n\\n#### 'field' (name, value)\\n\\n * `name` - field name\\n * `value` - string field value\\n\\n\",\n   36:   \"readmeFilename\": \"README.md\",\n   37    \"bugs\": {\n   38      \"url\": \"https://github.com/superjoe30/node-multiparty/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/README.md:\n  134     in `content-type`.\n  135   * `name` - the field name for this part\n  136:  * `filename` - only if the part is an incoming file\n  137   * `byteOffset` - the byte offset of this part in the request body\n  138   * `byteCount` - assuming that this is the last part in the request,\n  ...\n  163   * `file` - an object with these properties:\n  164     - `fieldName` - same as `name` - the field name for this file\n  165:    - `originalFilename` - the filename that the user reports for the file\n  166     - `path` - the absolute path of the uploaded file on disk\n  167     - `headers` - the HTTP headers that were sent along with this file\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/examples/azureblobstorage.js:\n   20  	var form = new multiparty.Form();\n   21      form.on('part', function(part) {\n   22: 	    if (!part.filename) return;\n   23  		\n   24  		var size = part.byteCount - part.byteOffset;\n   25: 		var name = part.filename;\n   26  		var container = 'blobContainerName';\n   27  		\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/examples/s3.js:\n   40      batch.push(function(cb) {\n   41        form.on('part', function(part) {\n   42:         if (! part.filename) return;\n   43          cb(null, part);\n   44        });\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/node_modules/readable-stream/fs.js:\n  985    this._handle.owner = this;\n  986  \n  987:   this._handle.onchange = function(status, event, filename) {\n  988      if (status) {\n  989        self._handle.close();\n  990        self.emit('error', errnoException(errno, 'watch'));\n  991      } else {\n  992:       self.emit('change', event, filename);\n  993      }\n  994    };\n  ...\n  996  util.inherits(FSWatcher, EventEmitter);\n  997  \n  998: FSWatcher.prototype.start = function(filename, persistent) {\n  999:   nullCheck(filename);\n 1000:   var r = this._handle.start(pathModule._makeLong(filename), persistent);\n 1001  \n 1002    if (r) {\n ....\n 1010  };\n 1011  \n 1012: fs.watch = function(filename) {\n 1013:   nullCheck(filename);\n 1014    var watcher;\n 1015    var options;\n ....\n 1027  \n 1028    watcher = new FSWatcher();\n 1029:   watcher.start(filename, options.persistent);\n 1030  \n 1031    if (listener) {\n ....\n 1065  \n 1066  \n 1067: StatWatcher.prototype.start = function(filename, persistent, interval) {\n 1068:   nullCheck(filename);\n 1069:   this._handle.start(pathModule._makeLong(filename), persistent, interval);\n 1070  };\n 1071  \n ....\n 1077  \n 1078  var statWatchers = {};\n 1079: function inStatWatchers(filename) {\n 1080:   return Object.prototype.hasOwnProperty.call(statWatchers, filename) &&\n 1081:       statWatchers[filename];\n 1082  }\n 1083  \n 1084  \n 1085: fs.watchFile = function(filename) {\n 1086:   nullCheck(filename);\n 1087    var stat;\n 1088    var listener;\n ....\n 1107    }\n 1108  \n 1109:   if (inStatWatchers(filename)) {\n 1110:     stat = statWatchers[filename];\n 1111    } else {\n 1112:     stat = statWatchers[filename] = new StatWatcher();\n 1113:     stat.start(filename, options.persistent, options.interval);\n 1114    }\n 1115    stat.addListener('change', listener);\n ....\n 1117  };\n 1118  \n 1119: fs.unwatchFile = function(filename, listener) {\n 1120:   nullCheck(filename);\n 1121:   if (!inStatWatchers(filename)) return;\n 1122  \n 1123:   var stat = statWatchers[filename];\n 1124  \n 1125    if (typeof listener === 'function') {\n ....\n 1131    if (stat.listeners('change').length === 0) {\n 1132      stat.stop();\n 1133:     statWatchers[filename] = undefined;\n 1134    }\n 1135  };\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/node_modules/readable-stream/package.json:\n   33    },\n   34    \"readme\": \"# readable-stream\\n\\nA new class of streams for Node.js\\n\\nThis module provides the new Stream base classes introduced in Node\\nv0.10, for use in Node v0.8.  You can use it to have programs that\\nhave to work with node v0.8, while being forward-compatible for v0.10\\nand beyond.  When you drop support for v0.8, you can remove this\\nmodule, and only use the native streams.\\n\\nThis is almost exactly the same codebase as appears in Node v0.10.\\nHowever:\\n\\n1. The exported object is actually the Readable class.  Decorating the\\n   native `stream` module would be global pollution.\\n2. In v0.10, you can safely use `base64` as an argument to\\n   `setEncoding` in Readable streams.  However, in v0.8, the\\n   StringDecoder class has no `end()` method, which is problematic for\\n   Base64.  So, don't use that, because it'll break and be weird.\\n\\nOther than that, the API is the same as `require('stream')` in v0.10,\\nso the API docs are reproduced below.\\n\\n----------\\n\\n    Stability: 2 - Unstable\\n\\nA stream is an abstract interface implemented by various objects in\\nNode.  For example a request to an HTTP server is a stream, as is\\nstdout. Streams are readable, writable, or both. All streams are\\ninstances of [EventEmitter][]\\n\\nYou can load the Stream base classes by doing `require('stream')`.\\nThere are base classes provided for Readable streams, Writable\\nstreams, Duplex streams, and Transform streams.\\n\\n## Compatibility\\n\\nIn earlier versions of Node, the Readable stream interface was\\nsimpler, but also less powerful and less useful.\\n\\n* Rather than waiting for you to call the `read()` method, `'data'`\\n  events would start emitting immediately.  If you needed to do some\\n  I/O to decide how to handle data, then you had to store the chunks\\n  in some kind of buffer so that they would not be lost.\\n* The `pause()` method was advisory, rather than guaranteed.  This\\n  meant that you still had to be prepared to receive `'data'` events\\n  even when the stream was in a paused state.\\n\\nIn Node v0.10, the Readable class described below was added.  For\\nbackwards compatibility with older Node programs, Readable streams\\nswitch into \\\"old mode\\\" when a `'data'` event handler is added, or when\\nthe `pause()` or `resume()` methods are called.  The effect is that,\\neven if you are not using the new `read()` method and `'readable'`\\nevent, you no longer have to worry about losing `'data'` chunks.\\n\\nMost programs will continue to function normally.  However, this\\nintroduces an edge case in the following conditions:\\n\\n* No `'data'` event handler is added.\\n* The `pause()` and `resume()` methods are never called.\\n\\nFor example, consider the following code:\\n\\n```javascript\\n// WARNING!  BROKEN!\\nnet.createServer(function(socket) {\\n\\n  // we add an 'end' method, but never consume the data\\n  socket.on('end', function() {\\n    // It will never get here.\\n    socket.end('I got your message (but didnt read it)\\\\n');\\n  });\\n\\n}).listen(1337);\\n```\\n\\nIn versions of node prior to v0.10, the incoming message data would be\\nsimply discarded.  However, in Node v0.10 and beyond, the socket will\\nremain paused forever.\\n\\nThe workaround in this situation is to call the `resume()` method to\\ntrigger \\\"old mode\\\" behavior:\\n\\n```javascript\\n// Workaround\\nnet.createServer(function(socket) {\\n\\n  socket.on('end', function() {\\n    socket.end('I got your message (but didnt read it)\\\\n');\\n  });\\n\\n  // start the flow of data, discarding it.\\n  socket.resume();\\n\\n}).listen(1337);\\n```\\n\\nIn addition to new Readable streams switching into old-mode, pre-v0.10\\nstyle streams can be wrapped in a Readable class using the `wrap()`\\nmethod.\\n\\n## Class: stream.Readable\\n\\n<!--type=class-->\\n\\nA `Readable Stream` has the following methods, members, and events.\\n\\nNote that `stream.Readable` is an abstract class designed to be\\nextended with an underlying implementation of the `_read(size)`\\nmethod. (See below.)\\n\\n### new stream.Readable([options])\\n\\n* `options` {Object}\\n  * `highWaterMark` {Number} The maximum number of bytes to store in\\n    the internal buffer before ceasing to read from the underlying\\n    resource.  Default=16kb\\n  * `encoding` {String} If specified, then buffers will be decoded to\\n    strings using the specified encoding.  Default=null\\n  * `objectMode` {Boolean} Whether this stream should behave\\n    as a stream of objects. Meaning that stream.read(n) returns\\n    a single value instead of a Buffer of size n\\n\\nIn classes that extend the Readable class, make sure to call the\\nconstructor so that the buffering settings can be properly\\ninitialized.\\n\\n### readable.\\\\_read(size)\\n\\n* `size` {Number} Number of bytes to read asynchronously\\n\\nNote: **This function should NOT be called directly.**  It should be\\nimplemented by child classes, and called by the internal Readable\\nclass methods only.\\n\\nAll Readable stream implementations must provide a `_read` method\\nto fetch data from the underlying resource.\\n\\nThis method is prefixed with an underscore because it is internal to\\nthe class that defines it, and should not be called directly by user\\nprograms.  However, you **are** expected to override this method in\\nyour own extension classes.\\n\\nWhen data is available, put it into the read queue by calling\\n`readable.push(chunk)`.  If `push` returns false, then you should stop\\nreading.  When `_read` is called again, you should start pushing more\\ndata.\\n\\nThe `size` argument is advisory.  Implementations where a \\\"read\\\" is a\\nsingle call that returns data can use this to know how much data to\\nfetch.  Implementations where that is not relevant, such as TCP or\\nTLS, may ignore this argument, and simply provide data whenever it\\nbecomes available.  There is no need, for example to \\\"wait\\\" until\\n`size` bytes are available before calling `stream.push(chunk)`.\\n\\n### readable.push(chunk)\\n\\n* `chunk` {Buffer | null | String} Chunk of data to push into the read queue\\n* return {Boolean} Whether or not more pushes should be performed\\n\\nNote: **This function should be called by Readable implementors, NOT\\nby consumers of Readable subclasses.**  The `_read()` function will not\\nbe called again until at least one `push(chunk)` call is made.  If no\\ndata is available, then you MAY call `push('')` (an empty string) to\\nallow a future `_read` call, without adding any data to the queue.\\n\\nThe `Readable` class works by putting data into a read queue to be\\npulled out later by calling the `read()` method when the `'readable'`\\nevent fires.\\n\\nThe `push()` method will explicitly insert some data into the read\\nqueue.  If it is called with `null` then it will signal the end of the\\ndata.\\n\\nIn some cases, you may be wrapping a lower-level source which has some\\nsort of pause/resume mechanism, and a data callback.  In those cases,\\nyou could wrap the low-level source object by doing something like\\nthis:\\n\\n```javascript\\n// source is an object with readStop() and readStart() methods,\\n// and an `ondata` member that gets called when it has data, and\\n// an `onend` member that gets called when the data is over.\\n\\nvar stream = new Readable();\\n\\nsource.ondata = function(chunk) {\\n  // if push() returns false, then we need to stop reading from source\\n  if (!stream.push(chunk))\\n    source.readStop();\\n};\\n\\nsource.onend = function() {\\n  stream.push(null);\\n};\\n\\n// _read will be called when the stream wants to pull more data in\\n// the advisory size argument is ignored in this case.\\nstream._read = function(n) {\\n  source.readStart();\\n};\\n```\\n\\n### readable.unshift(chunk)\\n\\n* `chunk` {Buffer | null | String} Chunk of data to unshift onto the read queue\\n* return {Boolean} Whether or not more pushes should be performed\\n\\nThis is the corollary of `readable.push(chunk)`.  Rather than putting\\nthe data at the *end* of the read queue, it puts it at the *front* of\\nthe read queue.\\n\\nThis is useful in certain use-cases where a stream is being consumed\\nby a parser, which needs to \\\"un-consume\\\" some data that it has\\noptimistically pulled out of the source.\\n\\n```javascript\\n// A parser for a simple data protocol.\\n// The \\\"header\\\" is a JSON object, followed by 2 \\\\n characters, and\\n// then a message body.\\n//\\n// Note: This can be done more simply as a Transform stream.  See below.\\n\\nfunction SimpleProtocol(source, options) {\\n  if (!(this instanceof SimpleProtocol))\\n    return new SimpleProtocol(options);\\n\\n  Readable.call(this, options);\\n  this._inBody = false;\\n  this._sawFirstCr = false;\\n\\n  // source is a readable stream, such as a socket or file\\n  this._source = source;\\n\\n  var self = this;\\n  source.on('end', function() {\\n    self.push(null);\\n  });\\n\\n  // give it a kick whenever the source is readable\\n  // read(0) will not consume any bytes\\n  source.on('readable', function() {\\n    self.read(0);\\n  });\\n\\n  this._rawHeader = [];\\n  this.header = null;\\n}\\n\\nSimpleProtocol.prototype = Object.create(\\n  Readable.prototype, { constructor: { value: SimpleProtocol }});\\n\\nSimpleProtocol.prototype._read = function(n) {\\n  if (!this._inBody) {\\n    var chunk = this._source.read();\\n\\n    // if the source doesn't have data, we don't have data yet.\\n    if (chunk === null)\\n      return this.push('');\\n\\n    // check if the chunk has a \\\\n\\\\n\\n    var split = -1;\\n    for (var i = 0; i < chunk.length; i++) {\\n      if (chunk[i] === 10) { // '\\\\n'\\n        if (this._sawFirstCr) {\\n          split = i;\\n          break;\\n        } else {\\n          this._sawFirstCr = true;\\n        }\\n      } else {\\n        this._sawFirstCr = false;\\n      }\\n    }\\n\\n    if (split === -1) {\\n      // still waiting for the \\\\n\\\\n\\n      // stash the chunk, and try again.\\n      this._rawHeader.push(chunk);\\n      this.push('');\\n    } else {\\n      this._inBody = true;\\n      var h = chunk.slice(0, split);\\n      this._rawHeader.push(h);\\n      var header = Buffer.concat(this._rawHeader).toString();\\n      try {\\n        this.header = JSON.parse(header);\\n      } catch (er) {\\n        this.emit('error', new Error('invalid simple protocol data'));\\n        return;\\n      }\\n      // now, because we got some extra data, unshift the rest\\n      // back into the read queue so that our consumer will see it.\\n      var b = chunk.slice(split);\\n      this.unshift(b);\\n\\n      // and let them know that we are done parsing the header.\\n      this.emit('header', this.header);\\n    }\\n  } else {\\n    // from there on, just provide the data to our consumer.\\n    // careful not to push(null), since that would indicate EOF.\\n    var chunk = this._source.read();\\n    if (chunk) this.push(chunk);\\n  }\\n};\\n\\n// Usage:\\nvar parser = new SimpleProtocol(source);\\n// Now parser is a readable stream that will emit 'header'\\n// with the parsed header data.\\n```\\n\\n### readable.wrap(stream)\\n\\n* `stream` {Stream} An \\\"old style\\\" readable stream\\n\\nIf you are using an older Node library that emits `'data'` events and\\nhas a `pause()` method that is advisory only, then you can use the\\n`wrap()` method to create a Readable stream that uses the old stream\\nas its data source.\\n\\nFor example:\\n\\n```javascript\\nvar OldReader = require('./old-api-module.js').OldReader;\\nvar oreader = new OldReader;\\nvar Readable = require('stream').Readable;\\nvar myReader = new Readable().wrap(oreader);\\n\\nmyReader.on('readable', function() {\\n  myReader.read(); // etc.\\n});\\n```\\n\\n### Event: 'readable'\\n\\nWhen there is data ready to be consumed, this event will fire.\\n\\nWhen this event emits, call the `read()` method to consume the data.\\n\\n### Event: 'end'\\n\\nEmitted when the stream has received an EOF (FIN in TCP terminology).\\nIndicates that no more `'data'` events will happen. If the stream is\\nalso writable, it may be possible to continue writing.\\n\\n### Event: 'data'\\n\\nThe `'data'` event emits either a `Buffer` (by default) or a string if\\n`setEncoding()` was used.\\n\\nNote that adding a `'data'` event listener will switch the Readable\\nstream into \\\"old mode\\\", where data is emitted as soon as it is\\navailable, rather than waiting for you to call `read()` to consume it.\\n\\n### Event: 'error'\\n\\nEmitted if there was an error receiving data.\\n\\n### Event: 'close'\\n\\nEmitted when the underlying resource (for example, the backing file\\ndescriptor) has been closed. Not all streams will emit this.\\n\\n### readable.setEncoding(encoding)\\n\\nMakes the `'data'` event emit a string instead of a `Buffer`. `encoding`\\ncan be `'utf8'`, `'utf16le'` (`'ucs2'`), `'ascii'`, or `'hex'`.\\n\\nThe encoding can also be set by specifying an `encoding` field to the\\nconstructor.\\n\\n### readable.read([size])\\n\\n* `size` {Number | null} Optional number of bytes to read.\\n* Return: {Buffer | String | null}\\n\\nNote: **This function SHOULD be called by Readable stream users.**\\n\\nCall this method to consume data once the `'readable'` event is\\nemitted.\\n\\nThe `size` argument will set a minimum number of bytes that you are\\ninterested in.  If not set, then the entire content of the internal\\nbuffer is returned.\\n\\nIf there is no data to consume, or if there are fewer bytes in the\\ninternal buffer than the `size` argument, then `null` is returned, and\\na future `'readable'` event will be emitted when more is available.\\n\\nCalling `stream.read(0)` will always return `null`, and will trigger a\\nrefresh of the internal buffer, but otherwise be a no-op.\\n\\n### readable.pipe(destination, [options])\\n\\n* `destination` {Writable Stream}\\n* `options` {Object} Optional\\n  * `end` {Boolean} Default=true\\n\\nConnects this readable stream to `destination` WriteStream. Incoming\\ndata on this stream gets written to `destination`.  Properly manages\\nback-pressure so that a slow destination will not be overwhelmed by a\\nfast readable stream.\\n\\nThis function returns the `destination` stream.\\n\\nFor example, emulating the Unix `cat` command:\\n\\n    process.stdin.pipe(process.stdout);\\n\\nBy default `end()` is called on the destination when the source stream\\nemits `end`, so that `destination` is no longer writable. Pass `{ end:\\nfalse }` as `options` to keep the destination stream open.\\n\\nThis keeps `writer` open so that \\\"Goodbye\\\" can be written at the\\nend.\\n\\n    reader.pipe(writer, { end: false });\\n    reader.on(\\\"end\\\", function() {\\n      writer.end(\\\"Goodbye\\\\n\\\");\\n    });\\n\\nNote that `process.stderr` and `process.stdout` are never closed until\\nthe process exits, regardless of the specified options.\\n\\n### readable.unpipe([destination])\\n\\n* `destination` {Writable Stream} Optional\\n\\nUndo a previously established `pipe()`.  If no destination is\\nprovided, then all previously established pipes are removed.\\n\\n### readable.pause()\\n\\nSwitches the readable stream into \\\"old mode\\\", where data is emitted\\nusing a `'data'` event rather than being buffered for consumption via\\nthe `read()` method.\\n\\nCeases the flow of data.  No `'data'` events are emitted while the\\nstream is in a paused state.\\n\\n### readable.resume()\\n\\nSwitches the readable stream into \\\"old mode\\\", where data is emitted\\nusing a `'data'` event rather than being buffered for consumption via\\nthe `read()` method.\\n\\nResumes the incoming `'data'` events after a `pause()`.\\n\\n\\n## Class: stream.Writable\\n\\n<!--type=class-->\\n\\nA `Writable` Stream has the following methods, members, and events.\\n\\nNote that `stream.Writable` is an abstract class designed to be\\nextended with an underlying implementation of the\\n`_write(chunk, encoding, cb)` method. (See below.)\\n\\n### new stream.Writable([options])\\n\\n* `options` {Object}\\n  * `highWaterMark` {Number} Buffer level when `write()` starts\\n    returning false. Default=16kb\\n  * `decodeStrings` {Boolean} Whether or not to decode strings into\\n    Buffers before passing them to `_write()`.  Default=true\\n\\nIn classes that extend the Writable class, make sure to call the\\nconstructor so that the buffering settings can be properly\\ninitialized.\\n\\n### writable.\\\\_write(chunk, encoding, callback)\\n\\n* `chunk` {Buffer | String} The chunk to be written.  Will always\\n  be a buffer unless the `decodeStrings` option was set to `false`.\\n* `encoding` {String} If the chunk is a string, then this is the\\n  encoding type.  Ignore chunk is a buffer.  Note that chunk will\\n  **always** be a buffer unless the `decodeStrings` option is\\n  explicitly set to `false`.\\n* `callback` {Function} Call this function (optionally with an error\\n  argument) when you are done processing the supplied chunk.\\n\\nAll Writable stream implementations must provide a `_write` method to\\nsend data to the underlying resource.\\n\\nNote: **This function MUST NOT be called directly.**  It should be\\nimplemented by child classes, and called by the internal Writable\\nclass methods only.\\n\\nCall the callback using the standard `callback(error)` pattern to\\nsignal that the write completed successfully or with an error.\\n\\nIf the `decodeStrings` flag is set in the constructor options, then\\n`chunk` may be a string rather than a Buffer, and `encoding` will\\nindicate the sort of string that it is.  This is to support\\nimplementations that have an optimized handling for certain string\\ndata encodings.  If you do not explicitly set the `decodeStrings`\\noption to `false`, then you can safely ignore the `encoding` argument,\\nand assume that `chunk` will always be a Buffer.\\n\\nThis method is prefixed with an underscore because it is internal to\\nthe class that defines it, and should not be called directly by user\\nprograms.  However, you **are** expected to override this method in\\nyour own extension classes.\\n\\n\\n### writable.write(chunk, [encoding], [callback])\\n\\n* `chunk` {Buffer | String} Data to be written\\n* `encoding` {String} Optional.  If `chunk` is a string, then encoding\\n  defaults to `'utf8'`\\n* `callback` {Function} Optional.  Called when this chunk is\\n  successfully written.\\n* Returns {Boolean}\\n\\nWrites `chunk` to the stream.  Returns `true` if the data has been\\nflushed to the underlying resource.  Returns `false` to indicate that\\nthe buffer is full, and the data will be sent out in the future. The\\n`'drain'` event will indicate when the buffer is empty again.\\n\\nThe specifics of when `write()` will return false, is determined by\\nthe `highWaterMark` option provided to the constructor.\\n\\n### writable.end([chunk], [encoding], [callback])\\n\\n* `chunk` {Buffer | String} Optional final data to be written\\n* `encoding` {String} Optional.  If `chunk` is a string, then encoding\\n  defaults to `'utf8'`\\n* `callback` {Function} Optional.  Called when the final chunk is\\n  successfully written.\\n\\nCall this method to signal the end of the data being written to the\\nstream.\\n\\n### Event: 'drain'\\n\\nEmitted when the stream's write queue empties and it's safe to write\\nwithout buffering again. Listen for it when `stream.write()` returns\\n`false`.\\n\\n### Event: 'close'\\n\\nEmitted when the underlying resource (for example, the backing file\\ndescriptor) has been closed. Not all streams will emit this.\\n\\n### Event: 'finish'\\n\\nWhen `end()` is called and there are no more chunks to write, this\\nevent is emitted.\\n\\n### Event: 'pipe'\\n\\n* `source` {Readable Stream}\\n\\nEmitted when the stream is passed to a readable stream's pipe method.\\n\\n### Event 'unpipe'\\n\\n* `source` {Readable Stream}\\n\\nEmitted when a previously established `pipe()` is removed using the\\nsource Readable stream's `unpipe()` method.\\n\\n## Class: stream.Duplex\\n\\n<!--type=class-->\\n\\nA \\\"duplex\\\" stream is one that is both Readable and Writable, such as a\\nTCP socket connection.\\n\\nNote that `stream.Duplex` is an abstract class designed to be\\nextended with an underlying implementation of the `_read(size)`\\nand `_write(chunk, encoding, callback)` methods as you would with a Readable or\\nWritable stream class.\\n\\nSince JavaScript doesn't have multiple prototypal inheritance, this\\nclass prototypally inherits from Readable, and then parasitically from\\nWritable.  It is thus up to the user to implement both the lowlevel\\n`_read(n)` method as well as the lowlevel `_write(chunk, encoding, cb)` method\\non extension duplex classes.\\n\\n### new stream.Duplex(options)\\n\\n* `options` {Object} Passed to both Writable and Readable\\n  constructors. Also has the following fields:\\n  * `allowHalfOpen` {Boolean} Default=true.  If set to `false`, then\\n    the stream will automatically end the readable side when the\\n    writable side ends and vice versa.\\n\\nIn classes that extend the Duplex class, make sure to call the\\nconstructor so that the buffering settings can be properly\\ninitialized.\\n\\n## Class: stream.Transform\\n\\nA \\\"transform\\\" stream is a duplex stream where the output is causally\\nconnected in some way to the input, such as a zlib stream or a crypto\\nstream.\\n\\nThere is no requirement that the output be the same size as the input,\\nthe same number of chunks, or arrive at the same time.  For example, a\\nHash stream will only ever have a single chunk of output which is\\nprovided when the input is ended.  A zlib stream will either produce\\nmuch smaller or much larger than its input.\\n\\nRather than implement the `_read()` and `_write()` methods, Transform\\nclasses must implement the `_transform()` method, and may optionally\\nalso implement the `_flush()` method.  (See below.)\\n\\n### new stream.Transform([options])\\n\\n* `options` {Object} Passed to both Writable and Readable\\n  constructors.\\n\\nIn classes that extend the Transform class, make sure to call the\\nconstructor so that the buffering settings can be properly\\ninitialized.\\n\\n### transform.\\\\_transform(chunk, encoding, callback)\\n\\n* `chunk` {Buffer | String} The chunk to be transformed.  Will always\\n  be a buffer unless the `decodeStrings` option was set to `false`.\\n* `encoding` {String} If the chunk is a string, then this is the\\n  encoding type.  (Ignore if `decodeStrings` chunk is a buffer.)\\n* `callback` {Function} Call this function (optionally with an error\\n  argument) when you are done processing the supplied chunk.\\n\\nNote: **This function MUST NOT be called directly.**  It should be\\nimplemented by child classes, and called by the internal Transform\\nclass methods only.\\n\\nAll Transform stream implementations must provide a `_transform`\\nmethod to accept input and produce output.\\n\\n`_transform` should do whatever has to be done in this specific\\nTransform class, to handle the bytes being written, and pass them off\\nto the readable portion of the interface.  Do asynchronous I/O,\\nprocess things, and so on.\\n\\nCall `transform.push(outputChunk)` 0 or more times to generate output\\nfrom this input chunk, depending on how much data you want to output\\nas a result of this chunk.\\n\\nCall the callback function only when the current chunk is completely\\nconsumed.  Note that there may or may not be output as a result of any\\nparticular input chunk.\\n\\nThis method is prefixed with an underscore because it is internal to\\nthe class that defines it, and should not be called directly by user\\nprograms.  However, you **are** expected to override this method in\\nyour own extension classes.\\n\\n### transform.\\\\_flush(callback)\\n\\n* `callback` {Function} Call this function (optionally with an error\\n  argument) when you are done flushing any remaining data.\\n\\nNote: **This function MUST NOT be called directly.**  It MAY be implemented\\nby child classes, and if so, will be called by the internal Transform\\nclass methods only.\\n\\nIn some cases, your transform operation may need to emit a bit more\\ndata at the end of the stream.  For example, a `Zlib` compression\\nstream will store up some internal state so that it can optimally\\ncompress the output.  At the end, however, it needs to do the best it\\ncan with what is left, so that the data will be complete.\\n\\nIn those cases, you can implement a `_flush` method, which will be\\ncalled at the very end, after all the written data is consumed, but\\nbefore emitting `end` to signal the end of the readable side.  Just\\nlike with `_transform`, call `transform.push(chunk)` zero or more\\ntimes, as appropriate, and call `callback` when the flush operation is\\ncomplete.\\n\\nThis method is prefixed with an underscore because it is internal to\\nthe class that defines it, and should not be called directly by user\\nprograms.  However, you **are** expected to override this method in\\nyour own extension classes.\\n\\n### Example: `SimpleProtocol` parser\\n\\nThe example above of a simple protocol parser can be implemented much\\nmore simply by using the higher level `Transform` stream class.\\n\\nIn this example, rather than providing the input as an argument, it\\nwould be piped into the parser, which is a more idiomatic Node stream\\napproach.\\n\\n```javascript\\nfunction SimpleProtocol(options) {\\n  if (!(this instanceof SimpleProtocol))\\n    return new SimpleProtocol(options);\\n\\n  Transform.call(this, options);\\n  this._inBody = false;\\n  this._sawFirstCr = false;\\n  this._rawHeader = [];\\n  this.header = null;\\n}\\n\\nSimpleProtocol.prototype = Object.create(\\n  Transform.prototype, { constructor: { value: SimpleProtocol }});\\n\\nSimpleProtocol.prototype._transform = function(chunk, encoding, done) {\\n  if (!this._inBody) {\\n    // check if the chunk has a \\\\n\\\\n\\n    var split = -1;\\n    for (var i = 0; i < chunk.length; i++) {\\n      if (chunk[i] === 10) { // '\\\\n'\\n        if (this._sawFirstCr) {\\n          split = i;\\n          break;\\n        } else {\\n          this._sawFirstCr = true;\\n        }\\n      } else {\\n        this._sawFirstCr = false;\\n      }\\n    }\\n\\n    if (split === -1) {\\n      // still waiting for the \\\\n\\\\n\\n      // stash the chunk, and try again.\\n      this._rawHeader.push(chunk);\\n    } else {\\n      this._inBody = true;\\n      var h = chunk.slice(0, split);\\n      this._rawHeader.push(h);\\n      var header = Buffer.concat(this._rawHeader).toString();\\n      try {\\n        this.header = JSON.parse(header);\\n      } catch (er) {\\n        this.emit('error', new Error('invalid simple protocol data'));\\n        return;\\n      }\\n      // and let them know that we are done parsing the header.\\n      this.emit('header', this.header);\\n\\n      // now, because we got some extra data, emit this first.\\n      this.push(b);\\n    }\\n  } else {\\n    // from there on, just provide the data to our consumer as-is.\\n    this.push(b);\\n  }\\n  done();\\n};\\n\\nvar parser = new SimpleProtocol();\\nsource.pipe(parser)\\n\\n// Now parser is a readable stream that will emit 'header'\\n// with the parsed header data.\\n```\\n\\n\\n## Class: stream.PassThrough\\n\\nThis is a trivial implementation of a `Transform` stream that simply\\npasses the input bytes across to the output.  Its purpose is mainly\\nfor examples and testing, but there are occasionally use cases where\\nit can come in handy.\\n\\n\\n[EventEmitter]: events.html#events_class_events_eventemitter\\n\",\n   35:   \"readmeFilename\": \"README.md\",\n   36    \"bugs\": {\n   37      \"url\": \"https://github.com/isaacs/readable-stream/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/node_modules/readable-stream/examples/typer-fsr.js:\n    1  var fs = require('fs');\n    2  var FSReadable = require('../fs.js');\n    3: var rst = new FSReadable(__filename);\n    4  \n    5  rst.on('end', function() {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/node_modules/readable-stream/examples/typer.js:\n    1  var fs = require('fs');\n    2: var fst = fs.createReadStream(__filename);\n    3  var Readable = require('../readable.js');\n    4  var rst = new Readable();\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/node_modules/readable-stream/node_modules/core-util-is/package.json:\n   29    },\n   30    \"readme\": \"# core-util-is\\n\\nThe `util.is*` functions introduced in Node v0.12.\\n\",\n   31:   \"readmeFilename\": \"README.md\",\n   32    \"homepage\": \"https://github.com/isaacs/core-util-is\",\n   33    \"_id\": \"core-util-is@1.0.0\",\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/node_modules/readable-stream/node_modules/debuglog/package.json:\n   17    },\n   18    \"readme\": \"# debuglog - backport of util.debuglog() from node v0.11\\n\\nTo facilitate using the `util.debuglog()` function that will be available when\\nnode v0.12 is released now, this is a copy extracted from the source.\\n\\n## require('debuglog')\\n\\nReturn `util.debuglog`, if it exists, otherwise it will return an internal copy\\nof the implementation from node v0.11.\\n\\n## debuglog(section)\\n\\n* `section` {String} The section of the program to be debugged\\n* Returns: {Function} The logging function\\n\\nThis is used to create a function which conditionally writes to stderr\\nbased on the existence of a `NODE_DEBUG` environment variable.  If the\\n`section` name appears in that environment variable, then the returned\\nfunction will be similar to `console.error()`.  If not, then the\\nreturned function is a no-op.\\n\\nFor example:\\n\\n```javascript\\nvar debuglog = util.debuglog('foo');\\n\\nvar bar = 123;\\ndebuglog('hello from foo [%d]', bar);\\n```\\n\\nIf this program is run with `NODE_DEBUG=foo` in the environment, then\\nit will output something like:\\n\\n    FOO 3245: hello from foo [123]\\n\\nwhere `3245` is the process id.  If it is not run with that\\nenvironment variable set, then it will not print anything.\\n\\nYou may separate multiple `NODE_DEBUG` environment variables with a\\ncomma.  For example, `NODE_DEBUG=fs,net,tls`.\\n\",\n   19:   \"readmeFilename\": \"README.md\",\n   20    \"bugs\": {\n   21      \"url\": \"https://github.com/sam-github/node-debuglog/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/node_modules/readable-stream/test/common.js:\n   23  var assert = require('assert');\n   24  \n   25: exports.testDir = path.dirname(__filename);\n   26  exports.fixturesDir = path.join(exports.testDir, 'fixtures');\n   27  exports.libDir = path.join(exports.testDir, '../lib');\n   ..\n   53  \n   54  \n   55: exports.ddCommand = function(filename, kilobytes) {\n   56    if (process.platform === 'win32') {\n   57      var p = path.resolve(exports.fixturesDir, 'create-file.js');\n   58      return '\"' + process.argv[0] + '\" \"' + p + '\" \"' +\n   59:            filename + '\" ' + (kilobytes * 1024);\n   60    } else {\n   61:     return 'dd if=/dev/zero of=\"' + filename + '\" bs=1024 count=' + kilobytes;\n   62    }\n   63  };\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/node_modules/stream-counter/package.json:\n   23    },\n   24    \"readme\": \"# stream-counter\\n\\nKeep track of how many bytes have been written to a stream.\\n\\n## Usage\\n\\n```js\\nvar StreamCounter = require('stream-counter');\\nvar counter = new StreamCounter();\\ncounter.on('progress', function() {\\n  console.log(\\\"progress\\\", counter.bytes);\\n});\\nfs.createReadStream('foo.txt').pipe(counter);\\n```\\n\",\n   25:   \"readmeFilename\": \"README.md\",\n   26    \"bugs\": {\n   27      \"url\": \"https://github.com/superjoe30/node-stream-counter/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/record.js:\n    5  var server = http.createServer(function(req, res) {\n    6    var socket = req.socket;\n    7:   console.log('Request: %s %s -> %s', req.method, req.url, socket.filename);\n    8  \n    9    req.on('end', function() {\n   ..\n   12          method: req.method,\n   13          url: req.url,\n   14:         filename: socket.filename,\n   15        }));\n   16        return;\n   ..\n   32  \n   33    socket.id = connections;\n   34:   socket.filename = 'connection-' + socket.id + '.http';\n   35:   socket.file = fs.createWriteStream(socket.filename);\n   36    socket.pipe(socket.file);\n   37  \n   38:   console.log('--> %s', socket.filename);\n   39    socket.on('close', function() {\n   40:     console.log('<-- %s', socket.filename);\n   41    });\n   42  });\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/test.js:\n   67          if (parsedPart.type === 'file') {\n   68            var file = parsedPart.value;\n   69:           assert.equal(file.originalFilename, expectedPart.filename);\n   70            if(expectedPart.sha1) assert.strictEqual(file.hash, expectedPart.sha1);\n   71            if(expectedPart.size) assert.strictEqual(file.size, expectedPart.size);\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/multipart.js:\n    7        'Joe Blow\\r\\nalmost tricked you!\\r\\n'+\n    8        '--AaB03x\\r\\n'+\n    9:       'content-disposition: form-data; name=\"pics\"; filename=\"file1.txt\"\\r\\n'+\n   10        'Content-Type: text/plain\\r\\n'+\n   11        '\\r\\n'+\n   ..\n   19        },\n   20        { headers: {\n   21:           'content-disposition': 'form-data; name=\"pics\"; filename=\"file1.txt\"',\n   22            'Content-Type': 'text/plain',\n   23          },\n   ..\n   35        'Joe Blow\\r\\nalmost tricked you!\\r\\n'+\n   36        '--AaB03x\\r\\n'+\n   37:       'content-disposition: form-data; name=\"pics\"; filename=\"file1.txt\"\\r\\n'+\n   38        'Content-Type: text/plain\\r\\n'+\n   39        '\\r\\n'+\n   ..\n   47        },\n   48        { headers: {\n   49:           'content-disposition': 'form-data; name=\"pics\"; filename=\"file1.txt\"',\n   50            'Content-Type': 'text/plain',\n   51          },\n   ..\n   64        'Joe Blow\\r\\nalmost tricked you!\\r\\n'+\n   65        '--AaB03x\\r\\n'+\n   66:       'content-disposition: form-data; name=\"pics\"; filename=\"file1.txt\"\\r\\n'+\n   67        'Content-Type: text/plain\\r\\n'+\n   68        '\\r\\n'+\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/encoding/beta-sticker-1.png.http:\n    5  \n    6  --\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\n    7: Content-Disposition: form-data; name=\"sticker\"; filename=\"beta-sticker-1.png\"\n    8  Content-Type: image/png\n    9  Content-Transfer-Encoding: base64\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/encoding/binaryfile.tar.gz.http:\n    5  \n    6  --\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\n    7: Content-Disposition: form-data; name=\"file\"; filename=\"binaryfile.tar.gz\"\n    8  Content-Type: application/x-gzip\n    9  Content-Transfer-Encoding: base64\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/encoding/blank.gif.http:\n    5  \n    6  --\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\n    7: Content-Disposition: form-data; name=\"file\"; filename=\"blank.gif\"\n    8  Content-Type: image/gif\n    9  Content-Transfer-Encoding: base64\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/encoding/menu_seperator.png.http:\n    5  \n    6  --\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\n    7: Content-Disposition: form-data; name=\"image\"; filename=\"menu_separator.png\"\n    8  Content-Type: image/png\n    9  Content-Transfer-Encoding: base64\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/encoding/plain.txt.http:\n    5  \n    6  ------TLV0SrKD4z1TRxRhAPUvZ\n    7: Content-Disposition: form-data; name=\"file\"; filename=\"plain.txt\"\n    8  Content-Type: text/plain\n    9  Content-Transfer-Encoding: 7bit\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/no-filename/filename-name.http:\n    5  \n    6  ------WebKitFormBoundarytyE4wkKlZ5CQJVTG\n    7: Content-Disposition: form-data; filename=\"plain.txt\"; name=\"upload\"\n    8  Content-Type: text/plain\n    9  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/no-filename/generic.http:\n    5  \n    6  ------WebKitFormBoundarytyE4wkKlZ5CQJVTG\n    7: Content-Disposition: form-data; name=\"upload\"; filename=\"\"\n    8  Content-Type: text/plain\n    9  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/preamble/crlf.http:\n    6  \n    7  ------TLV0SrKD4z1TRxRhAPUvZ\n    8: Content-Disposition: form-data; name=\"upload\"; filename=\"plain.txt\"\n    9  Content-Type: text/plain\n   10  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/preamble/preamble.http:\n    6  This is a preamble which should be ignored\n    7  ------TLV0SrKD4z1TRxRhAPUvZ\n    8: Content-Disposition: form-data; name=\"upload\"; filename=\"plain.txt\"\n    9  Content-Type: text/plain\n   10  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/special-chars-in-filename/osx-chrome-13.http:\n   17  Content-Disposition: form-data; name=\"title\"\n   18  \n   19: Weird filename\n   20  ------WebKitFormBoundarytyE4wkKlZ5CQJVTG\n   21: Content-Disposition: form-data; name=\"upload\"; filename=\": \\ ? % * | %22 < > . ? ; ' @ # $ ^ & ( ) - _ = + { } [ ] ` ~.txt\"\n   22  Content-Type: text/plain\n   23  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/special-chars-in-filename/osx-firefox-3.6.http:\n   15  Content-Disposition: form-data; name=\"title\"\n   16  \n   17: Weird filename\n   18  -----------------------------9849436581144108930470211272\n   19: Content-Disposition: form-data; name=\"upload\"; filename=\": \\ ? % * | \" < > . &#9731; ; ' @ # $ ^ & ( ) - _ = + { } [ ] ` ~.txt\"\n   20  Content-Type: text/plain\n   21  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/special-chars-in-filename/osx-safari-5.http:\n   14  Content-Disposition: form-data; name=\"title\"\n   15  \n   16: Weird filename\n   17  ------WebKitFormBoundaryQJZ1gvhvdgfisJPJ\n   18: Content-Disposition: form-data; name=\"upload\"; filename=\": \\ ? % * | %22 < > . ? ; ' @ # $ ^ & ( ) - _ = + { } [ ] ` ~.txt\"\n   19  Content-Type: text/plain\n   20  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/special-chars-in-filename/xp-chrome-12.http:\n   16  Content-Disposition: form-data; name=\"title\"\n   17  \n   18: Weird filename\n   19  ------WebKitFormBoundaryEvqBNplR3ByrwQPa\n   20: Content-Disposition: form-data; name=\"upload\"; filename=\" ? % * | %22 < > . ? ; ' @ # $ ^ & ( ) - _ = + { } [ ] ` ~.txt\"\n   21  Content-Type: text/plain\n   22  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/special-chars-in-filename/xp-ie-7.http:\n   14  Content-Disposition: form-data; name=\"title\"\n   15  \n   16: Weird filename\n   17  -----------------------------7db1fe232017c\n   18: Content-Disposition: form-data; name=\"upload\"; filename=\" ? % * | \" < > . &#9731; ; ' @ # $ ^ & ( ) - _ = + { } [ ] ` ~.txt\"\n   19  Content-Type: application/octet-stream\n   20  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/special-chars-in-filename/xp-ie-8.http:\n   14  Content-Disposition: form-data; name=\"title\"\n   15  \n   16: Weird filename\n   17  -----------------------------7db3a8372017c\n   18: Content-Disposition: form-data; name=\"upload\"; filename=\" ? % * | \" < > . &#9731; ; ' @ # $ ^ & ( ) - _ = + { } [ ] ` ~.txt\"\n   19  Content-Type: application/octet-stream\n   20  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/special-chars-in-filename/xp-safari-5.http:\n   14  Content-Disposition: form-data; name=\"title\"\n   15  \n   16: Weird filename\n   17  ------WebKitFormBoundarykmaWSUbu697WN9TM\n   18: Content-Disposition: form-data; name=\"upload\"; filename=\" ? % * | %22 < > . ? ; ' @ # $ ^ & ( ) - _ = + { } [ ] ` ~.txt\"\n   19  Content-Type: text/plain\n   20  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/workarounds/missing-hyphens1.http:\n    5  \n    6  ------TLV0SrKD4z1TRxRhAPUvZ\n    7: Content-Disposition: form-data; name=\"upload\"; filename=\"plain.txt\"\n    8  Content-Type: text/plain\n    9  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/http/workarounds/missing-hyphens2.http:\n    5  \n    6  ------TLV0SrKD4z1TRxRhAPUvZ\n    7: Content-Disposition: form-data; name=\"upload\"; filename=\"plain.txt\"\n    8  Content-Type: text/plain\n    9  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/js/encoding.js:\n    3      type: 'file',\n    4      name: 'image',\n    5:     filename: 'menu_separator.png',\n    6      fixture: 'menu_separator.png',\n    7      sha1: 'c845ca3ea794be298f2a1b79769b71939eaf4e54',\n    .\n   14      type: 'file',\n   15      name: 'sticker',\n   16:     filename: 'beta-sticker-1.png',\n   17      fixture: 'beta-sticker-1.png',\n   18      sha1: '6abbcffd12b4ada5a6a084fe9e4584f846331bc4',\n   ..\n   25      type: 'file',\n   26      name: 'file',\n   27:     filename: 'blank.gif',\n   28      fixture: 'blank.gif',\n   29      sha1: 'a1fdee122b95748d81cee426d717c05b5174fe96',\n   ..\n   36      type: 'file',\n   37      name: 'file',\n   38:     filename: 'binaryfile.tar.gz',\n   39      fixture: 'binaryfile.tar.gz',\n   40      sha1: 'cfabe13b348e5e69287d677860880c52a69d2155',\n   ..\n   47      type: 'file',\n   48      name: 'file',\n   49:     filename: 'plain.txt',\n   50      fixture: 'plain.txt',\n   51      sha1: 'b31d07bac24ac32734de88b3687dddb10e976872',\n   ..\n   62      type: 'file',\n   63      name: 'upload',\n   64:     filename: 'pf1y5.png',\n   65      fixture: 'pf1y5.png',\n   66      sha1: '805cc640c5b182e86f2b5c8ebf34ecf063cd34fd',\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/js/no-filename.js:\n    1  module.exports['generic.http'] = [\n    2:   {type: 'file', name: 'upload', filename: '', fixture: 'plain.txt',\n    3    sha1: 'b31d07bac24ac32734de88b3687dddb10e976872'},\n    4  ];\n    5  \n    6: module.exports['filename-name.http'] = [\n    7:   {type: 'file', name: 'upload', filename: 'plain.txt', fixture: 'plain.txt',\n    8    sha1: 'b31d07bac24ac32734de88b3687dddb10e976872'},\n    9  ];\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/js/preamble.js:\n    1  module.exports['crlf.http'] = [\n    2:   {type: 'file', name: 'upload', filename: 'plain.txt', fixture: 'plain.txt',\n    3    sha1: 'b31d07bac24ac32734de88b3687dddb10e976872'},\n    4  ];\n    5  \n    6  module.exports['preamble.http'] = [\n    7:   {type: 'file', name: 'upload', filename: 'plain.txt', fixture: 'plain.txt',\n    8    sha1: 'b31d07bac24ac32734de88b3687dddb10e976872'},\n    9  ];\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/js/special-chars-in-filename.js:\n    1: var properFilename = 'funkyfilename.txt';\n    2  \n    3: function expect(filename) {\n    4    return [\n    5      {\n    6        type: 'field',\n    7        name: 'title',\n    8:       value: 'Weird filename',\n    9      },\n   10      {\n   11        type: 'file',\n   12        name: 'upload',\n   13:       filename: filename,\n   14:       fixture: properFilename,\n   15      },\n   16    ];\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/fixture/js/workarounds.js:\n    1  module.exports['missing-hyphens1.http'] = [\n    2:   {type: 'file', name: 'upload', filename: 'plain.txt', fixture: 'plain.txt',\n    3    sha1: 'b31d07bac24ac32734de88b3687dddb10e976872'},\n    4  ];\n    5  module.exports['missing-hyphens2.http'] = [\n    6:   {type: 'file', name: 'upload', filename: 'plain.txt', fixture: 'plain.txt',\n    7    sha1: 'b31d07bac24ac32734de88b3687dddb10e976872'},\n    8  ];\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/standalone/test-content-transfer-encoding.js:\n   24    var body =\n   25      '--foo\\r\\n' +\n   26:     'Content-Disposition: form-data; name=\"file1\"; filename=\"file1\"\\r\\n' +\n   27      'Content-Type: application/octet-stream\\r\\n' +\n   28      '\\r\\nThis is the first file\\r\\n' +\n   29      '--foo\\r\\n' +\n   30      'Content-Type: application/octet-stream\\r\\n' +\n   31:     'Content-Disposition: form-data; name=\"file2\"; filename=\"file2\"\\r\\n' +\n   32      'Content-Transfer-Encoding: unknown\\r\\n' +\n   33      '\\r\\nThis is the second file\\r\\n' +\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/standalone/test-invalid.js:\n   23    req.set('Content-Type', 'multipart/form-data; boundary=foo')\n   24    req.write('--foo\\r\\n')\n   25:   req.write('Content-filename=\"foo.txt\"\\r\\n')\n   26    req.write('\\r\\n')\n   27    req.write('some text here')\n   28:   req.write('Content-Disposition: form-data; name=\"text\"; filename=\"bar.txt\"\\r\\n')\n   29    req.write('\\r\\n')\n   30    req.write('some more text stuff')\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/standalone/test-issue-19.js:\n   36      \"\\r\\n\" +\n   37      \"------WebKitFormBoundaryvfUZhxgsZDO7FXLF\\r\\n\" +\n   38:     \"Content-Disposition: form-data; name=\\\"upload\\\"; filename=\\\"blah1.txt\\\"\\r\\n\" +\n   39      \"Content-Type: text/plain\\r\\n\" +\n   40      \"\\r\\n\" +\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/standalone/test-issue-21.js:\n   39      \"\\r\\n\" +\n   40      \"------WebKitFormBoundaryvfUZhxgsZDO7FXLF\\r\\n\" +\n   41:     \"Content-Disposition: form-data; name=\\\"upload\\\"; filename=\\\"blah1.txt\\\"\\r\\n\" +\n   42      \"Content-Type: text/plain\\r\\n\" +\n   43      \"\\r\\n\" +\n   ..\n   45      \"\\r\\n\" +\n   46      \"------WebKitFormBoundaryvfUZhxgsZDO7FXLF\\r\\n\" +\n   47:     \"Content-Disposition: form-data; name=\\\"upload\\\"; filename=\\\"blah2.txt\\\"\\r\\n\" +\n   48      \"Content-Type: text/plain\\r\\n\" +\n   49      \"\\r\\n\" +\n   ..\n   51      \"\\r\\n\" +\n   52      \"------WebKitFormBoundaryvfUZhxgsZDO7FXLF\\r\\n\" +\n   53:     \"Content-Disposition: form-data; name=\\\"upload\\\"; filename=\\\"blah3.txt\\\"\\r\\n\" +\n   54      \"Content-Type: text/plain\\r\\n\" +\n   55      \"\\r\\n\" +\n   ..\n   57      \"\\r\\n\" +\n   58      \"------WebKitFormBoundaryvfUZhxgsZDO7FXLF\\r\\n\" +\n   59:     \"Content-Disposition: form-data; name=\\\"upload\\\"; filename=\\\"blah4.txt\\\"\\r\\n\" +\n   60      \"Content-Type: text/plain\\r\\n\" +\n   61      \"\\r\\n\" +\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/multiparty/test/standalone/test-issue-5.js:\n   21    var boundary = \"------WebKitFormBoundaryvfUZhxgsZDO7FXLF\\r\\n\";\n   22    var oneAttachment = boundary +\n   23:     \"Content-Disposition: form-data; name=\\\"upload\\\"; filename=\\\"blah1.txt\\\"\\r\\n\" +\n   24      \"Content-Type: text/plain\\r\\n\" +\n   25      \"\\r\\n\" +\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/negotiator/package.json:\n   40    \"main\": \"lib/negotiator.js\",\n   41    \"readme\": \"# Negotiator\\n\\nAn HTTP content negotiator for node.js written in javascript.\\n\\n# Accept Negotiation\\n\\n    Negotiator = require('negotiator')\\n\\n    availableMediaTypes = ['text/html', 'text/plain', 'application/json']\\n\\n    // The negotiator constructor receives a request object\\n    negotiator = new Negotiator(request)\\n\\n    // Let's say Accept header is 'text/html, application/*;q=0.2, image/jpeg;q=0.8'\\n\\n    negotiator.preferredMediaTypes()\\n    // -> ['text/html', 'image/jpeg', 'application/*']\\n\\n    negotiator.preferredMediaTypes(availableMediaTypes)\\n    // -> ['text/html', 'application/json']\\n\\n    negotiator.preferredMediaType(availableMediaTypes)\\n    // -> 'text/html'\\n\\nYou can check a working example at `examples/accept.js`.\\n\\n## Methods\\n\\n`preferredMediaTypes(availableMediaTypes)`:\\n\\nReturns an array of preferred media types ordered by priority from a list of available media types.\\n\\n`preferredMediaType(availableMediaType)`:\\n\\nReturns the top preferred media type from a list of available media types.\\n\\n# Accept-Language Negotiation\\n\\n    Negotiator = require('negotiator')\\n\\n    negotiator = new Negotiator(request)\\n\\n    availableLanguages = 'en', 'es', 'fr'\\n\\n    // Let's say Accept-Language header is 'en;q=0.8, es, pt'\\n\\n    negotiator.preferredLanguages()\\n    // -> ['es', 'pt', 'en']\\n\\n    negotiator.preferredLanguages(availableLanguages)\\n    // -> ['es', 'en']\\n\\n    language = negotiator.preferredLanguage(availableLanguages)\\n    // -> 'es'\\n\\nYou can check a working example at `examples/language.js`.\\n\\n## Methods\\n\\n`preferredLanguages(availableLanguages)`:\\n\\nReturns an array of preferred languages ordered by priority from a list of available languages.\\n\\n`preferredLanguage(availableLanguages)`:\\n\\nReturns the top preferred language from a list of available languages.\\n\\n# Accept-Charset Negotiation\\n\\n    Negotiator = require('negotiator')\\n\\n    availableCharsets = ['utf-8', 'iso-8859-1', 'iso-8859-5']\\n\\n    negotiator = new Negotiator(request)\\n\\n    // Let's say Accept-Charset header is 'utf-8, iso-8859-1;q=0.8, utf-7;q=0.2'\\n\\n    negotiator.preferredCharsets()\\n    // -> ['utf-8', 'iso-8859-1', 'utf-7']\\n\\n    negotiator.preferredCharsets(availableCharsets)\\n    // -> ['utf-8', 'iso-8859-1']\\n\\n    negotiator.preferredCharset(availableCharsets)\\n    // -> 'utf-8'\\n\\nYou can check a working example at `examples/charset.js`.\\n\\n## Methods\\n\\n`preferredCharsets(availableCharsets)`:\\n\\nReturns an array of preferred charsets ordered by priority from a list of available charsets.\\n\\n`preferredCharset(availableCharsets)`:\\n\\nReturns the top preferred charset from a list of available charsets.\\n\\n# Accept-Encoding Negotiation\\n\\n    Negotiator = require('negotiator').Negotiator\\n\\n    availableEncodings = ['identity', 'gzip']\\n\\n    negotiator = new Negotiator(request)\\n\\n    // Let's say Accept-Encoding header is 'gzip, compress;q=0.2, identity;q=0.5'\\n\\n    negotiator.preferredEncodings()\\n    // -> ['gzip', 'identity', 'compress']\\n\\n    negotiator.preferredEncodings(availableEncodings)\\n    // -> ['gzip', 'identity']\\n\\n    negotiator.preferredEncoding(availableEncodings)\\n    // -> 'gzip'\\n\\nYou can check a working example at `examples/encoding.js`.\\n\\n## Methods\\n\\n`preferredEncodings(availableEncodings)`:\\n\\nReturns an array of preferred encodings ordered by priority from a list of available encodings.\\n\\n`preferredEncoding(availableEncodings)`:\\n\\nReturns the top preferred encoding from a list of available encodings.\\n\\n# License\\n\\nMIT\\n\",\n   42:   \"readmeFilename\": \"readme.md\",\n   43    \"bugs\": {\n   44      \"url\": \"https://github.com/federomero/negotiator/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/pause/package.json:\n   15    \"main\": \"index\",\n   16    \"readme\": \"\\n# pause\\n\\n  Pause streams...\\n\\n## License \\n\\n(The MIT License)\\n\\nCopyright (c) 2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\",\n   17:   \"readmeFilename\": \"Readme.md\",\n   18    \"_id\": \"pause@0.0.1\",\n   19    \"dist\": {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/qs/package.json:\n   29    },\n   30    \"readme\": \"# node-querystring\\n\\n  query string parser for node and the browser supporting nesting, as it was removed from `0.3.x`, so this library provides the previous and commonly desired behaviour (and twice as fast). Used by [express](http://expressjs.com), [connect](http://senchalabs.github.com/connect) and others.\\n\\n## Installation\\n\\n    $ npm install qs\\n\\n## Examples\\n\\n```js\\nvar qs = require('qs');\\n\\nqs.parse('user[name][first]=Tobi&user[email]=tobi@learnboost.com');\\n// => { user: { name: { first: 'Tobi' }, email: 'tobi@learnboost.com' } }\\n\\nqs.stringify({ user: { name: 'Tobi', email: 'tobi@learnboost.com' }})\\n// => user[name]=Tobi&user[email]=tobi%40learnboost.com\\n```\\n\\n## Testing\\n\\nInstall dev dependencies:\\n\\n    $ npm install -d\\n\\nand execute:\\n\\n    $ make test\\n\\nbrowser:\\n\\n    $ open test/browser/index.html\\n\\n## License \\n\\n(The MIT License)\\n\\nCopyright (c) 2010 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\",\n   31:   \"readmeFilename\": \"Readme.md\",\n   32    \"bugs\": {\n   33      \"url\": \"https://github.com/visionmedia/node-querystring/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/connect/node_modules/raw-body/package.json:\n   35    },\n   36    \"readme\": \"# Raw Body [![Build Status](https://travis-ci.org/stream-utils/raw-body.png)](https://travis-ci.org/stream-utils/raw-body)\\n\\nGets the entire buffer of a stream either as a `Buffer` or a string.\\nValidates the stream's length against an expected length and maximum limit.\\nIdeal for parsing request bodies.\\n\\n## API\\n\\n```js\\nvar getRawBody = require('raw-body')\\n\\napp.use(function (req, res, next) {\\n  getRawBody(req, {\\n    length: req.headers['content-length'],\\n    limit: '1mb',\\n    encoding: 'utf8'\\n  }, function (err, string) {\\n    if (err)\\n      return next(err)\\n\\n    req.text = string\\n    next()\\n  })\\n})\\n```\\n\\nor in a Koa generator:\\n\\n```js\\napp.use(function* (next) {\\n  var string = yield getRawBody(this.req, {\\n    length: this.length,\\n    limit: '1mb',\\n    encoding: 'utf8'\\n  })\\n})\\n```\\n\\n### getRawBody(stream, [options], [callback])\\n\\nReturns a thunk for yielding with generators.\\n\\nOptions:\\n\\n- `length` - The length length of the stream.\\n  If the contents of the stream do not add up to this length,\\n  an `400` error code is returned.\\n- `limit` - The byte limit of the body.\\n  If the body ends up being larger than this limit,\\n  a `413` error code is returned.\\n- `encoding` - The requested encoding.\\n  By default, a `Buffer` instance will be returned.\\n  Most likely, you want `utf8`.\\n  You can use any type of encoding supported by [StringDecoder](http://nodejs.org/api/string_decoder.html).\\n  You can also pass `true` which sets it to the default `utf8`\\n\\n`callback(err, res)`:\\n\\n- `err` - the following attributes will be defined if applicable:\\n\\n    - `limit` - the limit in bytes\\n    - `length` and `expected` - the expected length of the stream\\n    - `received` - the received bytes\\n    - `status` and `statusCode` - the corresponding status code for the error\\n    - `type` - either `entity.too.large`, `request.size.invalid`, or `stream.encoding.set`\\n\\n- `res` - the result, either as a `String` if an encoding was set or a `Buffer` otherwise.\\n\\nIf an error occurs, the stream will be paused,\\nand you are responsible for correctly disposing the stream.\\nFor HTTP requests, no handling is required if you send a response.\\nFor streams that use file descriptors, you should `stream.destroy()` or `stream.close()` to prevent leaks.\\n\\n## License\\n\\nThe MIT License (MIT)\\n\\nCopyright (c) 2013 Jonathan Ong me@jongleberry.com\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\\n\",\n   37:   \"readmeFilename\": \"README.md\",\n   38    \"homepage\": \"https://github.com/stream-utils/raw-body\",\n   39    \"_id\": \"raw-body@1.1.2\",\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/cookie/package.json:\n   28    },\n   29    \"readme\": \"# cookie [![Build Status](https://secure.travis-ci.org/shtylman/node-cookie.png?branch=master)](http://travis-ci.org/shtylman/node-cookie) #\\n\\ncookie is a basic cookie parser and serializer. It doesn't make assumptions about how you are going to deal with your cookies. It basically just provides a way to read and write the HTTP cookie headers.\\n\\nSee [RFC6265](http://tools.ietf.org/html/rfc6265) for details about the http header for cookies.\\n\\n## how?\\n\\n```\\nnpm install cookie\\n```\\n\\n```javascript\\nvar cookie = require('cookie');\\n\\nvar hdr = cookie.serialize('foo', 'bar');\\n// hdr = 'foo=bar';\\n\\nvar cookies = cookie.parse('foo=bar; cat=meow; dog=ruff');\\n// cookies = { foo: 'bar', cat: 'meow', dog: 'ruff' };\\n```\\n\\n## more\\n\\nThe serialize function takes a third parameter, an object, to set cookie options. See the RFC for valid values.\\n\\n### path\\n> cookie path\\n\\n### expires\\n> absolute expiration date for the cookie (Date object)\\n\\n### maxAge\\n> relative max age of the cookie from when the client receives it (seconds)\\n\\n### domain\\n> domain for the cookie\\n\\n### secure\\n> true or false\\n\\n### httpOnly\\n> true or false\\n\\n\",\n   30:   \"readmeFilename\": \"README.md\",\n   31    \"bugs\": {\n   32      \"url\": \"https://github.com/shtylman/node-cookie/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/cookie-signature/package.json:\n   19    \"main\": \"index\",\n   20    \"readme\": \"\\n# cookie-signature\\n\\n  Sign and unsign cookies.\\n\\n## Example\\n\\n```js\\nvar cookie = require('cookie-signature');\\n\\nvar val = cookie.sign('hello', 'tobiiscool');\\nval.should.equal('hello.DGDUkGlIkCzPz+C0B064FNgHdEjox7ch8tOBGslZ5QI');\\n\\nvar val = cookie.sign('hello', 'tobiiscool');\\ncookie.unsign(val, 'tobiiscool').should.equal('hello');\\ncookie.unsign(val, 'luna').should.be.false;\\n```\\n\\n## License \\n\\n(The MIT License)\\n\\nCopyright (c) 2012 LearnBoost &lt;tj@learnboost.com&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\",\n   21:   \"readmeFilename\": \"Readme.md\",\n   22    \"_id\": \"cookie-signature@1.0.1\",\n   23    \"dist\": {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/debug/package.json:\n   37    },\n   38    \"readme\": \"# debug\\n\\n  tiny node.js debugging utility modelled after node core's debugging technique.\\n\\n## Installation\\n\\n```\\n$ npm install debug\\n```\\n\\n## Usage\\n\\n With `debug` you simply invoke the exported function to generate your debug function, passing it a name which will determine if a noop function is returned, or a decorated `console.error`, so all of the `console` format string goodies you're used to work fine. A unique color is selected per-function for visibility.\\n \\nExample _app.js_:\\n\\n```js\\nvar debug = require('debug')('http')\\n  , http = require('http')\\n  , name = 'My App';\\n\\n// fake app\\n\\ndebug('booting %s', name);\\n\\nhttp.createServer(function(req, res){\\n  debug(req.method + ' ' + req.url);\\n  res.end('hello\\\\n');\\n}).listen(3000, function(){\\n  debug('listening');\\n});\\n\\n// fake worker of some kind\\n\\nrequire('./worker');\\n```\\n\\nExample _worker.js_:\\n\\n```js\\nvar debug = require('debug')('worker');\\n\\nsetInterval(function(){\\n  debug('doing some work');\\n}, 1000);\\n```\\n\\n The __DEBUG__ environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:\\n\\n  ![debug http and worker](http://f.cl.ly/items/18471z1H402O24072r1J/Screenshot.png)\\n\\n  ![debug worker](http://f.cl.ly/items/1X413v1a3M0d3C2c1E0i/Screenshot.png)\\n\\n## Millisecond diff\\n\\n  When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \\\"+NNNms\\\" will show you how much time was spent between calls.\\n\\n  ![](http://f.cl.ly/items/2i3h1d3t121M2Z1A3Q0N/Screenshot.png)\\n\\n  When stderr is not a TTY, `Date#toUTCString()` is used, making it more useful for logging the debug information as shown below:\\n  _(NOTE: Debug now uses stderr instead of stdout, so the correct shell command for this example is actually `DEBUG=* node example/worker 2> out &`)_\\n  \\n  ![](http://f.cl.ly/items/112H3i0e0o0P0a2Q2r11/Screenshot.png)\\n  \\n## Conventions\\n\\n If you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \\\":\\\" to separate features. For example \\\"bodyParser\\\" from Connect would then be \\\"connect:bodyParser\\\". \\n\\n## Wildcards\\n\\n  The \\\"*\\\" character may be used as a wildcard. Suppose for example your library has debuggers named \\\"connect:bodyParser\\\", \\\"connect:compress\\\", \\\"connect:session\\\", instead of listing all three with `DEBUG=connect:bodyParser,connect.compress,connect:session`, you may simply do `DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\\n\\n  You can also exclude specific debuggers by prefixing them with a \\\"-\\\" character.  For example, `DEBUG=* -connect:*` would include all debuggers except those starting with \\\"connect:\\\".\\n\\n## Browser support\\n\\n Debug works in the browser as well, currently persisted by `localStorage`. For example if you have `worker:a` and `worker:b` as shown below, and wish to debug both type `debug.enable('worker:*')` in the console and refresh the page, this will remain until you disable with `debug.disable()`. \\n\\n```js\\na = debug('worker:a');\\nb = debug('worker:b');\\n\\nsetInterval(function(){\\n  a('doing some work');\\n}, 1000);\\n\\nsetInterval(function(){\\n  a('doing some work');\\n}, 1200);\\n```\\n\\n## License \\n\\n(The MIT License)\\n\\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\",\n   39:   \"readmeFilename\": \"Readme.md\",\n   40    \"bugs\": {\n   41      \"url\": \"https://github.com/visionmedia/debug/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/fresh/package.json:\n   19    },\n   20    \"readme\": \"\\n# node-fresh\\n\\n  HTTP response freshness testing\\n\\n## fresh(req, res)\\n\\n Check freshness of `req` and `res` headers.\\n\\n When the cache is \\\"fresh\\\" __true__ is returned,\\n otherwise __false__ is returned to indicate that\\n the cache is now stale.\\n\\n## Example:\\n\\n```js\\nvar req = { 'if-none-match': 'tobi' };\\nvar res = { 'etag': 'luna' };\\nfresh(req, res);\\n// => false\\n\\nvar req = { 'if-none-match': 'tobi' };\\nvar res = { 'etag': 'tobi' };\\nfresh(req, res);\\n// => true\\n```\\n\\n## Installation\\n\\n```\\n$ npm install fresh\\n```\\n\\n## License \\n\\n(The MIT License)\\n\\nCopyright (c) 2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\",\n   21:   \"readmeFilename\": \"Readme.md\",\n   22    \"bugs\": {\n   23      \"url\": \"https://github.com/visionmedia/node-fresh/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/merge-descriptors/package.json:\n   20    },\n   21    \"readme\": \"# Merge Descriptors [![Build Status](https://travis-ci.org/jonathanong/merge-descriptors.png)](https://travis-ci.org/jonathanong/merge-descriptors)\\n\\nMerge objects using descriptors.\\n\\n```js\\nvar thing = {\\n  get name() {\\n    return 'jon'\\n  }\\n}\\n\\nvar animal = {\\n\\n}\\n\\nmerge(animal, thing)\\n\\nanimal.name === 'jon'\\n```\\n\\n## API\\n\\n### merge(destination, source)\\n\\nOverwrites `destination`'s descriptors with `source`'s.\\n\\n## License\\n\\nThe MIT License (MIT)\\n\\nCopyright (c) 2013 Jonathan Ong me@jongleberry.com\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\",\n   22:   \"readmeFilename\": \"README.md\",\n   23    \"homepage\": \"https://github.com/jonathanong/merge-descriptors\",\n   24    \"_id\": \"merge-descriptors@0.0.1\",\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/methods/package.json:\n   20    },\n   21    \"readme\": \"\\n# Methods\\n\\n  HTTP verbs that node core's parser supports.\\n\",\n   22:   \"readmeFilename\": \"Readme.md\",\n   23    \"bugs\": {\n   24      \"url\": \"https://github.com/visionmedia/node-methods/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/mkdirp/package.json:\n   25    \"license\": \"MIT\",\n   26    \"readme\": \"# mkdirp\\n\\nLike `mkdir -p`, but in node.js!\\n\\n[![build status](https://secure.travis-ci.org/substack/node-mkdirp.png)](http://travis-ci.org/substack/node-mkdirp)\\n\\n# example\\n\\n## pow.js\\n\\n```js\\nvar mkdirp = require('mkdirp');\\n    \\nmkdirp('/tmp/foo/bar/baz', function (err) {\\n    if (err) console.error(err)\\n    else console.log('pow!')\\n});\\n```\\n\\nOutput\\n\\n```\\npow!\\n```\\n\\nAnd now /tmp/foo/bar/baz exists, huzzah!\\n\\n# methods\\n\\n```js\\nvar mkdirp = require('mkdirp');\\n```\\n\\n## mkdirp(dir, mode, cb)\\n\\nCreate a new directory and any necessary subdirectories at `dir` with octal\\npermission string `mode`.\\n\\nIf `mode` isn't specified, it defaults to `0777 & (~process.umask())`.\\n\\n`cb(err, made)` fires with the error or the first directory `made`\\nthat had to be created, if any.\\n\\n## mkdirp.sync(dir, mode)\\n\\nSynchronously create a new directory and any necessary subdirectories at `dir`\\nwith octal permission string `mode`.\\n\\nIf `mode` isn't specified, it defaults to `0777 & (~process.umask())`.\\n\\nReturns the first directory that had to be created, if any.\\n\\n# install\\n\\nWith [npm](http://npmjs.org) do:\\n\\n```\\nnpm install mkdirp\\n```\\n\\n# license\\n\\nMIT\\n\",\n   27:   \"readmeFilename\": \"readme.markdown\",\n   28    \"bugs\": {\n   29      \"url\": \"https://github.com/substack/node-mkdirp/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/range-parser/package.json:\n   15    },\n   16    \"readme\": \"\\n# node-range-parser\\n\\n  Range header field parser.\\n\\n## Example:\\n\\n```js\\nassert(-1 == parse(200, 'bytes=500-20'));\\nassert(-2 == parse(200, 'bytes=malformed'));\\nparse(200, 'bytes=0-499').should.eql(arr('bytes', [{ start: 0, end: 199 }]));\\nparse(1000, 'bytes=0-499').should.eql(arr('bytes', [{ start: 0, end: 499 }]));\\nparse(1000, 'bytes=40-80').should.eql(arr('bytes', [{ start: 40, end: 80 }]));\\nparse(1000, 'bytes=-500').should.eql(arr('bytes', [{ start: 500, end: 999 }]));\\nparse(1000, 'bytes=-400').should.eql(arr('bytes', [{ start: 600, end: 999 }]));\\nparse(1000, 'bytes=500-').should.eql(arr('bytes', [{ start: 500, end: 999 }]));\\nparse(1000, 'bytes=400-').should.eql(arr('bytes', [{ start: 400, end: 999 }]));\\nparse(1000, 'bytes=0-0').should.eql(arr('bytes', [{ start: 0, end: 0 }]));\\nparse(1000, 'bytes=-1').should.eql(arr('bytes', [{ start: 999, end: 999 }]));\\nparse(1000, 'items=0-5').should.eql(arr('items', [{ start: 0, end: 5 }]));\\nparse(1000, 'bytes=40-80,-1').should.eql(arr('bytes', [{ start: 40, end: 80 }, { start: 999, end: 999 }]));\\n```\\n\\n## Installation\\n\\n```\\n$ npm install range-parser\\n```\",\n   17:   \"readmeFilename\": \"Readme.md\",\n   18    \"_id\": \"range-parser@0.0.4\",\n   19    \"dist\": {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/send/package.json:\n   33    \"main\": \"index\",\n   34    \"readme\": \"# send\\n\\n  Send is Connect's `static()` extracted for generalized use, a streaming static file\\n  server supporting partial responses (Ranges), conditional-GET negotiation, high test coverage, and granular events which may be leveraged to take appropriate actions in your application or framework.\\n\\n## Installation\\n\\n    $ npm install send\\n\\n## Examples\\n\\n  Small:\\n\\n```js\\nvar http = require('http');\\nvar send = require('send');\\n\\nvar app = http.createServer(function(req, res){\\n  send(req, req.url).pipe(res);\\n}).listen(3000);\\n```\\n\\n  Serving from a root directory with custom error-handling:\\n\\n```js\\nvar http = require('http');\\nvar send = require('send');\\nvar url = require('url');\\n\\nvar app = http.createServer(function(req, res){\\n  // your custom error-handling logic:\\n  function error(err) {\\n    res.statusCode = err.status || 500;\\n    res.end(err.message);\\n  }\\n\\n  // your custom directory handling logic:\\n  function redirect() {\\n    res.statusCode = 301;\\n    res.setHeader('Location', req.url + '/');\\n    res.end('Redirecting to ' + req.url + '/');\\n  }\\n\\n  // transfer arbitrary files from within\\n  // /www/example.com/public/*\\n  send(req, url.parse(req.url).pathname)\\n  .root('/www/example.com/public')\\n  .on('error', error)\\n  .on('directory', redirect)\\n  .pipe(res);\\n}).listen(3000);\\n```\\n\\n## API\\n\\n### Events\\n\\n  - `error` an error occurred `(err)`\\n  - `directory` a directory was requested\\n  - `file` a file was requested `(path, stat)`\\n  - `stream` file streaming has started `(stream)`\\n  - `end` streaming has completed\\n\\n### .root(dir)\\n\\n  Serve files relative to `path`. Aliased as `.from(dir)`.\\n\\n### .index(path)\\n\\n  By default send supports \\\"index.html\\\" files, to disable this\\n  invoke `.index(false)` or to supply a new index pass a string.\\n\\n### .maxage(ms)\\n\\n  Provide a max-age in milliseconds for http caching, defaults to 0.\\n\\n### .hidden(bool)\\n\\n  Enable or disable transfer of hidden files, defaults to false.\\n\\n## Error-handling\\n\\n  By default when no `error` listeners are present an automatic response will be made, otherwise you have full control over the response, aka you may show a 5xx page etc.\\n\\n## Caching\\n\\n  It does _not_ perform internal caching, you should use a reverse proxy cache such\\n  as Varnish for this, or those fancy things called CDNs. If your application is small enough that it would benefit from single-node memory caching, it's small enough that it does not need caching at all ;).\\n\\n## Debugging\\n\\n To enable `debug()` instrumentation output export __DEBUG__:\\n\\n```\\n$ DEBUG=send node app\\n```\\n\\n## Running tests\\n\\n```\\n$ npm install\\n$ make test\\n```\\n\\n## License \\n\\n(The MIT License)\\n\\nCopyright (c) 2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\",\n   35:   \"readmeFilename\": \"Readme.md\",\n   36    \"bugs\": {\n   37      \"url\": \"https://github.com/visionmedia/send/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express/node_modules/send/node_modules/mime/package.json:\n   27    \"version\": \"1.2.11\",\n   28    \"readme\": \"# mime\\n\\nComprehensive MIME type mapping API. Includes all 600+ types and 800+ extensions defined by the Apache project, plus additional types submitted by the node.js community.\\n\\n## Install\\n\\nInstall with [npm](http://github.com/isaacs/npm):\\n\\n    npm install mime\\n\\n## API - Queries\\n\\n### mime.lookup(path)\\nGet the mime type associated with a file, if no mime type is found `application/octet-stream` is returned. Performs a case-insensitive lookup using the extension in `path` (the substring after the last '/' or '.').  E.g.\\n\\n    var mime = require('mime');\\n\\n    mime.lookup('/path/to/file.txt');         // => 'text/plain'\\n    mime.lookup('file.txt');                  // => 'text/plain'\\n    mime.lookup('.TXT');                      // => 'text/plain'\\n    mime.lookup('htm');                       // => 'text/html'\\n\\n### mime.default_type\\nSets the mime type returned when `mime.lookup` fails to find the extension searched for. (Default is `application/octet-stream`.)\\n\\n### mime.extension(type)\\nGet the default extension for `type`\\n\\n    mime.extension('text/html');                 // => 'html'\\n    mime.extension('application/octet-stream');  // => 'bin'\\n\\n### mime.charsets.lookup()\\n\\nMap mime-type to charset\\n\\n    mime.charsets.lookup('text/plain');        // => 'UTF-8'\\n\\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\\n\\n## API - Defining Custom Types\\n\\nThe following APIs allow you to add your own type mappings within your project.  If you feel a type should be included as part of node-mime, see [requesting new types](https://github.com/broofa/node-mime/wiki/Requesting-New-Types).\\n\\n### mime.define()\\n\\nAdd custom mime/extension mappings\\n\\n    mime.define({\\n        'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],\\n        'application/x-my-type': ['x-mt', 'x-mtt'],\\n        // etc ...\\n    });\\n\\n    mime.lookup('x-sft');                 // => 'text/x-some-format'\\n\\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\\n\\n    mime.extension('text/x-some-format'); // => 'x-sf'\\n\\n### mime.load(filepath)\\n\\nLoad mappings from an Apache \\\".types\\\" format file\\n\\n    mime.load('./my_project.types');\\n\\nThe .types file format is simple -  See the `types` dir for examples.\\n\",\n   29:   \"readmeFilename\": \"README.md\",\n   30    \"bugs\": {\n   31      \"url\": \"https://github.com/broofa/node-mime/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/package.json:\n   40      \"lib\": \"./lib\"\n   41    },\n   42:   \"readme\": \"Express3 Handlebars\\n===================\\n\\nA [Handlebars][] view engine for [Express][] which doesn't suck.\\n\\n[![Dependency Status](https://david-dm.org/ericf/express3-handlebars.png)][status]\\n\\n\\n[Express]: https://github.com/visionmedia/express\\n[Handlebars]: https://github.com/wycats/handlebars.js\\n[status]: https://david-dm.org/ericf/express3-handlebars\\n\\n\\nGoals & Design\\n--------------\\n\\nI created this project out of frustration with the existing Handlebars view\\nengines for Express. As of version 3.x, Express got out of the business of being\\na generic view engine — this was a great decision — leaving developers to\\nimplement the concepts of layouts, partials, and doing file I/O for their\\ntemplate engines of choice.\\n\\n### Goals and Features\\n\\nAfter building a half-dozen Express apps, I developed requirements and opinions\\nabout what a Handlebars view engine should provide and how it should be\\nimplemented. The following is that list:\\n\\n* Add back the concept of \\\"layout\\\", which was removed in Express 3.x.\\n\\n* Add back the concept of \\\"partials\\\" via Handlebars' partials mechanism.\\n\\n* Support a directory of partials; e.g., `{{> foo/bar}}` which exists on the\\n  file system at `views/partials/foo/bar.handlebars` by default.\\n\\n* Smart file system I/O and template caching. When in development, templates are\\n  always loaded from disk. In production, raw files and compiled templates are\\n  cached, including partials.\\n\\n* All async and non-blocking. File system I/O is slow and servers should not be\\n  blocked from handling requests while reading from disk. I/O queuing is used to\\n  avoid doing unnecessary work.\\n\\n* Ability to expose precompiled templates and partials to the client, enabling\\n  template sharing and reuse.\\n\\n* Ability to use a different Handlebars module/implementation other than the\\n  Handlebars npm package.\\n\\n### Package Design\\n\\nThis package was designed to work great for both the simple and complex use\\ncases. I _intentionally_ made sure the full implementation is exposed and is\\neasily overrideable.\\n\\nThe package exports a function which can be invoked with no arguments or with a\\n`config` object and it will return a function (closed over sane defaults) which\\ncan be registered with an Express app. It's an engine factory function.\\n\\nThis exported engine factory has two properties which expose the underlying\\nimplementation:\\n\\n* `ExpressHandlebars()`: The constructor function which holds the internal\\n  implementation on its `prototype`. This produces instance objects which store\\n  their configuration, `compiled` and `precompiled` templates, and expose an\\n  `engine()` function which can be registered with an Express app.\\n\\n* `create()`: A convenience factory function for creating `ExpressHandlebars`\\n  instances.\\n\\nAn instance-based approach is used so that multiple `ExpressHandlebars`\\ninstances can be created with their own configuration, templates, partials, and\\nhelpers.\\n\\n\\nInstallation\\n------------\\n\\nInstall using npm:\\n\\n```shell\\n$ npm install express3-handlebars\\n```\\n\\n\\nUsage\\n-----\\n\\nThis view engine uses sane defaults that leverage the \\\"Express-way\\\" of\\nstructuring an app's views. This makes it trivial to use in basic apps:\\n\\n### Basic Usage\\n\\n**Directory Structure:**\\n\\n```\\n.\\n├── app.js\\n└── views\\n    ├── home.handlebars\\n    └── layouts\\n        └── main.handlebars\\n\\n2 directories, 3 files\\n```\\n\\n**app.js:**\\n\\nCreates a super simple Express app which shows the basic way to register a\\nHandlebars view engine using this package.\\n\\n```javascript\\nvar express = require('express'),\\n    exphbs  = require('express3-handlebars'),\\n\\n    app = express();\\n\\napp.engine('handlebars', exphbs({defaultLayout: 'main'}));\\napp.set('view engine', 'handlebars');\\n\\napp.get('/', function (req, res) {\\n    res.render('home');\\n});\\n\\napp.listen(3000);\\n```\\n\\n**views/layouts/main.handlebars:**\\n\\nThe main layout is the HTML page wrapper which can be reused for the different\\nviews of the app. `{{{body}}}` is used as a placeholder for where the main\\ncontent should be rendered.\\n\\n```html\\n<!doctype html>\\n<html>\\n<head>\\n    <meta charset=\\\"utf-8\\\" />\\n    <title>Example App</title>\\n</head>\\n<body>\\n\\n    {{{body}}}\\n\\n</body>\\n</html>\\n```\\n\\n**views/home.handlebars:**\\n\\nThe content for the app's home view which will be rendered into the layout's\\n`{{{body}}}`.\\n\\n```html\\n<h1>Example App: Home</h1>\\n```\\n\\n#### Running the Example\\n\\nThe above example is bundled in this package's [examples directory][], where\\nit can be run by:\\n\\n```shell\\n$ cd examples/basic/ && node app\\n```\\n\\n### Using Instances\\n\\nAnother way to use this view engine is to create an instance(s) of\\n`ExpressHandlebars`, allowing access to the full API:\\n\\n```javascript\\nvar express = require('express'),\\n    exphbs  = require('express3-handlebars'),\\n\\n    app = express(),\\n    hbs = exphbs.create({ /* config */ });\\n\\n// Register `hbs.engine` with the Express app.\\napp.engine('handlebars', hbs.engine);\\napp.set('view engine', 'handlebars');\\n\\n// ...still have a reference to `hbs`, on which methods like `loadPartials()`\\n// can be called.\\n```\\n\\n**Note:** The [Advanced Usage][] example demonstrates how `ExpressHandlebars`\\ninstances can be leveraged.\\n\\n### Template Caching\\n\\nThis view engine uses a smart template caching strategy. In development,\\ntemplates will always be loaded from disk, i.e., no caching. In production, raw\\nfiles and compiled Handlebars templates are aggressively cached.\\n\\nThe easiest way to control template/view caching is through Express'\\n[view cache setting][]:\\n\\n```javascript\\napp.enable('view cache');\\n```\\n\\nExpress enables this setting by default when in production mode, i.e.,\\n`process.env.NODE_ENV === \\\"production\\\"`.\\n\\n**Note:** All of the public API methods accept `options.cache`, which gives\\ncontrol over caching when calling these methods directly.\\n\\n### Layouts\\n\\nA layout is simply a Handlebars template with a `{{{body}}}` placeholder.\\nUsually it will be an HTML page wrapper into which views will be rendered.\\n\\nThis view engine adds back the concept of \\\"layout\\\", which was removed in Express\\n3.x. It can be configured with a path to the layouts directory, by default it's\\nset to `\\\"views/layouts/\\\"`.\\n\\nThere are two ways to set a default layout: configuring the view engine's\\n`defaultLayout` property, or setting [Express locals][] `app.locals.layout`.\\n\\nThe layout into which a view should be rendered can be overridden per-request\\nby assigning a different value to the `layout` request local. The following\\nwill render the \\\"home\\\" view with no layout:\\n\\n```javascript\\napp.get('/', function (req, res, next) {\\n    res.render('home', {layout: false});\\n});\\n```\\n\\n### Helpers\\n\\nHelper functions, or \\\"helpers\\\" are functions that can be\\n[registered with Handlebars][] and can be called within a template. Helpers can\\nbe used for transforming output, iterating over data, etc. To keep with the\\nspirit of *logic-less* templates, helpers are the place where logic should be\\ndefined.\\n\\nHandlebars ships with some [built-in helpers][], such as: `with`, `if`, `each`,\\netc. Most application will need to extend this set of helpers to include\\napp-specific logic and transformations. Beyond defining global helpers on\\n`Handlebars`, this view engine supports `ExpressHandlebars` instance-level\\nhelpers via the `helpers` configuration property, and render-level helpers via\\n`options.helpers` when calling the `render()` and `renderView()` methods.\\n\\nThe following example shows helpers being specified at each level:\\n\\n**app.js:**\\n\\nCreates a super simple Express app which shows the basic way to register\\n`ExpressHandlebars` instance-level helpers, and override one at the\\nrender-level.\\n\\n```javascript\\nvar express = require('express'),\\n    exphbs  = require('express3-handlebars'),\\n\\n    app = express(),\\n    hbs;\\n\\nhbs = exphbs.create({\\n    // Specify helpers which are only registered on this instance.\\n    helpers: {\\n        foo: function () { return 'FOO!'; }\\n        bar: function () { return 'BAR!'; }\\n    }\\n});\\n\\napp.engine('handlebars', hbs.engine);\\napp.set('view engine', 'handlebars');\\n\\napp.get('/', function (req, res, next) {\\n    res.render('home', {\\n        showTitle: true,\\n\\n        // Override `foo` helper only for this rendering.\\n        helpers: {\\n            foo: function () { return 'foo.'; }\\n        }\\n    });\\n});\\n\\napp.listen(3000);\\n```\\n\\n**views/home.handlebars:**\\n\\nThe app's home view which uses helper functions to help render the contents.\\n\\n```html\\n<!doctype html>\\n<html>\\n<head>\\n    <meta charset=\\\"utf-8\\\" />\\n    <title>Example App - Home</title>\\n</head>\\n<body>\\n\\n    <!-- Uses built-in `if` helper. -->\\n  {{#if showTitle}}\\n    <h1>Home</h1>\\n  {{/if}}\\n\\n    <!-- Calls `foo` helper, overridden at render-level. -->\\n    <p>{{foo}}</p>\\n\\n    <!-- Calls `bar` helper, defined at instance-level. -->\\n    <p>{{bar}}</p>\\n\\n</body>\\n</html>\\n```\\n\\n#### More on Helpers\\n\\nRefer to the [Handlebars website][] for more information on defining helpers:\\n\\n* [Expression Helpers][]\\n* [Block Helpers][]\\n\\n\\n[examples directory]: https://github.com/ericf/express3-handlebars/tree/master/examples\\n[view cache setting]: http://expressjs.com/api.html#app-settings\\n[Express locals]: http://expressjs.com/api.html#app.locals\\n[registered with Handlebars]: https://github.com/wycats/handlebars.js/#registering-helpers\\n[built-in helpers]: http://handlebarsjs.com/#builtins\\n[Handlebars website]: http://handlebarsjs.com/\\n[Expression Helpers]: http://handlebarsjs.com/expressions.html#helpers\\n[Block Helpers]: http://handlebarsjs.com/block_helpers.html\\n\\n\\nAPI\\n---\\n\\n### Configuration and Defaults\\n\\nThere are two main ways to use this package: via its engine factory function, or\\ncreating `ExpressHandlebars` instances; both use the same configuration\\nproperties and defaults.\\n\\n```javascript\\nvar exphbs = require('express3-handlebars');\\n\\n// Using the engine factory:\\nexphbs({ /* config */ });\\n\\n// Create an instance:\\nexphbs.create({ /* config */ });\\n```\\n\\nThe following is the list of configuration properties and their default values\\n(if any):\\n\\n#### `defaultLayout`\\nThe string name or path of a template in the `layoutsDir` to use as the default\\nlayout. This is overridden by a `layout` specified in the app or response\\n`locals`. **Note:** A falsy value will render without a layout; e.g.,\\n`res.render('home', {layout: false});`.\\n\\n#### `extname=\\\".handlebars\\\"`\\nThe string name of the file extension used by the templates.\\n\\n#### `handlebars=require('handlebars')`\\nThe Handlebars module/implementation. This allows for the `ExpressHandlebars`\\ninstance to use a different Handlebars module/implementation than that provided\\nby the Handlebars npm package.\\n\\n#### `helpers`\\nAn object which holds the helper functions used when rendering templates with\\nthis `ExpressHandlebars` instance. When rendering a template, a collection of\\nhelpers will be generated by merging: `handlebars.helpers` (global), `helpers`\\n(instance), and `options.helpers` (render-level). This allows Handlebars'\\n`registerHelper()` function to operate as expected, will providing two extra\\nlevels over helper overrides.\\n\\n#### `layoutsDir=\\\"views/layouts/\\\"`\\nThe string path to the directory where the layout templates reside.\\n\\n#### `partialsDir=\\\"views/partials/\\\"`\\nThe string path to the directory where the partials templates reside.\\n\\n### Properties\\n\\nThe public API properties are provided via `ExpressHandlebars` instances. In\\nadditional to the properties listed in the **Configuration and Defaults**\\nsection, the following are additional public properties:\\n\\n#### `compiled`\\nAn object cache which holds compiled Handlebars template functions in the\\nformat: `{\\\"path/to/template\\\": [Function]}`.\\n\\n#### `engine`\\nA function reference to the `renderView()` method which is bound to `this`\\n`ExpressHandlebars` instance. This bound function should be used when\\nregistering this view engine with an Express app.\\n\\n#### `handlebarsVersion`\\nThe version number of `handlebars` as a semver. This is unsed internally to\\nbranch on certain operations which differ between Handlebars releases.\\n\\n#### `precompiled`\\nAn object cache which holds precompiled Handlebars template strings in the\\nformat: `{\\\"path/to/template\\\": [String]}`.\\n\\n### Methods\\n\\nThe following is the list of public API methods provided via `ExpressHandlebars`\\ninstances:\\n\\n#### `loadPartials(options|callback, [callback])`\\n\\nRetrieves the partials in the `partialsDir` and passes an object mapping the\\npartials in the form `{name: partial}` to the `callback`.\\n\\nBy default each partial will be a compiled Handlebars template function. Use\\n`options.precompiled` to receive the partials as precompiled templates — this is\\nuseful for sharing templates with client code.\\n\\n**Parameters:**\\n\\n* `[options]`: Optional object containing any of the following properties:\\n\\n  * `[cache]`: Whether cached templates can be used if they have already been\\n    requested. This is recommended for production to avoid unnecessary file I/O.\\n\\n  * `[precompiled=false]`: Whether precompiled templates should be provided,\\n    instead of compiled Handlebars template functions.\\n\\n* `callback`: Function to call once the partials are retrieved.\\n\\nThe name of each partial corresponds to its location in `partialsDir`. For\\nexample, consider the following directory structure:\\n\\n```\\nviews\\n└── partials\\n    ├── foo\\n    │   └── bar.handlebars\\n    └── title.handlebars\\n\\n2 directories, 2 files\\n```\\n\\n`loadPartials()` would produce the following result:\\n\\n```javascript\\nvar hbs = require('express3-handlebars').create();\\n\\nhbs.loadPartials(function (err, partials) {\\n    console.log(partials);\\n    // => { 'foo.bar': [Function],\\n    // =>    title: [Function] }\\n});\\n```\\n\\n**Note:** The partial name `\\\"foo.bar\\\"` would ideally be `\\\"foo/bar\\\"`, but this is\\nbeing prevented by a [Handlebars bug][]. Once this bug is fixed, a future\\nversion will use a \\\"/\\\" separator. Templates requiring the partial still use:\\n`{{> foo/bar}}`.\\n\\n#### `loadTemplate(filePath, options|callback, [callback])`\\n\\nRetrieves the template at the specified `filePath` and passes a compiled\\nHandlebars template function to the `callback`.\\n\\nUse `options.precompiled` to receive a precompiled Handlebars template.\\n\\n**Parameters:**\\n\\n* `filePath`: String path to the Handlebars template file.\\n\\n* `[options]`: Optional object containing any of the following properties:\\n\\n  * `[cache]`: Whether a cached template can be used if it have already been\\n    requested. This is recommended for production to avoid necessary file I/O.\\n\\n  * `[precompiled=false]`: Whether a precompiled template should be provided,\\n    instead of a compiled Handlebars template function.\\n\\n* `callback`: Function to call once the template is retrieved.\\n\\n#### `loadTemplates(dirPath, options|callback, [callback])`\\n\\nRetrieves the all the templates in the specified `dirPath` and passes an object\\nmapping the compiled templates in the form `{filename: template}` to the\\n`callback`.\\n\\nUse `options.precompiled` to receive precompiled Handlebars templates — this is\\nuseful for sharing templates with client code.\\n\\n**Parameters:**\\n\\n* `dirPath`: String path to the directory containing Handlebars template files.\\n\\n* `[options]`: Optional object containing any of the following properties:\\n\\n  * `[cache]`: Whether cached templates can be used if it have already been\\n    requested. This is recommended for production to avoid necessary file I/O.\\n\\n  * `[precompiled=false]`: Whether precompiled templates should be provided,\\n    instead of a compiled Handlebars template function.\\n\\n* `callback`: Function to call once the templates are retrieved.\\n\\n#### `render(filePath, options|callback, [callback])`\\n\\nRenders the template at the specified `filePath` using this instance's `helpers`\\nand partials, and passes the resulting string to the `callback`.\\n\\nThe `options` will be used both as the context in which the Handlebars template\\nis rendered, and to signal this view engine on how it should behave, e.g.,\\n`options.cache = false` will load _always_ load the templates from disk.\\n\\n**Parameters:**\\n\\n* `filePath`: String path to the Handlebars template file.\\n\\n* `[options]`: Optional object which will serve as the context in which the\\n  Handlebars template is rendered. It may also contain any of the following\\n  properties which affect this view engine's behavior:\\n\\n  * `[cache]`: Whether a cached template can be used if it have already been\\n    requested. This is recommended for production to avoid unnecessary file I/O.\\n\\n  * `[helpers]`: Render-level helpers should be merged with (and will override)\\n    instance and global helper functions.\\n\\n* `callback`: Function to call once the template is retrieved.\\n\\n#### `renderView(viewPath, options|callback, [callback])`\\n\\nRenders the template at the specified `viewPath` as the `{{{body}}}` within the\\nlayout specified by the `defaultLayout` or `options.layout`. Rendering will use\\nthis instance's `helpers` and partials, and passes the resulting string to the\\n`callback`.\\n\\nThis method is called by Express and is the main entry point into this Express\\nview engine implementation. It adds the concept of a \\\"layout\\\" and delegates\\nrendering to the `render()` method.\\n\\nThe `options` will be used both as the context in which the Handlebars templates\\nare rendered, and to signal this view engine on how it should behave, e.g.,\\n`options.cache=false` will load _always_ load the templates from disk.\\n\\n**Parameters:**\\n\\n* `viewPath`: String path to the Handlebars template file which should serve as\\n  the `{{{body}}}` when using a layout.\\n\\n* `[options]`: Optional object which will serve as the context in which the\\n  Handlebars templates are rendered. It may also contain any of the following\\n  properties which affect this view engine's behavior:\\n\\n  * `[cache]`: Whether cached templates can be used if they have already been\\n    requested. This is recommended for production to avoid unnecessary file I/O.\\n\\n  * `[helpers]`: Render-level helpers should be merged with (and will override)\\n    instance and global helper functions.\\n\\n  * `[layout]`: Optional string path to the Handlebars template file to be used\\n    as the \\\"layout\\\". This overrides any `defaultLayout` value. Passing a falsy\\n    value will render with no layout (even if a `defaultLayout` is defined).\\n\\n* `callback`: Function to call once the template is retrieved.\\n\\n### Statics\\n\\nThe following is the list of static API properties and methods provided on the\\n`ExpressHandlebars` constructor:\\n\\n#### `getHandlebarsSemver(handlebars)`\\n\\nReturns a semver-compatible version string for the specified `handlebars`\\nmodule/implementation.\\n\\nThis utility function is used to compute the value for an `ExpressHandlebars`\\ninstance's `handlebarsVersion` property.\\n\\n\\n[Handlebars bug]: https://github.com/wycats/handlebars.js/pull/389\\n\\n\\nExamples\\n--------\\n\\n### [Basic Usage][]\\n\\nThis example shows the most basic way to use this view engine.\\n\\n### [Advanced Usage][]\\n\\nThis example is more comprehensive and shows how to use many of the features of\\nthis view engine, including helpers, partials, multiple layouts, etc.\\n\\nAs noted in the **Package Design** section, this view engine's implementation is\\ninstance-based, and more advanced usages can take advantage of this. The\\nAdvanced Usage example demonstrates how to use an `ExpressHandlebars` instance\\nto share templates with the client, among other features.\\n\\n\\n[Basic Usage]: https://github.com/ericf/express3-handlebars/tree/master/examples/basic\\n[Advanced Usage]: https://github.com/ericf/express3-handlebars/tree/master/examples/advanced\\n\\n\\nLicense\\n-------\\n\\nThis software is free to use under the Yahoo! Inc. BSD license.\\nSee the [LICENSE file][] for license text and copyright information.\\n\\n\\n[LICENSE file]: https://github.com/ericf/express3-handlebars/blob/master/LICENSE\\n\",\n   43:   \"readmeFilename\": \"README.md\",\n   44    \"_id\": \"express3-handlebars@0.5.0\",\n   45    \"_from\": \"express3-handlebars@*\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/README.md:\n  483  \n  484  Retrieves the all the templates in the specified `dirPath` and passes an object\n  485: mapping the compiled templates in the form `{filename: template}` to the\n  486  `callback`.\n  487  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/async/package.json:\n   36      \"test\": \"nodeunit test/test-async.js\"\n   37    },\n   38:   \"readme\": \"# Async.js\\n\\nAsync is a utility module which provides straight-forward, powerful functions\\nfor working with asynchronous JavaScript. Although originally designed for\\nuse with [node.js](http://nodejs.org), it can also be used directly in the\\nbrowser. Also supports [component](https://github.com/component/component).\\n\\nAsync provides around 20 functions that include the usual 'functional'\\nsuspects (map, reduce, filter, each…) as well as some common patterns\\nfor asynchronous control flow (parallel, series, waterfall…). All these\\nfunctions assume you follow the node.js convention of providing a single\\ncallback as the last argument of your async function.\\n\\n\\n## Quick Examples\\n\\n```javascript\\nasync.map(['file1','file2','file3'], fs.stat, function(err, results){\\n    // results is now an array of stats for each file\\n});\\n\\nasync.filter(['file1','file2','file3'], fs.exists, function(results){\\n    // results now equals an array of the existing files\\n});\\n\\nasync.parallel([\\n    function(){ ... },\\n    function(){ ... }\\n], callback);\\n\\nasync.series([\\n    function(){ ... },\\n    function(){ ... }\\n]);\\n```\\n\\nThere are many more functions available so take a look at the docs below for a\\nfull list. This module aims to be comprehensive, so if you feel anything is\\nmissing please create a GitHub issue for it.\\n\\n## Common Pitfalls\\n\\n### Binding a context to an iterator\\n\\nThis section is really about bind, not about async. If you are wondering how to\\nmake async execute your iterators in a given context, or are confused as to why\\na method of another library isn't working as an iterator, study this example:\\n\\n```js\\n// Here is a simple object with an (unnecessarily roundabout) squaring method\\nvar AsyncSquaringLibrary = {\\n  squareExponent: 2,\\n  square: function(number, callback){ \\n    var result = Math.pow(number, this.squareExponent);\\n    setTimeout(function(){\\n      callback(null, result);\\n    }, 200);\\n  }\\n};\\n\\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\\n  // result is [NaN, NaN, NaN]\\n  // This fails because the `this.squareExponent` expression in the square\\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\\n  // therefore undefined.\\n});\\n\\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\\n  // result is [1, 4, 9]\\n  // With the help of bind we can attach a context to the iterator before\\n  // passing it to async. Now the square function will be executed in its \\n  // 'home' AsyncSquaringLibrary context and the value of `this.squareExponent`\\n  // will be as expected.\\n});\\n```\\n\\n## Download\\n\\nThe source is available for download from\\n[GitHub](http://github.com/caolan/async).\\nAlternatively, you can install using Node Package Manager (npm):\\n\\n    npm install async\\n\\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\\n\\n## In the Browser\\n\\nSo far it's been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\\n\\n```html\\n<script type=\\\"text/javascript\\\" src=\\\"async.js\\\"></script>\\n<script type=\\\"text/javascript\\\">\\n\\n    async.map(data, asyncProcess, function(err, results){\\n        alert(results);\\n    });\\n\\n</script>\\n```\\n\\n## Documentation\\n\\n### Collections\\n\\n* [each](#each)\\n* [eachSeries](#eachSeries)\\n* [eachLimit](#eachLimit)\\n* [map](#map)\\n* [mapSeries](#mapSeries)\\n* [mapLimit](#mapLimit)\\n* [filter](#filter)\\n* [filterSeries](#filterSeries)\\n* [reject](#reject)\\n* [rejectSeries](#rejectSeries)\\n* [reduce](#reduce)\\n* [reduceRight](#reduceRight)\\n* [detect](#detect)\\n* [detectSeries](#detectSeries)\\n* [sortBy](#sortBy)\\n* [some](#some)\\n* [every](#every)\\n* [concat](#concat)\\n* [concatSeries](#concatSeries)\\n\\n### Control Flow\\n\\n* [series](#series)\\n* [parallel](#parallel)\\n* [parallelLimit](#parallellimittasks-limit-callback)\\n* [whilst](#whilst)\\n* [doWhilst](#doWhilst)\\n* [until](#until)\\n* [doUntil](#doUntil)\\n* [forever](#forever)\\n* [waterfall](#waterfall)\\n* [compose](#compose)\\n* [applyEach](#applyEach)\\n* [applyEachSeries](#applyEachSeries)\\n* [queue](#queue)\\n* [cargo](#cargo)\\n* [auto](#auto)\\n* [iterator](#iterator)\\n* [apply](#apply)\\n* [nextTick](#nextTick)\\n* [times](#times)\\n* [timesSeries](#timesSeries)\\n\\n### Utils\\n\\n* [memoize](#memoize)\\n* [unmemoize](#unmemoize)\\n* [log](#log)\\n* [dir](#dir)\\n* [noConflict](#noConflict)\\n\\n\\n## Collections\\n\\n<a name=\\\"forEach\\\" />\\n<a name=\\\"each\\\" />\\n### each(arr, iterator, callback)\\n\\nApplies an iterator function to each item in an array, in parallel.\\nThe iterator is called with an item from the list and a callback for when it\\nhas finished. If the iterator passes an error to this callback, the main\\ncallback for the each function is immediately called with the error.\\n\\nNote, that since this function applies the iterator to each item in parallel\\nthere is no guarantee that the iterator functions will complete in order.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A function to apply to each item in the array.\\n  The iterator is passed a callback(err) which must be called once it has \\n  completed. If no error has occured, the callback should be run without \\n  arguments or with an explicit null argument.\\n* callback(err) - A callback which is called after all the iterator functions\\n  have finished, or an error has occurred.\\n\\n__Example__\\n\\n```js\\n// assuming openFiles is an array of file names and saveFile is a function\\n// to save the modified contents of that file:\\n\\nasync.each(openFiles, saveFile, function(err){\\n    // if any of the saves produced an error, err would equal that error\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"forEachSeries\\\" />\\n<a name=\\\"eachSeries\\\" />\\n### eachSeries(arr, iterator, callback)\\n\\nThe same as each only the iterator is applied to each item in the array in\\nseries. The next iterator is only called once the current one has completed\\nprocessing. This means the iterator functions will complete in order.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"forEachLimit\\\" />\\n<a name=\\\"eachLimit\\\" />\\n### eachLimit(arr, limit, iterator, callback)\\n\\nThe same as each only no more than \\\"limit\\\" iterators will be simultaneously \\nrunning at any time.\\n\\nNote that the items are not processed in batches, so there is no guarantee that\\n the first \\\"limit\\\" iterator functions will complete before any others are \\nstarted.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* limit - The maximum number of iterators to run at any time.\\n* iterator(item, callback) - A function to apply to each item in the array.\\n  The iterator is passed a callback(err) which must be called once it has \\n  completed. If no error has occured, the callback should be run without \\n  arguments or with an explicit null argument.\\n* callback(err) - A callback which is called after all the iterator functions\\n  have finished, or an error has occurred.\\n\\n__Example__\\n\\n```js\\n// Assume documents is an array of JSON objects and requestApi is a\\n// function that interacts with a rate-limited REST api.\\n\\nasync.eachLimit(documents, 20, requestApi, function(err){\\n    // if any of the saves produced an error, err would equal that error\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"map\\\" />\\n### map(arr, iterator, callback)\\n\\nProduces a new array of values by mapping each value in the given array through\\nthe iterator function. The iterator is called with an item from the array and a\\ncallback for when it has finished processing. The callback takes 2 arguments, \\nan error and the transformed item from the array. If the iterator passes an\\nerror to this callback, the main callback for the map function is immediately\\ncalled with the error.\\n\\nNote, that since this function applies the iterator to each item in parallel\\nthere is no guarantee that the iterator functions will complete in order, however\\nthe results array will be in the same order as the original array.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A function to apply to each item in the array.\\n  The iterator is passed a callback(err, transformed) which must be called once \\n  it has completed with an error (which can be null) and a transformed item.\\n* callback(err, results) - A callback which is called after all the iterator\\n  functions have finished, or an error has occurred. Results is an array of the\\n  transformed items from the original array.\\n\\n__Example__\\n\\n```js\\nasync.map(['file1','file2','file3'], fs.stat, function(err, results){\\n    // results is now an array of stats for each file\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"mapSeries\\\" />\\n### mapSeries(arr, iterator, callback)\\n\\nThe same as map only the iterator is applied to each item in the array in\\nseries. The next iterator is only called once the current one has completed\\nprocessing. The results array will be in the same order as the original.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"mapLimit\\\" />\\n### mapLimit(arr, limit, iterator, callback)\\n\\nThe same as map only no more than \\\"limit\\\" iterators will be simultaneously \\nrunning at any time.\\n\\nNote that the items are not processed in batches, so there is no guarantee that\\n the first \\\"limit\\\" iterator functions will complete before any others are \\nstarted.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* limit - The maximum number of iterators to run at any time.\\n* iterator(item, callback) - A function to apply to each item in the array.\\n  The iterator is passed a callback(err, transformed) which must be called once \\n  it has completed with an error (which can be null) and a transformed item.\\n* callback(err, results) - A callback which is called after all the iterator\\n  functions have finished, or an error has occurred. Results is an array of the\\n  transformed items from the original array.\\n\\n__Example__\\n\\n```js\\nasync.mapLimit(['file1','file2','file3'], 1, fs.stat, function(err, results){\\n    // results is now an array of stats for each file\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"filter\\\" />\\n### filter(arr, iterator, callback)\\n\\n__Alias:__ select\\n\\nReturns a new array of all the values which pass an async truth test.\\n_The callback for each iterator call only accepts a single argument of true or\\nfalse, it does not accept an error argument first!_ This is in-line with the\\nway node libraries work with truth tests like fs.exists. This operation is\\nperformed in parallel, but the results array will be in the same order as the\\noriginal.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A truth test to apply to each item in the array.\\n  The iterator is passed a callback(truthValue) which must be called with a \\n  boolean argument once it has completed.\\n* callback(results) - A callback which is called after all the iterator\\n  functions have finished.\\n\\n__Example__\\n\\n```js\\nasync.filter(['file1','file2','file3'], fs.exists, function(results){\\n    // results now equals an array of the existing files\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"filterSeries\\\" />\\n### filterSeries(arr, iterator, callback)\\n\\n__alias:__ selectSeries\\n\\nThe same as filter only the iterator is applied to each item in the array in\\nseries. The next iterator is only called once the current one has completed\\nprocessing. The results array will be in the same order as the original.\\n\\n---------------------------------------\\n\\n<a name=\\\"reject\\\" />\\n### reject(arr, iterator, callback)\\n\\nThe opposite of filter. Removes values that pass an async truth test.\\n\\n---------------------------------------\\n\\n<a name=\\\"rejectSeries\\\" />\\n### rejectSeries(arr, iterator, callback)\\n\\nThe same as reject, only the iterator is applied to each item in the array\\nin series.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"reduce\\\" />\\n### reduce(arr, memo, iterator, callback)\\n\\n__aliases:__ inject, foldl\\n\\nReduces a list of values into a single value using an async iterator to return\\neach successive step. Memo is the initial state of the reduction. This\\nfunction only operates in series. For performance reasons, it may make sense to\\nsplit a call to this function into a parallel map, then use the normal\\nArray.prototype.reduce on the results. This function is for situations where\\neach step in the reduction needs to be async, if you can get the data before\\nreducing it then it's probably a good idea to do so.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* memo - The initial state of the reduction.\\n* iterator(memo, item, callback) - A function applied to each item in the\\n  array to produce the next step in the reduction. The iterator is passed a\\n  callback(err, reduction) which accepts an optional error as its first \\n  argument, and the state of the reduction as the second. If an error is \\n  passed to the callback, the reduction is stopped and the main callback is \\n  immediately called with the error.\\n* callback(err, result) - A callback which is called after all the iterator\\n  functions have finished. Result is the reduced value.\\n\\n__Example__\\n\\n```js\\nasync.reduce([1,2,3], 0, function(memo, item, callback){\\n    // pointless async:\\n    process.nextTick(function(){\\n        callback(null, memo + item)\\n    });\\n}, function(err, result){\\n    // result is now equal to the last value of memo, which is 6\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"reduceRight\\\" />\\n### reduceRight(arr, memo, iterator, callback)\\n\\n__Alias:__ foldr\\n\\nSame as reduce, only operates on the items in the array in reverse order.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"detect\\\" />\\n### detect(arr, iterator, callback)\\n\\nReturns the first value in a list that passes an async truth test. The\\niterator is applied in parallel, meaning the first iterator to return true will\\nfire the detect callback with that result. That means the result might not be\\nthe first item in the original array (in terms of order) that passes the test.\\n\\nIf order within the original array is important then look at detectSeries.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A truth test to apply to each item in the array.\\n  The iterator is passed a callback(truthValue) which must be called with a \\n  boolean argument once it has completed.\\n* callback(result) - A callback which is called as soon as any iterator returns\\n  true, or after all the iterator functions have finished. Result will be\\n  the first item in the array that passes the truth test (iterator) or the\\n  value undefined if none passed.\\n\\n__Example__\\n\\n```js\\nasync.detect(['file1','file2','file3'], fs.exists, function(result){\\n    // result now equals the first file in the list that exists\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"detectSeries\\\" />\\n### detectSeries(arr, iterator, callback)\\n\\nThe same as detect, only the iterator is applied to each item in the array\\nin series. This means the result is always the first in the original array (in\\nterms of array order) that passes the truth test.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"sortBy\\\" />\\n### sortBy(arr, iterator, callback)\\n\\nSorts a list by the results of running each value through an async iterator.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A function to apply to each item in the array.\\n  The iterator is passed a callback(err, sortValue) which must be called once it\\n  has completed with an error (which can be null) and a value to use as the sort\\n  criteria.\\n* callback(err, results) - A callback which is called after all the iterator\\n  functions have finished, or an error has occurred. Results is the items from\\n  the original array sorted by the values returned by the iterator calls.\\n\\n__Example__\\n\\n```js\\nasync.sortBy(['file1','file2','file3'], function(file, callback){\\n    fs.stat(file, function(err, stats){\\n        callback(err, stats.mtime);\\n    });\\n}, function(err, results){\\n    // results is now the original array of files sorted by\\n    // modified date\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"some\\\" />\\n### some(arr, iterator, callback)\\n\\n__Alias:__ any\\n\\nReturns true if at least one element in the array satisfies an async test.\\n_The callback for each iterator call only accepts a single argument of true or\\nfalse, it does not accept an error argument first!_ This is in-line with the\\nway node libraries work with truth tests like fs.exists. Once any iterator\\ncall returns true, the main callback is immediately called.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A truth test to apply to each item in the array.\\n  The iterator is passed a callback(truthValue) which must be called with a \\n  boolean argument once it has completed.\\n* callback(result) - A callback which is called as soon as any iterator returns\\n  true, or after all the iterator functions have finished. Result will be\\n  either true or false depending on the values of the async tests.\\n\\n__Example__\\n\\n```js\\nasync.some(['file1','file2','file3'], fs.exists, function(result){\\n    // if result is true then at least one of the files exists\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"every\\\" />\\n### every(arr, iterator, callback)\\n\\n__Alias:__ all\\n\\nReturns true if every element in the array satisfies an async test.\\n_The callback for each iterator call only accepts a single argument of true or\\nfalse, it does not accept an error argument first!_ This is in-line with the\\nway node libraries work with truth tests like fs.exists.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over.\\n* iterator(item, callback) - A truth test to apply to each item in the array.\\n  The iterator is passed a callback(truthValue) which must be called with a \\n  boolean argument once it has completed.\\n* callback(result) - A callback which is called after all the iterator\\n  functions have finished. Result will be either true or false depending on\\n  the values of the async tests.\\n\\n__Example__\\n\\n```js\\nasync.every(['file1','file2','file3'], fs.exists, function(result){\\n    // if result is true then every file exists\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"concat\\\" />\\n### concat(arr, iterator, callback)\\n\\nApplies an iterator to each item in a list, concatenating the results. Returns the\\nconcatenated list. The iterators are called in parallel, and the results are\\nconcatenated as they return. There is no guarantee that the results array will\\nbe returned in the original order of the arguments passed to the iterator function.\\n\\n__Arguments__\\n\\n* arr - An array to iterate over\\n* iterator(item, callback) - A function to apply to each item in the array.\\n  The iterator is passed a callback(err, results) which must be called once it \\n  has completed with an error (which can be null) and an array of results.\\n* callback(err, results) - A callback which is called after all the iterator\\n  functions have finished, or an error has occurred. Results is an array containing\\n  the concatenated results of the iterator function.\\n\\n__Example__\\n\\n```js\\nasync.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files){\\n    // files is now a list of filenames that exist in the 3 directories\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"concatSeries\\\" />\\n### concatSeries(arr, iterator, callback)\\n\\nSame as async.concat, but executes in series instead of parallel.\\n\\n\\n## Control Flow\\n\\n<a name=\\\"series\\\" />\\n### series(tasks, [callback])\\n\\nRun an array of functions in series, each one running once the previous\\nfunction has completed. If any functions in the series pass an error to its\\ncallback, no more functions are run and the callback for the series is\\nimmediately called with the value of the error. Once the tasks have completed,\\nthe results are passed to the final callback as an array.\\n\\nIt is also possible to use an object instead of an array. Each property will be\\nrun as a function and the results will be passed to the final callback as an object\\ninstead of an array. This can be a more readable way of handling results from\\nasync.series.\\n\\n\\n__Arguments__\\n\\n* tasks - An array or object containing functions to run, each function is passed\\n  a callback(err, result) it must call on completion with an error (which can\\n  be null) and an optional result value.\\n* callback(err, results) - An optional callback to run once all the functions\\n  have completed. This function gets a results array (or object) containing all \\n  the result arguments passed to the task callbacks.\\n\\n__Example__\\n\\n```js\\nasync.series([\\n    function(callback){\\n        // do some stuff ...\\n        callback(null, 'one');\\n    },\\n    function(callback){\\n        // do some more stuff ...\\n        callback(null, 'two');\\n    }\\n],\\n// optional callback\\nfunction(err, results){\\n    // results is now equal to ['one', 'two']\\n});\\n\\n\\n// an example using an object instead of an array\\nasync.series({\\n    one: function(callback){\\n        setTimeout(function(){\\n            callback(null, 1);\\n        }, 200);\\n    },\\n    two: function(callback){\\n        setTimeout(function(){\\n            callback(null, 2);\\n        }, 100);\\n    }\\n},\\nfunction(err, results) {\\n    // results is now equal to: {one: 1, two: 2}\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"parallel\\\" />\\n### parallel(tasks, [callback])\\n\\nRun an array of functions in parallel, without waiting until the previous\\nfunction has completed. If any of the functions pass an error to its\\ncallback, the main callback is immediately called with the value of the error.\\nOnce the tasks have completed, the results are passed to the final callback as an\\narray.\\n\\nIt is also possible to use an object instead of an array. Each property will be\\nrun as a function and the results will be passed to the final callback as an object\\ninstead of an array. This can be a more readable way of handling results from\\nasync.parallel.\\n\\n\\n__Arguments__\\n\\n* tasks - An array or object containing functions to run, each function is passed \\n  a callback(err, result) it must call on completion with an error (which can\\n  be null) and an optional result value.\\n* callback(err, results) - An optional callback to run once all the functions\\n  have completed. This function gets a results array (or object) containing all \\n  the result arguments passed to the task callbacks.\\n\\n__Example__\\n\\n```js\\nasync.parallel([\\n    function(callback){\\n        setTimeout(function(){\\n            callback(null, 'one');\\n        }, 200);\\n    },\\n    function(callback){\\n        setTimeout(function(){\\n            callback(null, 'two');\\n        }, 100);\\n    }\\n],\\n// optional callback\\nfunction(err, results){\\n    // the results array will equal ['one','two'] even though\\n    // the second function had a shorter timeout.\\n});\\n\\n\\n// an example using an object instead of an array\\nasync.parallel({\\n    one: function(callback){\\n        setTimeout(function(){\\n            callback(null, 1);\\n        }, 200);\\n    },\\n    two: function(callback){\\n        setTimeout(function(){\\n            callback(null, 2);\\n        }, 100);\\n    }\\n},\\nfunction(err, results) {\\n    // results is now equals to: {one: 1, two: 2}\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"parallel\\\" />\\n### parallelLimit(tasks, limit, [callback])\\n\\nThe same as parallel only the tasks are executed in parallel with a maximum of \\\"limit\\\" \\ntasks executing at any time.\\n\\nNote that the tasks are not executed in batches, so there is no guarantee that \\nthe first \\\"limit\\\" tasks will complete before any others are started.\\n\\n__Arguments__\\n\\n* tasks - An array or object containing functions to run, each function is passed \\n  a callback(err, result) it must call on completion with an error (which can\\n  be null) and an optional result value.\\n* limit - The maximum number of tasks to run at any time.\\n* callback(err, results) - An optional callback to run once all the functions\\n  have completed. This function gets a results array (or object) containing all \\n  the result arguments passed to the task callbacks.\\n\\n---------------------------------------\\n\\n<a name=\\\"whilst\\\" />\\n### whilst(test, fn, callback)\\n\\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\\nor an error occurs.\\n\\n__Arguments__\\n\\n* test() - synchronous truth test to perform before each execution of fn.\\n* fn(callback) - A function to call each time the test passes. The function is\\n  passed a callback(err) which must be called once it has completed with an \\n  optional error argument.\\n* callback(err) - A callback which is called after the test fails and repeated\\n  execution of fn has stopped.\\n\\n__Example__\\n\\n```js\\nvar count = 0;\\n\\nasync.whilst(\\n    function () { return count < 5; },\\n    function (callback) {\\n        count++;\\n        setTimeout(callback, 1000);\\n    },\\n    function (err) {\\n        // 5 seconds have passed\\n    }\\n);\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"doWhilst\\\" />\\n### doWhilst(fn, test, callback)\\n\\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\\n\\n---------------------------------------\\n\\n<a name=\\\"until\\\" />\\n### until(test, fn, callback)\\n\\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\\nor an error occurs.\\n\\nThe inverse of async.whilst.\\n\\n---------------------------------------\\n\\n<a name=\\\"doUntil\\\" />\\n### doUntil(fn, test, callback)\\n\\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\\n\\n---------------------------------------\\n\\n<a name=\\\"forever\\\" />\\n### forever(fn, callback)\\n\\nCalls the asynchronous function 'fn' repeatedly, in series, indefinitely.\\nIf an error is passed to fn's callback then 'callback' is called with the\\nerror, otherwise it will never be called.\\n\\n---------------------------------------\\n\\n<a name=\\\"waterfall\\\" />\\n### waterfall(tasks, [callback])\\n\\nRuns an array of functions in series, each passing their results to the next in\\nthe array. However, if any of the functions pass an error to the callback, the\\nnext function is not executed and the main callback is immediately called with\\nthe error.\\n\\n__Arguments__\\n\\n* tasks - An array of functions to run, each function is passed a \\n  callback(err, result1, result2, ...) it must call on completion. The first\\n  argument is an error (which can be null) and any further arguments will be \\n  passed as arguments in order to the next task.\\n* callback(err, [results]) - An optional callback to run once all the functions\\n  have completed. This will be passed the results of the last task's callback.\\n\\n\\n\\n__Example__\\n\\n```js\\nasync.waterfall([\\n    function(callback){\\n        callback(null, 'one', 'two');\\n    },\\n    function(arg1, arg2, callback){\\n        callback(null, 'three');\\n    },\\n    function(arg1, callback){\\n        // arg1 now equals 'three'\\n        callback(null, 'done');\\n    }\\n], function (err, result) {\\n   // result now equals 'done'    \\n});\\n```\\n\\n---------------------------------------\\n<a name=\\\"compose\\\" />\\n### compose(fn1, fn2...)\\n\\nCreates a function which is a composition of the passed asynchronous\\nfunctions. Each function consumes the return value of the function that\\nfollows. Composing functions f(), g() and h() would produce the result of\\nf(g(h())), only this version uses callbacks to obtain the return values.\\n\\nEach function is executed with the `this` binding of the composed function.\\n\\n__Arguments__\\n\\n* functions... - the asynchronous functions to compose\\n\\n\\n__Example__\\n\\n```js\\nfunction add1(n, callback) {\\n    setTimeout(function () {\\n        callback(null, n + 1);\\n    }, 10);\\n}\\n\\nfunction mul3(n, callback) {\\n    setTimeout(function () {\\n        callback(null, n * 3);\\n    }, 10);\\n}\\n\\nvar add1mul3 = async.compose(mul3, add1);\\n\\nadd1mul3(4, function (err, result) {\\n   // result now equals 15\\n});\\n```\\n\\n---------------------------------------\\n<a name=\\\"applyEach\\\" />\\n### applyEach(fns, args..., callback)\\n\\nApplies the provided arguments to each function in the array, calling the\\ncallback after all functions have completed. If you only provide the first\\nargument then it will return a function which lets you pass in the\\narguments as if it were a single function call.\\n\\n__Arguments__\\n\\n* fns - the asynchronous functions to all call with the same arguments\\n* args... - any number of separate arguments to pass to the function\\n* callback - the final argument should be the callback, called when all\\n  functions have completed processing\\n\\n\\n__Example__\\n\\n```js\\nasync.applyEach([enableSearch, updateSchema], 'bucket', callback);\\n\\n// partial application example:\\nasync.each(\\n    buckets,\\n    async.applyEach([enableSearch, updateSchema]),\\n    callback\\n);\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"applyEachSeries\\\" />\\n### applyEachSeries(arr, iterator, callback)\\n\\nThe same as applyEach only the functions are applied in series.\\n\\n---------------------------------------\\n\\n<a name=\\\"queue\\\" />\\n### queue(worker, concurrency)\\n\\nCreates a queue object with the specified concurrency. Tasks added to the\\nqueue will be processed in parallel (up to the concurrency limit). If all\\nworkers are in progress, the task is queued until one is available. Once\\na worker has completed a task, the task's callback is called.\\n\\n__Arguments__\\n\\n* worker(task, callback) - An asynchronous function for processing a queued\\n  task, which must call its callback(err) argument when finished, with an \\n  optional error as an argument.\\n* concurrency - An integer for determining how many worker functions should be\\n  run in parallel.\\n\\n__Queue objects__\\n\\nThe queue object returned by this function has the following properties and\\nmethods:\\n\\n* length() - a function returning the number of items waiting to be processed.\\n* concurrency - an integer for determining how many worker functions should be\\n  run in parallel. This property can be changed after a queue is created to\\n  alter the concurrency on-the-fly.\\n* push(task, [callback]) - add a new task to the queue, the callback is called\\n  once the worker has finished processing the task.\\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\\n* unshift(task, [callback]) - add a new task to the front of the queue.\\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\\n* empty - a callback that is called when the last item from the queue is given to a worker\\n* drain - a callback that is called when the last item from the queue has returned from the worker\\n\\n__Example__\\n\\n```js\\n// create a queue object with concurrency 2\\n\\nvar q = async.queue(function (task, callback) {\\n    console.log('hello ' + task.name);\\n    callback();\\n}, 2);\\n\\n\\n// assign a callback\\nq.drain = function() {\\n    console.log('all items have been processed');\\n}\\n\\n// add some items to the queue\\n\\nq.push({name: 'foo'}, function (err) {\\n    console.log('finished processing foo');\\n});\\nq.push({name: 'bar'}, function (err) {\\n    console.log('finished processing bar');\\n});\\n\\n// add some items to the queue (batch-wise)\\n\\nq.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function (err) {\\n    console.log('finished processing bar');\\n});\\n\\n// add some items to the front of the queue\\n\\nq.unshift({name: 'bar'}, function (err) {\\n    console.log('finished processing bar');\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"cargo\\\" />\\n### cargo(worker, [payload])\\n\\nCreates a cargo object with the specified payload. Tasks added to the\\ncargo will be processed altogether (up to the payload limit). If the\\nworker is in progress, the task is queued until it is available. Once\\nthe worker has completed some tasks, each callback of those tasks is called.\\n\\n__Arguments__\\n\\n* worker(tasks, callback) - An asynchronous function for processing an array of\\n  queued tasks, which must call its callback(err) argument when finished, with \\n  an optional error as an argument.\\n* payload - An optional integer for determining how many tasks should be\\n  processed per round; if omitted, the default is unlimited.\\n\\n__Cargo objects__\\n\\nThe cargo object returned by this function has the following properties and\\nmethods:\\n\\n* length() - a function returning the number of items waiting to be processed.\\n* payload - an integer for determining how many tasks should be\\n  process per round. This property can be changed after a cargo is created to\\n  alter the payload on-the-fly.\\n* push(task, [callback]) - add a new task to the queue, the callback is called\\n  once the worker has finished processing the task.\\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\\n* empty - a callback that is called when the last item from the queue is given to a worker\\n* drain - a callback that is called when the last item from the queue has returned from the worker\\n\\n__Example__\\n\\n```js\\n// create a cargo object with payload 2\\n\\nvar cargo = async.cargo(function (tasks, callback) {\\n    for(var i=0; i<tasks.length; i++){\\n      console.log('hello ' + tasks[i].name);\\n    }\\n    callback();\\n}, 2);\\n\\n\\n// add some items\\n\\ncargo.push({name: 'foo'}, function (err) {\\n    console.log('finished processing foo');\\n});\\ncargo.push({name: 'bar'}, function (err) {\\n    console.log('finished processing bar');\\n});\\ncargo.push({name: 'baz'}, function (err) {\\n    console.log('finished processing baz');\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"auto\\\" />\\n### auto(tasks, [callback])\\n\\nDetermines the best order for running functions based on their requirements.\\nEach function can optionally depend on other functions being completed first,\\nand each function is run as soon as its requirements are satisfied. If any of\\nthe functions pass an error to their callback, that function will not complete\\n(so any other functions depending on it will not run) and the main callback\\nwill be called immediately with the error. Functions also receive an object\\ncontaining the results of functions which have completed so far.\\n\\nNote, all functions are called with a results object as a second argument, \\nso it is unsafe to pass functions in the tasks object which cannot handle the\\nextra argument. For example, this snippet of code:\\n\\n```js\\nasync.auto({\\n  readData: async.apply(fs.readFile, 'data.txt', 'utf-8')\\n}, callback);\\n```\\n\\nwill have the effect of calling readFile with the results object as the last\\nargument, which will fail:\\n\\n```js\\nfs.readFile('data.txt', 'utf-8', cb, {});\\n```\\n\\nInstead, wrap the call to readFile in a function which does not forward the \\nresults object:\\n\\n```js\\nasync.auto({\\n  readData: function(cb, results){\\n    fs.readFile('data.txt', 'utf-8', cb);\\n  }\\n}, callback);\\n```\\n\\n__Arguments__\\n\\n* tasks - An object literal containing named functions or an array of\\n  requirements, with the function itself the last item in the array. The key\\n  used for each function or array is used when specifying requirements. The \\n  function receives two arguments: (1) a callback(err, result) which must be \\n  called when finished, passing an error (which can be null) and the result of \\n  the function's execution, and (2) a results object, containing the results of\\n  the previously executed functions.\\n* callback(err, results) - An optional callback which is called when all the\\n  tasks have been completed. The callback will receive an error as an argument\\n  if any tasks pass an error to their callback. Results will always be passed\\n\\tbut if an error occurred, no other tasks will be performed, and the results\\n\\tobject will only contain partial results.\\n  \\n\\n__Example__\\n\\n```js\\nasync.auto({\\n    get_data: function(callback){\\n        // async code to get some data\\n    },\\n    make_folder: function(callback){\\n        // async code to create a directory to store a file in\\n        // this is run at the same time as getting the data\\n    },\\n    write_file: ['get_data', 'make_folder', function(callback){\\n        // once there is some data and the directory exists,\\n        // write the data to a file in the directory\\n        callback(null, filename);\\n    }],\\n    email_link: ['write_file', function(callback, results){\\n        // once the file is written let's email a link to it...\\n        // results.write_file contains the filename returned by write_file.\\n    }]\\n});\\n```\\n\\nThis is a fairly trivial example, but to do this using the basic parallel and\\nseries functions would look like this:\\n\\n```js\\nasync.parallel([\\n    function(callback){\\n        // async code to get some data\\n    },\\n    function(callback){\\n        // async code to create a directory to store a file in\\n        // this is run at the same time as getting the data\\n    }\\n],\\nfunction(err, results){\\n    async.series([\\n        function(callback){\\n            // once there is some data and the directory exists,\\n            // write the data to a file in the directory\\n        },\\n        function(callback){\\n            // once the file is written let's email a link to it...\\n        }\\n    ]);\\n});\\n```\\n\\nFor a complicated series of async tasks using the auto function makes adding\\nnew tasks much easier and makes the code more readable.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"iterator\\\" />\\n### iterator(tasks)\\n\\nCreates an iterator function which calls the next function in the array,\\nreturning a continuation to call the next one after that. It's also possible to\\n'peek' the next iterator by doing iterator.next().\\n\\nThis function is used internally by the async module but can be useful when\\nyou want to manually control the flow of functions in series.\\n\\n__Arguments__\\n\\n* tasks - An array of functions to run.\\n\\n__Example__\\n\\n```js\\nvar iterator = async.iterator([\\n    function(){ sys.p('one'); },\\n    function(){ sys.p('two'); },\\n    function(){ sys.p('three'); }\\n]);\\n\\nnode> var iterator2 = iterator();\\n'one'\\nnode> var iterator3 = iterator2();\\n'two'\\nnode> iterator3();\\n'three'\\nnode> var nextfn = iterator2.next();\\nnode> nextfn();\\n'three'\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"apply\\\" />\\n### apply(function, arguments..)\\n\\nCreates a continuation function with some arguments already applied, a useful\\nshorthand when combined with other control flow functions. Any arguments\\npassed to the returned function are added to the arguments originally passed\\nto apply.\\n\\n__Arguments__\\n\\n* function - The function you want to eventually apply all arguments to.\\n* arguments... - Any number of arguments to automatically apply when the\\n  continuation is called.\\n\\n__Example__\\n\\n```js\\n// using apply\\n\\nasync.parallel([\\n    async.apply(fs.writeFile, 'testfile1', 'test1'),\\n    async.apply(fs.writeFile, 'testfile2', 'test2'),\\n]);\\n\\n\\n// the same process without using apply\\n\\nasync.parallel([\\n    function(callback){\\n        fs.writeFile('testfile1', 'test1', callback);\\n    },\\n    function(callback){\\n        fs.writeFile('testfile2', 'test2', callback);\\n    }\\n]);\\n```\\n\\nIt's possible to pass any number of additional arguments when calling the\\ncontinuation:\\n\\n```js\\nnode> var fn = async.apply(sys.puts, 'one');\\nnode> fn('two', 'three');\\none\\ntwo\\nthree\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"nextTick\\\" />\\n### nextTick(callback)\\n\\nCalls the callback on a later loop around the event loop. In node.js this just\\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\\nif available, otherwise setTimeout(callback, 0), which means other higher priority\\nevents may precede the execution of the callback.\\n\\nThis is used internally for browser-compatibility purposes.\\n\\n__Arguments__\\n\\n* callback - The function to call on a later loop around the event loop.\\n\\n__Example__\\n\\n```js\\nvar call_order = [];\\nasync.nextTick(function(){\\n    call_order.push('two');\\n    // call_order now equals ['one','two']\\n});\\ncall_order.push('one')\\n```\\n\\n<a name=\\\"times\\\" />\\n### times(n, callback)\\n\\nCalls the callback n times and accumulates results in the same manner\\nyou would use with async.map.\\n\\n__Arguments__\\n\\n* n - The number of times to run the function.\\n* callback - The function to call n times.\\n\\n__Example__\\n\\n```js\\n// Pretend this is some complicated async factory\\nvar createUser = function(id, callback) {\\n  callback(null, {\\n    id: 'user' + id\\n  })\\n}\\n// generate 5 users\\nasync.times(5, function(n, next){\\n    createUser(n, function(err, user) {\\n      next(err, user)\\n    })\\n}, function(err, users) {\\n  // we should now have 5 users\\n});\\n```\\n\\n<a name=\\\"timesSeries\\\" />\\n### timesSeries(n, callback)\\n\\nThe same as times only the iterator is applied to each item in the array in\\nseries. The next iterator is only called once the current one has completed\\nprocessing. The results array will be in the same order as the original.\\n\\n\\n## Utils\\n\\n<a name=\\\"memoize\\\" />\\n### memoize(fn, [hasher])\\n\\nCaches the results of an async function. When creating a hash to store function\\nresults against, the callback is omitted from the hash and an optional hash\\nfunction can be used.\\n\\nThe cache of results is exposed as the `memo` property of the function returned\\nby `memoize`.\\n\\n__Arguments__\\n\\n* fn - the function you to proxy and cache results from.\\n* hasher - an optional function for generating a custom hash for storing\\n  results, it has all the arguments applied to it apart from the callback, and\\n  must be synchronous.\\n\\n__Example__\\n\\n```js\\nvar slow_fn = function (name, callback) {\\n    // do something\\n    callback(null, result);\\n};\\nvar fn = async.memoize(slow_fn);\\n\\n// fn can now be used as if it were slow_fn\\nfn('some name', function () {\\n    // callback\\n});\\n```\\n\\n<a name=\\\"unmemoize\\\" />\\n### unmemoize(fn)\\n\\nUndoes a memoized function, reverting it to the original, unmemoized\\nform. Comes handy in tests.\\n\\n__Arguments__\\n\\n* fn - the memoized function\\n\\n<a name=\\\"log\\\" />\\n### log(function, arguments)\\n\\nLogs the result of an async function to the console. Only works in node.js or\\nin browsers that support console.log and console.error (such as FF and Chrome).\\nIf multiple arguments are returned from the async function, console.log is\\ncalled on each argument in order.\\n\\n__Arguments__\\n\\n* function - The function you want to eventually apply all arguments to.\\n* arguments... - Any number of arguments to apply to the function.\\n\\n__Example__\\n\\n```js\\nvar hello = function(name, callback){\\n    setTimeout(function(){\\n        callback(null, 'hello ' + name);\\n    }, 1000);\\n};\\n```\\n```js\\nnode> async.log(hello, 'world');\\n'hello world'\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"dir\\\" />\\n### dir(function, arguments)\\n\\nLogs the result of an async function to the console using console.dir to\\ndisplay the properties of the resulting object. Only works in node.js or\\nin browsers that support console.dir and console.error (such as FF and Chrome).\\nIf multiple arguments are returned from the async function, console.dir is\\ncalled on each argument in order.\\n\\n__Arguments__\\n\\n* function - The function you want to eventually apply all arguments to.\\n* arguments... - Any number of arguments to apply to the function.\\n\\n__Example__\\n\\n```js\\nvar hello = function(name, callback){\\n    setTimeout(function(){\\n        callback(null, {hello: name});\\n    }, 1000);\\n};\\n```\\n```js\\nnode> async.dir(hello, 'world');\\n{hello: 'world'}\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"noConflict\\\" />\\n### noConflict()\\n\\nChanges the value of async back to its original value, returning a reference to the\\nasync object.\\n\",\n   39:   \"readmeFilename\": \"README.md\",\n   40    \"homepage\": \"https://github.com/caolan/async\",\n   41    \"_id\": \"async@0.2.10\",\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/async/README.md:\n  578  ```js\n  579  async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files){\n  580:     // files is now a list of filenames that exist in the 3 directories\n  581  });\n  582  ```\n  ...\n 1126          // once there is some data and the directory exists,\n 1127          // write the data to a file in the directory\n 1128:         callback(null, filename);\n 1129      }],\n 1130      email_link: ['write_file', function(callback, results){\n 1131          // once the file is written let's email a link to it...\n 1132:         // results.write_file contains the filename returned by write_file.\n 1133      }]\n 1134  });\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/glob/glob.js:\n  166    var n = this.minimatch.set.length\n  167  \n  168:   // The matches are stored as {<filename>: true,...} so that\n  169    // duplicates are automagically pruned.\n  170    // Later, we do an Object.keys() on these.\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/glob/package.json:\n   29    },\n   30    \"license\": \"BSD\",\n   31:   \"readme\": \"# Glob\\n\\nMatch files using the patterns the shell uses, like stars and stuff.\\n\\nThis is a glob implementation in JavaScript.  It uses the `minimatch`\\nlibrary to do its matching.\\n\\n## Attention: node-glob users!\\n\\nThe API has changed dramatically between 2.x and 3.x. This library is\\nnow 100% JavaScript, and the integer flags have been replaced with an\\noptions object.\\n\\nAlso, there's an event emitter class, proper tests, and all the other\\nthings you've come to expect from node modules.\\n\\nAnd best of all, no compilation!\\n\\n## Usage\\n\\n```javascript\\nvar glob = require(\\\"glob\\\")\\n\\n// options is optional\\nglob(\\\"**/*.js\\\", options, function (er, files) {\\n  // files is an array of filenames.\\n  // If the `nonull` option is set, and nothing\\n  // was found, then files is [\\\"**/*.js\\\"]\\n  // er is an error object or null.\\n})\\n```\\n\\n## Features\\n\\nPlease see the [minimatch\\ndocumentation](https://github.com/isaacs/minimatch) for more details.\\n\\nSupports these glob features:\\n\\n* Brace Expansion\\n* Extended glob matching\\n* \\\"Globstar\\\" `**` matching\\n\\nSee:\\n\\n* `man sh`\\n* `man bash`\\n* `man 3 fnmatch`\\n* `man 5 gitignore`\\n* [minimatch documentation](https://github.com/isaacs/minimatch)\\n\\n## glob(pattern, [options], cb)\\n\\n* `pattern` {String} Pattern to be matched\\n* `options` {Object}\\n* `cb` {Function}\\n  * `err` {Error | null}\\n  * `matches` {Array<String>} filenames found matching the pattern\\n\\nPerform an asynchronous glob search.\\n\\n## glob.sync(pattern, [options])\\n\\n* `pattern` {String} Pattern to be matched\\n* `options` {Object}\\n* return: {Array<String>} filenames found matching the pattern\\n\\nPerform a synchronous glob search.\\n\\n## Class: glob.Glob\\n\\nCreate a Glob object by instanting the `glob.Glob` class.\\n\\n```javascript\\nvar Glob = require(\\\"glob\\\").Glob\\nvar mg = new Glob(pattern, options, cb)\\n```\\n\\nIt's an EventEmitter, and starts walking the filesystem to find matches\\nimmediately.\\n\\n### new glob.Glob(pattern, [options], [cb])\\n\\n* `pattern` {String} pattern to search for\\n* `options` {Object}\\n* `cb` {Function} Called when an error occurs, or matches are found\\n  * `err` {Error | null}\\n  * `matches` {Array<String>} filenames found matching the pattern\\n\\nNote that if the `sync` flag is set in the options, then matches will\\nbe immediately available on the `g.found` member.\\n\\n### Properties\\n\\n* `minimatch` The minimatch object that the glob uses.\\n* `options` The options object passed in.\\n* `error` The error encountered.  When an error is encountered, the\\n  glob object is in an undefined state, and should be discarded.\\n* `aborted` Boolean which is set to true when calling `abort()`.  There\\n  is no way at this time to continue a glob search after aborting, but\\n  you can re-use the statCache to avoid having to duplicate syscalls.\\n* `statCache` Collection of all the stat results the glob search\\n  performed.\\n* `cache` Convenience object.  Each field has the following possible\\n  values:\\n  * `false` - Path does not exist\\n  * `true` - Path exists\\n  * `1` - Path exists, and is not a directory\\n  * `2` - Path exists, and is a directory\\n  * `[file, entries, ...]` - Path exists, is a directory, and the\\n    array value is the results of `fs.readdir`\\n\\n### Events\\n\\n* `end` When the matching is finished, this is emitted with all the\\n  matches found.  If the `nonull` option is set, and no match was found,\\n  then the `matches` list contains the original pattern.  The matches\\n  are sorted, unless the `nosort` flag is set.\\n* `match` Every time a match is found, this is emitted with the matched.\\n* `error` Emitted when an unexpected error is encountered, or whenever\\n  any fs error occurs if `options.strict` is set.\\n* `abort` When `abort()` is called, this event is raised.\\n\\n### Methods\\n\\n* `abort` Stop the search.\\n\\n### Options\\n\\nAll the options that can be passed to Minimatch can also be passed to\\nGlob to change pattern matching behavior.  Also, some have been added,\\nor have glob-specific ramifications.\\n\\nAll options are false by default, unless otherwise noted.\\n\\nAll options are added to the glob object, as well.\\n\\n* `cwd` The current working directory in which to search.  Defaults\\n  to `process.cwd()`.\\n* `root` The place where patterns starting with `/` will be mounted\\n  onto.  Defaults to `path.resolve(options.cwd, \\\"/\\\")` (`/` on Unix\\n  systems, and `C:\\\\` or some such on Windows.)\\n* `dot` Include `.dot` files in normal matches and `globstar` matches.\\n  Note that an explicit dot in a portion of the pattern will always\\n  match dot files.\\n* `nomount` By default, a pattern starting with a forward-slash will be\\n  \\\"mounted\\\" onto the root setting, so that a valid filesystem path is\\n  returned.  Set this flag to disable that behavior.\\n* `mark` Add a `/` character to directory matches.  Note that this\\n  requires additional stat calls.\\n* `nosort` Don't sort the results.\\n* `stat` Set to true to stat *all* results.  This reduces performance\\n  somewhat, and is completely unnecessary, unless `readdir` is presumed\\n  to be an untrustworthy indicator of file existence.  It will cause\\n  ELOOP to be triggered one level sooner in the case of cyclical\\n  symbolic links.\\n* `silent` When an unusual error is encountered\\n  when attempting to read a directory, a warning will be printed to\\n  stderr.  Set the `silent` option to true to suppress these warnings.\\n* `strict` When an unusual error is encountered\\n  when attempting to read a directory, the process will just continue on\\n  in search of other matches.  Set the `strict` option to raise an error\\n  in these cases.\\n* `cache` See `cache` property above.  Pass in a previously generated\\n  cache object to save some fs calls.\\n* `statCache` A cache of results of filesystem information, to prevent\\n  unnecessary stat calls.  While it should not normally be necessary to\\n  set this, you may pass the statCache from one glob() call to the\\n  options object of another, if you know that the filesystem will not\\n  change between calls.  (See \\\"Race Conditions\\\" below.)\\n* `sync` Perform a synchronous glob search.\\n* `nounique` In some cases, brace-expanded patterns can result in the\\n  same file showing up multiple times in the result set.  By default,\\n  this implementation prevents duplicates in the result set.\\n  Set this flag to disable that behavior.\\n* `nonull` Set to never return an empty set, instead returning a set\\n  containing the pattern itself.  This is the default in glob(3).\\n* `nocase` Perform a case-insensitive match.  Note that case-insensitive\\n  filesystems will sometimes result in glob returning results that are\\n  case-insensitively matched anyway, since readdir and stat will not\\n  raise an error.\\n* `debug` Set to enable debug logging in minimatch and glob.\\n* `globDebug` Set to enable debug logging in glob, but not minimatch.\\n\\n## Comparisons to other fnmatch/glob implementations\\n\\nWhile strict compliance with the existing standards is a worthwhile\\ngoal, some discrepancies exist between node-glob and other\\nimplementations, and are intentional.\\n\\nIf the pattern starts with a `!` character, then it is negated.  Set the\\n`nonegate` flag to suppress this behavior, and treat leading `!`\\ncharacters normally.  This is perhaps relevant if you wish to start the\\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\\ncharacters at the start of a pattern will negate the pattern multiple\\ntimes.\\n\\nIf a pattern starts with `#`, then it is treated as a comment, and\\nwill not match anything.  Use `\\\\#` to match a literal `#` at the\\nstart of a line, or set the `nocomment` flag to suppress this behavior.\\n\\nThe double-star character `**` is supported by default, unless the\\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\\nand bash 4.1, where `**` only has special significance if it is the only\\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\\n`a/**b` will not.\\n\\nIf an escaped pattern has no matches, and the `nonull` flag is set,\\nthen glob returns the pattern as-provided, rather than\\ninterpreting the character escapes.  For example,\\n`glob.match([], \\\"\\\\\\\\*a\\\\\\\\?\\\")` will return `\\\"\\\\\\\\*a\\\\\\\\?\\\"` rather than\\n`\\\"*a?\\\"`.  This is akin to setting the `nullglob` option in bash, except\\nthat it does not resolve escaped pattern characters.\\n\\nIf brace expansion is not disabled, then it is performed before any\\nother interpretation of the glob pattern.  Thus, a pattern like\\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\\nchecked for validity.  Since those two are valid, matching proceeds.\\n\\n## Windows\\n\\n**Please only use forward-slashes in glob expressions.**\\n\\nThough windows uses either `/` or `\\\\` as its path separator, only `/`\\ncharacters are used by this glob implementation.  You must use\\nforward-slashes **only** in glob expressions.  Back-slashes will always\\nbe interpreted as escape characters, not path separators.\\n\\nResults from absolute patterns such as `/foo/*` are mounted onto the\\nroot setting using `path.join`.  On windows, this will by default result\\nin `/foo/*` matching `C:\\\\foo\\\\bar.txt`.\\n\\n## Race Conditions\\n\\nGlob searching, by its very nature, is susceptible to race conditions,\\nsince it relies on directory walking and such.\\n\\nAs a result, it is possible that a file that exists when glob looks for\\nit may have been deleted or modified by the time it returns the result.\\n\\nAs part of its internal implementation, this program caches all stat\\nand readdir calls that it makes, in order to cut down on system\\noverhead.  However, this also makes it even more susceptible to races,\\nespecially if the cache or statCache objects are reused between glob\\ncalls.\\n\\nUsers are thus advised not to use a glob result as a guarantee of\\nfilesystem state in the face of rapid changes.  For the vast majority\\nof operations, this is never a problem.\\n\",\n   32:   \"readmeFilename\": \"README.md\",\n   33    \"bugs\": {\n   34      \"url\": \"https://github.com/isaacs/node-glob/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/glob/README.md:\n   24  // options is optional\n   25  glob(\"**/*.js\", options, function (er, files) {\n   26:   // files is an array of filenames.\n   27    // If the `nonull` option is set, and nothing\n   28    // was found, then files is [\"**/*.js\"]\n   ..\n   56  * `cb` {Function}\n   57    * `err` {Error | null}\n   58:   * `matches` {Array<String>} filenames found matching the pattern\n   59  \n   60  Perform an asynchronous glob search.\n   ..\n   64  * `pattern` {String} Pattern to be matched\n   65  * `options` {Object}\n   66: * return: {Array<String>} filenames found matching the pattern\n   67  \n   68  Perform a synchronous glob search.\n   ..\n   86  * `cb` {Function} Called when an error occurs, or matches are found\n   87    * `err` {Error | null}\n   88:   * `matches` {Array<String>} filenames found matching the pattern\n   89  \n   90  Note that if the `sync` flag is set in the options, then matches will\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/glob/node_modules/inherits/package.json:\n   24    },\n   25    \"readme\": \"Browser-friendly inheritance fully compatible with standard node.js\\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\\n\\nThis package exports standard `inherits` from node.js `util` module in\\nnode environment, but also provides alternative browser-friendly\\nimplementation through [browser\\nfield](https://gist.github.com/shtylman/4339901). Alternative\\nimplementation is a literal copy of standard one located in standalone\\nmodule to avoid requiring of `util`. It also has a shim for old\\nbrowsers with no `Object.create` support.\\n\\nWhile keeping you sure you are using standard `inherits`\\nimplementation in node.js environment, it allows bundlers such as\\n[browserify](https://github.com/substack/node-browserify) to not\\ninclude full `util` package to your client code if all you need is\\njust `inherits` function. It worth, because browser shim for `util`\\npackage is large and `inherits` is often the single function you need\\nfrom it.\\n\\nIt's recommended to use this package instead of\\n`require('util').inherits` for any code that has chances to be used\\nnot only in node.js but in browser too.\\n\\n## usage\\n\\n```js\\nvar inherits = require('inherits');\\n// then use exactly as the standard one\\n```\\n\\n## note on version ~1.0\\n\\nVersion ~1.0 had completely different motivation and is not compatible\\nneither with 2.0 nor with standard node.js `inherits`.\\n\\nIf you are using version ~1.0 and planning to switch to ~2.0, be\\ncareful:\\n\\n* new version uses `super_` instead of `super` for referencing\\n  superclass\\n* new version overwrites current prototype while old one preserves any\\n  existing fields on it\\n\",\n   26:   \"readmeFilename\": \"README.md\",\n   27    \"bugs\": {\n   28      \"url\": \"https://github.com/isaacs/inherits/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/glob/node_modules/minimatch/minimatch.js:\n  143  \n  144    // windows: need to use /, not \\\n  145:   // On other platforms, \\ is a valid (albeit bad) filename char.\n  146    if (platform === \"win32\") {\n  147      pattern = pattern.split(\"\\\\\").join(\"/\")\n  ...\n  837  \n  838    // windows: need to use /, not \\\n  839:   // On other platforms, \\ is a valid (albeit bad) filename char.\n  840    if (platform === \"win32\") {\n  841      f = f.split(\"\\\\\").join(\"/\")\n  ...\n 1017    // now either we fell off the end of the pattern, or we're done.\n 1018    if (fi === fl && pi === pl) {\n 1019:     // ran out of pattern and filename at the same time.\n 1020      // an exact hit!\n 1021      return true\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/glob/node_modules/minimatch/package.json:\n   30      \"url\": \"http://github.com/isaacs/minimatch/raw/master/LICENSE\"\n   31    },\n   32:   \"readme\": \"# minimatch\\n\\nA minimal matching utility.\\n\\n[![Build Status](https://secure.travis-ci.org/isaacs/minimatch.png)](http://travis-ci.org/isaacs/minimatch)\\n\\n\\nThis is the matching library used internally by npm.\\n\\nEventually, it will replace the C binding in node-glob.\\n\\nIt works by converting glob expressions into JavaScript `RegExp`\\nobjects.\\n\\n## Usage\\n\\n```javascript\\nvar minimatch = require(\\\"minimatch\\\")\\n\\nminimatch(\\\"bar.foo\\\", \\\"*.foo\\\") // true!\\nminimatch(\\\"bar.foo\\\", \\\"*.bar\\\") // false!\\nminimatch(\\\"bar.foo\\\", \\\"*.+(bar|foo)\\\", { debug: true }) // true, and noisy!\\n```\\n\\n## Features\\n\\nSupports these glob features:\\n\\n* Brace Expansion\\n* Extended glob matching\\n* \\\"Globstar\\\" `**` matching\\n\\nSee:\\n\\n* `man sh`\\n* `man bash`\\n* `man 3 fnmatch`\\n* `man 5 gitignore`\\n\\n## Minimatch Class\\n\\nCreate a minimatch object by instanting the `minimatch.Minimatch` class.\\n\\n```javascript\\nvar Minimatch = require(\\\"minimatch\\\").Minimatch\\nvar mm = new Minimatch(pattern, options)\\n```\\n\\n### Properties\\n\\n* `pattern` The original pattern the minimatch object represents.\\n* `options` The options supplied to the constructor.\\n* `set` A 2-dimensional array of regexp or string expressions.\\n  Each row in the\\n  array corresponds to a brace-expanded pattern.  Each item in the row\\n  corresponds to a single path-part.  For example, the pattern\\n  `{a,b/c}/d` would expand to a set of patterns like:\\n\\n        [ [ a, d ]\\n        , [ b, c, d ] ]\\n\\n    If a portion of the pattern doesn't have any \\\"magic\\\" in it\\n    (that is, it's something like `\\\"foo\\\"` rather than `fo*o?`), then it\\n    will be left as a string rather than converted to a regular\\n    expression.\\n\\n* `regexp` Created by the `makeRe` method.  A single regular expression\\n  expressing the entire pattern.  This is useful in cases where you wish\\n  to use the pattern somewhat like `fnmatch(3)` with `FNM_PATH` enabled.\\n* `negate` True if the pattern is negated.\\n* `comment` True if the pattern is a comment.\\n* `empty` True if the pattern is `\\\"\\\"`.\\n\\n### Methods\\n\\n* `makeRe` Generate the `regexp` member if necessary, and return it.\\n  Will return `false` if the pattern is invalid.\\n* `match(fname)` Return true if the filename matches the pattern, or\\n  false otherwise.\\n* `matchOne(fileArray, patternArray, partial)` Take a `/`-split\\n  filename, and match it against a single row in the `regExpSet`.  This\\n  method is mainly for internal use, but is exposed so that it can be\\n  used by a glob-walker that needs to avoid excessive filesystem calls.\\n\\nAll other methods are internal, and will be called as necessary.\\n\\n## Functions\\n\\nThe top-level exported function has a `cache` property, which is an LRU\\ncache set to store 100 items.  So, calling these methods repeatedly\\nwith the same pattern and options will use the same Minimatch object,\\nsaving the cost of parsing it multiple times.\\n\\n### minimatch(path, pattern, options)\\n\\nMain export.  Tests a path against the pattern using the options.\\n\\n```javascript\\nvar isJS = minimatch(file, \\\"*.js\\\", { matchBase: true })\\n```\\n\\n### minimatch.filter(pattern, options)\\n\\nReturns a function that tests its\\nsupplied argument, suitable for use with `Array.filter`.  Example:\\n\\n```javascript\\nvar javascripts = fileList.filter(minimatch.filter(\\\"*.js\\\", {matchBase: true}))\\n```\\n\\n### minimatch.match(list, pattern, options)\\n\\nMatch against the list of\\nfiles, in the style of fnmatch or glob.  If nothing is matched, and\\noptions.nonull is set, then return a list containing the pattern itself.\\n\\n```javascript\\nvar javascripts = minimatch.match(fileList, \\\"*.js\\\", {matchBase: true}))\\n```\\n\\n### minimatch.makeRe(pattern, options)\\n\\nMake a regular expression object from the pattern.\\n\\n## Options\\n\\nAll options are `false` by default.\\n\\n### debug\\n\\nDump a ton of stuff to stderr.\\n\\n### nobrace\\n\\nDo not expand `{a,b}` and `{1..3}` brace sets.\\n\\n### noglobstar\\n\\nDisable `**` matching against multiple folder names.\\n\\n### dot\\n\\nAllow patterns to match filenames starting with a period, even if\\nthe pattern does not explicitly have a period in that spot.\\n\\nNote that by default, `a/**/b` will **not** match `a/.d/b`, unless `dot`\\nis set.\\n\\n### noext\\n\\nDisable \\\"extglob\\\" style patterns like `+(a|b)`.\\n\\n### nocase\\n\\nPerform a case-insensitive match.\\n\\n### nonull\\n\\nWhen a match is not found by `minimatch.match`, return a list containing\\nthe pattern itself.  When set, an empty list is returned if there are\\nno matches.\\n\\n### matchBase\\n\\nIf set, then patterns without slashes will be matched\\nagainst the basename of the path if it contains slashes.  For example,\\n`a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.\\n\\n### nocomment\\n\\nSuppress the behavior of treating `#` at the start of a pattern as a\\ncomment.\\n\\n### nonegate\\n\\nSuppress the behavior of treating a leading `!` character as negation.\\n\\n### flipNegate\\n\\nReturns from negate expressions the same as if they were not negated.\\n(Ie, true on a hit, false on a miss.)\\n\\n\\n## Comparisons to other fnmatch/glob implementations\\n\\nWhile strict compliance with the existing standards is a worthwhile\\ngoal, some discrepancies exist between minimatch and other\\nimplementations, and are intentional.\\n\\nIf the pattern starts with a `!` character, then it is negated.  Set the\\n`nonegate` flag to suppress this behavior, and treat leading `!`\\ncharacters normally.  This is perhaps relevant if you wish to start the\\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\\ncharacters at the start of a pattern will negate the pattern multiple\\ntimes.\\n\\nIf a pattern starts with `#`, then it is treated as a comment, and\\nwill not match anything.  Use `\\\\#` to match a literal `#` at the\\nstart of a line, or set the `nocomment` flag to suppress this behavior.\\n\\nThe double-star character `**` is supported by default, unless the\\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\\nand bash 4.1, where `**` only has special significance if it is the only\\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\\n`a/**b` will not.\\n\\nIf an escaped pattern has no matches, and the `nonull` flag is set,\\nthen minimatch.match returns the pattern as-provided, rather than\\ninterpreting the character escapes.  For example,\\n`minimatch.match([], \\\"\\\\\\\\*a\\\\\\\\?\\\")` will return `\\\"\\\\\\\\*a\\\\\\\\?\\\"` rather than\\n`\\\"*a?\\\"`.  This is akin to setting the `nullglob` option in bash, except\\nthat it does not resolve escaped pattern characters.\\n\\nIf brace expansion is not disabled, then it is performed before any\\nother interpretation of the glob pattern.  Thus, a pattern like\\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\\nchecked for validity.  Since those two are valid, matching proceeds.\\n\",\n   33:   \"readmeFilename\": \"README.md\",\n   34    \"bugs\": {\n   35      \"url\": \"https://github.com/isaacs/minimatch/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/glob/node_modules/minimatch/README.md:\n   76  * `makeRe` Generate the `regexp` member if necessary, and return it.\n   77    Will return `false` if the pattern is invalid.\n   78: * `match(fname)` Return true if the filename matches the pattern, or\n   79    false otherwise.\n   80  * `matchOne(fileArray, patternArray, partial)` Take a `/`-split\n   81:   filename, and match it against a single row in the `regExpSet`.  This\n   82    method is mainly for internal use, but is exposed so that it can be\n   83    used by a glob-walker that needs to avoid excessive filesystem calls.\n   ..\n  141  ### dot\n  142  \n  143: Allow patterns to match filenames starting with a period, even if\n  144  the pattern does not explicitly have a period in that spot.\n  145  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/glob/node_modules/minimatch/node_modules/lru-cache/package.json:\n   24    },\n   25    \"readme\": \"# lru cache\\n\\nA cache object that deletes the least-recently-used items.\\n\\n## Usage:\\n\\n```javascript\\nvar LRU = require(\\\"lru-cache\\\")\\n  , options = { max: 500\\n              , length: function (n) { return n * 2 }\\n              , dispose: function (key, n) { n.close() }\\n              , maxAge: 1000 * 60 * 60 }\\n  , cache = LRU(options)\\n  , otherCache = LRU(50) // sets just the max size\\n\\ncache.set(\\\"key\\\", \\\"value\\\")\\ncache.get(\\\"key\\\") // \\\"value\\\"\\n\\ncache.reset()    // empty the cache\\n```\\n\\nIf you put more stuff in it, then items will fall out.\\n\\nIf you try to put an oversized thing in it, then it'll fall out right\\naway.\\n\\n## Options\\n\\n* `max` The maximum size of the cache, checked by applying the length\\n  function to all values in the cache.  Not setting this is kind of\\n  silly, since that's the whole purpose of this lib, but it defaults\\n  to `Infinity`.\\n* `maxAge` Maximum age in ms.  Items are not pro-actively pruned out\\n  as they age, but if you try to get an item that is too old, it'll\\n  drop it and return undefined instead of giving it to you.\\n* `length` Function that is used to calculate the length of stored\\n  items.  If you're storing strings or buffers, then you probably want\\n  to do something like `function(n){return n.length}`.  The default is\\n  `function(n){return 1}`, which is fine if you want to store `n`\\n  like-sized things.\\n* `dispose` Function that is called on items when they are dropped\\n  from the cache.  This can be handy if you want to close file\\n  descriptors or do other cleanup tasks when items are no longer\\n  accessible.  Called with `key, value`.  It's called *before*\\n  actually removing the item from the internal cache, so if you want\\n  to immediately put it back in, you'll have to do that in a\\n  `nextTick` or `setTimeout` callback or it won't do anything.\\n* `stale` By default, if you set a `maxAge`, it'll only actually pull\\n  stale items out of the cache when you `get(key)`.  (That is, it's\\n  not pre-emptively doing a `setTimeout` or anything.)  If you set\\n  `stale:true`, it'll return the stale value before deleting it.  If\\n  you don't set this, then it'll return `undefined` when you try to\\n  get a stale entry, as if it had already been deleted.\\n\\n## API\\n\\n* `set(key, value)`\\n* `get(key) => value`\\n\\n    Both of these will update the \\\"recently used\\\"-ness of the key.\\n    They do what you think.\\n\\n* `peek(key)`\\n\\n    Returns the key value (or `undefined` if not found) without\\n    updating the \\\"recently used\\\"-ness of the key.\\n\\n    (If you find yourself using this a lot, you *might* be using the\\n    wrong sort of data structure, but there are some use cases where\\n    it's handy.)\\n\\n* `del(key)`\\n\\n    Deletes a key out of the cache.\\n\\n* `reset()`\\n\\n    Clear the cache entirely, throwing away all values.\\n\\n* `has(key)`\\n\\n    Check if a key is in the cache, without updating the recent-ness\\n    or deleting it for being stale.\\n\\n* `forEach(function(value,key,cache), [thisp])`\\n\\n    Just like `Array.prototype.forEach`.  Iterates over all the keys\\n    in the cache, in order of recent-ness.  (Ie, more recently used\\n    items are iterated over first.)\\n\\n* `keys()`\\n\\n    Return an array of the keys in the cache.\\n\\n* `values()`\\n\\n    Return an array of the values in the cache.\\n\",\n   26:   \"readmeFilename\": \"README.md\",\n   27    \"bugs\": {\n   28      \"url\": \"https://github.com/isaacs/node-lru-cache/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/glob/node_modules/minimatch/node_modules/sigmund/package.json:\n   33    \"license\": \"BSD\",\n   34    \"readme\": \"# sigmund\\n\\nQuick and dirty signatures for Objects.\\n\\nThis is like a much faster `deepEquals` comparison, which returns a\\nstring key suitable for caches and the like.\\n\\n## Usage\\n\\n```javascript\\nfunction doSomething (someObj) {\\n  var key = sigmund(someObj, maxDepth) // max depth defaults to 10\\n  var cached = cache.get(key)\\n  if (cached) return cached)\\n\\n  var result = expensiveCalculation(someObj)\\n  cache.set(key, result)\\n  return result\\n}\\n```\\n\\nThe resulting key will be as unique and reproducible as calling\\n`JSON.stringify` or `util.inspect` on the object, but is much faster.\\nIn order to achieve this speed, some differences are glossed over.\\nFor example, the object `{0:'foo'}` will be treated identically to the\\narray `['foo']`.\\n\\nAlso, just as there is no way to summon the soul from the scribblings\\nof a cocain-addled psychoanalyst, there is no way to revive the object\\nfrom the signature string that sigmund gives you.  In fact, it's\\nbarely even readable.\\n\\nAs with `sys.inspect` and `JSON.stringify`, larger objects will\\nproduce larger signature strings.\\n\\nBecause sigmund is a bit less strict than the more thorough\\nalternatives, the strings will be shorter, and also there is a\\nslightly higher chance for collisions.  For example, these objects\\nhave the same signature:\\n\\n    var obj1 = {a:'b',c:/def/,g:['h','i',{j:'',k:'l'}]}\\n    var obj2 = {a:'b',c:'/def/',g:['h','i','{jkl']}\\n\\nLike a good Freudian, sigmund is most effective when you already have\\nsome understanding of what you're looking for.  It can help you help\\nyourself, but you must be willing to do some work as well.\\n\\nCycles are handled, and cyclical objects are silently omitted (though\\nthe key is included in the signature output.)\\n\\nThe second argument is the maximum depth, which defaults to 10,\\nbecause that is the maximum object traversal depth covered by most\\ninsurance carriers.\\n\",\n   35:   \"readmeFilename\": \"README.md\",\n   36    \"bugs\": {\n   37      \"url\": \"https://github.com/isaacs/sigmund/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/glob/test/new-glob-optional-options.js:\n    3  \n    4  test('new glob, with cb, and no options', function (t) {\n    5:   new Glob(__filename, function(er, results) {\n    6      if (er) throw er;\n    7:     t.same(results, [__filename]);\n    8      t.end();\n    9    });\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/package.json:\n   19    },\n   20    \"license\": \"MIT\",\n   21:   \"readmeFilename\": \"README.markdown\",\n   22    \"engines\": {\n   23      \"node\": \">=0.4.7\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/dist/handlebars.amd.js:\n  126      \n  127  \n  128:     var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n  129  \n  130      function Exception(message, node) {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/dist/handlebars.amd.min.js:\n   25  @license\n   26  */\n   27: define(\"handlebars/safe-string\",[\"exports\"],function(a){function b(a){this.string=a}b.prototype.toString=function(){return\"\"+this.string},a[\"default\"]=b}),define(\"handlebars/utils\",[\"./safe-string\",\"exports\"],function(a,b){function c(a){return h[a]||\"&amp;\"}function d(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])}function e(a){return a instanceof g?a.toString():a||0===a?(a=\"\"+a,j.test(a)?a.replace(i,c):a):\"\"}function f(a){return a||0===a?m(a)&&0===a.length?!0:!1:!0}var g=a[\"default\"],h={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},i=/[&<>\"'`]/g,j=/[&<>\"'`]/;b.extend=d;var k=Object.prototype.toString;b.toString=k;var l=function(a){return\"function\"==typeof a};l(/x/)&&(l=function(a){return\"function\"==typeof a&&\"[object Function]\"===k.call(a)});var l;b.isFunction=l;var m=Array.isArray||function(a){return a&&\"object\"==typeof a?\"[object Array]\"===k.call(a):!1};b.isArray=m,b.escapeExpression=e,b.isEmpty=f}),define(\"handlebars/exception\",[\"exports\"],function(a){function b(a,b){var d;b&&b.firstLine&&(d=b.firstLine,a+=\" - \"+d+\":\"+b.firstColumn);for(var e=Error.prototype.constructor.call(this,a),f=0;f<c.length;f++)this[c[f]]=e[c[f]];d&&(this.lineNumber=d,this.column=b.firstColumn)}var c=[\"description\",\"fileName\",\"lineNumber\",\"message\",\"name\",\"number\",\"stack\"];b.prototype=new Error,a[\"default\"]=b}),define(\"handlebars/base\",[\"./utils\",\"./exception\",\"exports\"],function(a,b,c){function d(a,b){this.helpers=a||{},this.partials=b||{},e(this)}function e(a){a.registerHelper(\"helperMissing\",function(a){if(2===arguments.length)return void 0;throw new h(\"Missing helper: '\"+a+\"'\")}),a.registerHelper(\"blockHelperMissing\",function(b,c){var d=c.inverse||function(){},e=c.fn;return m(b)&&(b=b.call(this)),b===!0?e(this):b===!1||null==b?d(this):l(b)?b.length>0?a.helpers.each(b,c):d(this):e(b)}),a.registerHelper(\"each\",function(a,b){var c,d=b.fn,e=b.inverse,f=0,g=\"\";if(m(a)&&(a=a.call(this)),b.data&&(c=q(b.data)),a&&\"object\"==typeof a)if(l(a))for(var h=a.length;h>f;f++)c&&(c.index=f,c.first=0===f,c.last=f===a.length-1),g+=d(a[f],{data:c});else for(var i in a)a.hasOwnProperty(i)&&(c&&(c.key=i,c.index=f,c.first=0===f),g+=d(a[i],{data:c}),f++);return 0===f&&(g=e(this)),g}),a.registerHelper(\"if\",function(a,b){return m(a)&&(a=a.call(this)),!b.hash.includeZero&&!a||g.isEmpty(a)?b.inverse(this):b.fn(this)}),a.registerHelper(\"unless\",function(b,c){return a.helpers[\"if\"].call(this,b,{fn:c.inverse,inverse:c.fn,hash:c.hash})}),a.registerHelper(\"with\",function(a,b){return m(a)&&(a=a.call(this)),g.isEmpty(a)?void 0:b.fn(a)}),a.registerHelper(\"log\",function(b,c){var d=c.data&&null!=c.data.level?parseInt(c.data.level,10):1;a.log(d,b)})}function f(a,b){p.log(a,b)}var g=a,h=b[\"default\"],i=\"1.3.0\";c.VERSION=i;var j=4;c.COMPILER_REVISION=j;var k={1:\"<= 1.0.rc.2\",2:\"== 1.0.0-rc.3\",3:\"== 1.0.0-rc.4\",4:\">= 1.0.0\"};c.REVISION_CHANGES=k;var l=g.isArray,m=g.isFunction,n=g.toString,o=\"[object Object]\";c.HandlebarsEnvironment=d,d.prototype={constructor:d,logger:p,log:f,registerHelper:function(a,b,c){if(n.call(a)===o){if(c||b)throw new h(\"Arg not supported with multiple helpers\");g.extend(this.helpers,a)}else c&&(b.not=c),this.helpers[a]=b},registerPartial:function(a,b){n.call(a)===o?g.extend(this.partials,a):this.partials[a]=b}};var p={methodMap:{0:\"debug\",1:\"info\",2:\"warn\",3:\"error\"},DEBUG:0,INFO:1,WARN:2,ERROR:3,level:3,log:function(a,b){if(p.level<=a){var c=p.methodMap[a];\"undefined\"!=typeof console&&console[c]&&console[c].call(console,b)}}};c.logger=p,c.log=f;var q=function(a){var b={};return g.extend(b,a),b};c.createFrame=q}),define(\"handlebars/runtime\",[\"./utils\",\"./exception\",\"./base\",\"exports\"],function(a,b,c,d){function e(a){var b=a&&a[0]||1,c=m;if(b!==c){if(c>b){var d=n[c],e=n[b];throw new l(\"Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (\"+d+\") or downgrade your runtime to an older version (\"+e+\").\")}throw new l(\"Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (\"+a[1]+\").\")}}function f(a,b){if(!b)throw new l(\"No environment passed to template\");var c=function(a,c,d,e,f,g){var h=b.VM.invokePartial.apply(this,arguments);if(null!=h)return h;if(b.compile){var i={helpers:e,partials:f,data:g};return f[c]=b.compile(a,{data:void 0!==g},b),f[c](d,i)}throw new l(\"The partial \"+c+\" could not be compiled when running in runtime-only mode\")},d={escapeExpression:k.escapeExpression,invokePartial:c,programs:[],program:function(a,b,c){var d=this.programs[a];return c?d=h(a,b,c):d||(d=this.programs[a]=h(a,b)),d},merge:function(a,b){var c=a||b;return a&&b&&a!==b&&(c={},k.extend(c,b),k.extend(c,a)),c},programWithDepth:b.VM.programWithDepth,noop:b.VM.noop,compilerInfo:null};return function(c,e){e=e||{};var f,g,h=e.partial?e:b;e.partial||(f=e.helpers,g=e.partials);var i=a.call(d,h,c,f,g,e.data);return e.partial||b.VM.checkRevision(d.compilerInfo),i}}function g(a,b,c){var d=Array.prototype.slice.call(arguments,3),e=function(a,e){return e=e||{},b.apply(this,[a,e.data||c].concat(d))};return e.program=a,e.depth=d.length,e}function h(a,b,c){var d=function(a,d){return d=d||{},b(a,d.data||c)};return d.program=a,d.depth=0,d}function i(a,b,c,d,e,f){var g={partial:!0,helpers:d,partials:e,data:f};if(void 0===a)throw new l(\"The partial \"+b+\" could not be found\");return a instanceof Function?a(c,g):void 0}function j(){return\"\"}var k=a,l=b[\"default\"],m=c.COMPILER_REVISION,n=c.REVISION_CHANGES;d.checkRevision=e,d.template=f,d.programWithDepth=g,d.program=h,d.invokePartial=i,d.noop=j}),define(\"handlebars.runtime\",[\"./handlebars/base\",\"./handlebars/safe-string\",\"./handlebars/exception\",\"./handlebars/utils\",\"./handlebars/runtime\",\"exports\"],function(a,b,c,d,e,f){var g=a,h=b[\"default\"],i=c[\"default\"],j=d,k=e,l=function(){var a=new g.HandlebarsEnvironment;return j.extend(a,g),a.SafeString=h,a.Exception=i,a.Utils=j,a.VM=k,a.template=function(b){return k.template(b,a)},a},m=l();m.create=l,f[\"default\"]=m}),define(\"handlebars/compiler/ast\",[\"../exception\",\"exports\"],function(a,b){function c(a){a=a||{},this.firstLine=a.first_line,this.firstColumn=a.first_column,this.lastColumn=a.last_column,this.lastLine=a.last_line}var d=a[\"default\"],e={ProgramNode:function(a,b,d,f){var g,h;3===arguments.length?(f=d,d=null):2===arguments.length&&(f=b,b=null),c.call(this,f),this.type=\"program\",this.statements=a,this.strip={},d?(h=d[0],h?(g={first_line:h.firstLine,last_line:h.lastLine,last_column:h.lastColumn,first_column:h.firstColumn},this.inverse=new e.ProgramNode(d,b,g)):this.inverse=new e.ProgramNode(d,b),this.strip.right=b.left):b&&(this.strip.left=b.right)},MustacheNode:function(a,b,d,f,g){if(c.call(this,g),this.type=\"mustache\",this.strip=f,null!=d&&d.charAt){var h=d.charAt(3)||d.charAt(2);this.escaped=\"{\"!==h&&\"&\"!==h}else this.escaped=!!d;this.sexpr=a instanceof e.SexprNode?a:new e.SexprNode(a,b),this.sexpr.isRoot=!0,this.id=this.sexpr.id,this.params=this.sexpr.params,this.hash=this.sexpr.hash,this.eligibleHelper=this.sexpr.eligibleHelper,this.isHelper=this.sexpr.isHelper},SexprNode:function(a,b,d){c.call(this,d),this.type=\"sexpr\",this.hash=b;var e=this.id=a[0],f=this.params=a.slice(1),g=this.eligibleHelper=e.isSimple;this.isHelper=g&&(f.length||b)},PartialNode:function(a,b,d,e){c.call(this,e),this.type=\"partial\",this.partialName=a,this.context=b,this.strip=d},BlockNode:function(a,b,e,f,g){if(c.call(this,g),a.sexpr.id.original!==f.path.original)throw new d(a.sexpr.id.original+\" doesn't match \"+f.path.original,this);this.type=\"block\",this.mustache=a,this.program=b,this.inverse=e,this.strip={left:a.strip.left,right:f.strip.right},(b||e).strip.left=a.strip.right,(e||b).strip.right=f.strip.left,e&&!b&&(this.isInverse=!0)},ContentNode:function(a,b){c.call(this,b),this.type=\"content\",this.string=a},HashNode:function(a,b){c.call(this,b),this.type=\"hash\",this.pairs=a},IdNode:function(a,b){c.call(this,b),this.type=\"ID\";for(var e=\"\",f=[],g=0,h=0,i=a.length;i>h;h++){var j=a[h].part;if(e+=(a[h].separator||\"\")+j,\"..\"===j||\".\"===j||\"this\"===j){if(f.length>0)throw new d(\"Invalid path: \"+e,this);\"..\"===j?g++:this.isScoped=!0}else f.push(j)}this.original=e,this.parts=f,this.string=f.join(\".\"),this.depth=g,this.isSimple=1===a.length&&!this.isScoped&&0===g,this.stringModeValue=this.string},PartialNameNode:function(a,b){c.call(this,b),this.type=\"PARTIAL_NAME\",this.name=a.original},DataNode:function(a,b){c.call(this,b),this.type=\"DATA\",this.id=a},StringNode:function(a,b){c.call(this,b),this.type=\"STRING\",this.original=this.string=this.stringModeValue=a},IntegerNode:function(a,b){c.call(this,b),this.type=\"INTEGER\",this.original=this.integer=a,this.stringModeValue=Number(a)},BooleanNode:function(a,b){c.call(this,b),this.type=\"BOOLEAN\",this.bool=a,this.stringModeValue=\"true\"===a},CommentNode:function(a,b){c.call(this,b),this.type=\"comment\",this.comment=a}};b[\"default\"]=e}),define(\"handlebars/compiler/parser\",[\"exports\"],function(a){var b=function(){function a(a,b){return{left:\"~\"===a.charAt(2),right:\"~\"===b.charAt(0)||\"~\"===b.charAt(1)}}function b(){this.yy={}}var c={trace:function(){},yy:{},symbols_:{error:2,root:3,statements:4,EOF:5,program:6,simpleInverse:7,statement:8,openInverse:9,closeBlock:10,openBlock:11,mustache:12,partial:13,CONTENT:14,COMMENT:15,OPEN_BLOCK:16,sexpr:17,CLOSE:18,OPEN_INVERSE:19,OPEN_ENDBLOCK:20,path:21,OPEN:22,OPEN_UNESCAPED:23,CLOSE_UNESCAPED:24,OPEN_PARTIAL:25,partialName:26,partial_option0:27,sexpr_repetition0:28,sexpr_option0:29,dataName:30,param:31,STRING:32,INTEGER:33,BOOLEAN:34,OPEN_SEXPR:35,CLOSE_SEXPR:36,hash:37,hash_repetition_plus0:38,hashSegment:39,ID:40,EQUALS:41,DATA:42,pathSegments:43,SEP:44,$accept:0,$end:1},terminals_:{2:\"error\",5:\"EOF\",14:\"CONTENT\",15:\"COMMENT\",16:\"OPEN_BLOCK\",18:\"CLOSE\",19:\"OPEN_INVERSE\",20:\"OPEN_ENDBLOCK\",22:\"OPEN\",23:\"OPEN_UNESCAPED\",24:\"CLOSE_UNESCAPED\",25:\"OPEN_PARTIAL\",32:\"STRING\",33:\"INTEGER\",34:\"BOOLEAN\",35:\"OPEN_SEXPR\",36:\"CLOSE_SEXPR\",40:\"ID\",41:\"EQUALS\",42:\"DATA\",44:\"SEP\"},productions_:[0,[3,2],[3,1],[6,2],[6,3],[6,2],[6,1],[6,1],[6,0],[4,1],[4,2],[8,3],[8,3],[8,1],[8,1],[8,1],[8,1],[11,3],[9,3],[10,3],[12,3],[12,3],[13,4],[7,2],[17,3],[17,1],[31,1],[31,1],[31,1],[31,1],[31,1],[31,3],[37,1],[39,3],[26,1],[26,1],[26,1],[30,2],[21,1],[43,3],[43,1],[27,0],[27,1],[28,0],[28,2],[29,0],[29,1],[38,1],[38,2]],performAction:function(b,c,d,e,f,g){var h=g.length-1;switch(f){case 1:return new e.ProgramNode(g[h-1],this._$);case 2:return new e.ProgramNode([],this._$);case 3:this.$=new e.ProgramNode([],g[h-1],g[h],this._$);break;case 4:this.$=new e.ProgramNode(g[h-2],g[h-1],g[h],this._$);break;case 5:this.$=new e.ProgramNode(g[h-1],g[h],[],this._$);break;case 6:this.$=new e.ProgramNode(g[h],this._$);break;case 7:this.$=new e.ProgramNode([],this._$);break;case 8:this.$=new e.ProgramNode([],this._$);break;case 9:this.$=[g[h]];break;case 10:g[h-1].push(g[h]),this.$=g[h-1];break;case 11:this.$=new e.BlockNode(g[h-2],g[h-1].inverse,g[h-1],g[h],this._$);break;case 12:this.$=new e.BlockNode(g[h-2],g[h-1],g[h-1].inverse,g[h],this._$);break;case 13:this.$=g[h];break;case 14:this.$=g[h];break;case 15:this.$=new e.ContentNode(g[h],this._$);break;case 16:this.$=new e.CommentNode(g[h],this._$);break;case 17:this.$=new e.MustacheNode(g[h-1],null,g[h-2],a(g[h-2],g[h]),this._$);break;case 18:this.$=new e.MustacheNode(g[h-1],null,g[h-2],a(g[h-2],g[h]),this._$);break;case 19:this.$={path:g[h-1],strip:a(g[h-2],g[h])};break;case 20:this.$=new e.MustacheNode(g[h-1],null,g[h-2],a(g[h-2],g[h]),this._$);break;case 21:this.$=new e.MustacheNode(g[h-1],null,g[h-2],a(g[h-2],g[h]),this._$);break;case 22:this.$=new e.PartialNode(g[h-2],g[h-1],a(g[h-3],g[h]),this._$);break;case 23:this.$=a(g[h-1],g[h]);break;case 24:this.$=new e.SexprNode([g[h-2]].concat(g[h-1]),g[h],this._$);break;case 25:this.$=new e.SexprNode([g[h]],null,this._$);break;case 26:this.$=g[h];break;case 27:this.$=new e.StringNode(g[h],this._$);break;case 28:this.$=new e.IntegerNode(g[h],this._$);break;case 29:this.$=new e.BooleanNode(g[h],this._$);break;case 30:this.$=g[h];break;case 31:g[h-1].isHelper=!0,this.$=g[h-1];break;case 32:this.$=new e.HashNode(g[h],this._$);break;case 33:this.$=[g[h-2],g[h]];break;case 34:this.$=new e.PartialNameNode(g[h],this._$);break;case 35:this.$=new e.PartialNameNode(new e.StringNode(g[h],this._$),this._$);break;case 36:this.$=new e.PartialNameNode(new e.IntegerNode(g[h],this._$));break;case 37:this.$=new e.DataNode(g[h],this._$);break;case 38:this.$=new e.IdNode(g[h],this._$);break;case 39:g[h-2].push({part:g[h],separator:g[h-1]}),this.$=g[h-2];break;case 40:this.$=[{part:g[h]}];break;case 43:this.$=[];break;case 44:g[h-1].push(g[h]);break;case 47:this.$=[g[h]];break;case 48:g[h-1].push(g[h])}},table:[{3:1,4:2,5:[1,3],8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],22:[1,13],23:[1,14],25:[1,15]},{1:[3]},{5:[1,16],8:17,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],22:[1,13],23:[1,14],25:[1,15]},{1:[2,2]},{5:[2,9],14:[2,9],15:[2,9],16:[2,9],19:[2,9],20:[2,9],22:[2,9],23:[2,9],25:[2,9]},{4:20,6:18,7:19,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,21],20:[2,8],22:[1,13],23:[1,14],25:[1,15]},{4:20,6:22,7:19,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,21],20:[2,8],22:[1,13],23:[1,14],25:[1,15]},{5:[2,13],14:[2,13],15:[2,13],16:[2,13],19:[2,13],20:[2,13],22:[2,13],23:[2,13],25:[2,13]},{5:[2,14],14:[2,14],15:[2,14],16:[2,14],19:[2,14],20:[2,14],22:[2,14],23:[2,14],25:[2,14]},{5:[2,15],14:[2,15],15:[2,15],16:[2,15],19:[2,15],20:[2,15],22:[2,15],23:[2,15],25:[2,15]},{5:[2,16],14:[2,16],15:[2,16],16:[2,16],19:[2,16],20:[2,16],22:[2,16],23:[2,16],25:[2,16]},{17:23,21:24,30:25,40:[1,28],42:[1,27],43:26},{17:29,21:24,30:25,40:[1,28],42:[1,27],43:26},{17:30,21:24,30:25,40:[1,28],42:[1,27],43:26},{17:31,21:24,30:25,40:[1,28],42:[1,27],43:26},{21:33,26:32,32:[1,34],33:[1,35],40:[1,28],43:26},{1:[2,1]},{5:[2,10],14:[2,10],15:[2,10],16:[2,10],19:[2,10],20:[2,10],22:[2,10],23:[2,10],25:[2,10]},{10:36,20:[1,37]},{4:38,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],20:[2,7],22:[1,13],23:[1,14],25:[1,15]},{7:39,8:17,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,21],20:[2,6],22:[1,13],23:[1,14],25:[1,15]},{17:23,18:[1,40],21:24,30:25,40:[1,28],42:[1,27],43:26},{10:41,20:[1,37]},{18:[1,42]},{18:[2,43],24:[2,43],28:43,32:[2,43],33:[2,43],34:[2,43],35:[2,43],36:[2,43],40:[2,43],42:[2,43]},{18:[2,25],24:[2,25],36:[2,25]},{18:[2,38],24:[2,38],32:[2,38],33:[2,38],34:[2,38],35:[2,38],36:[2,38],40:[2,38],42:[2,38],44:[1,44]},{21:45,40:[1,28],43:26},{18:[2,40],24:[2,40],32:[2,40],33:[2,40],34:[2,40],35:[2,40],36:[2,40],40:[2,40],42:[2,40],44:[2,40]},{18:[1,46]},{18:[1,47]},{24:[1,48]},{18:[2,41],21:50,27:49,40:[1,28],43:26},{18:[2,34],40:[2,34]},{18:[2,35],40:[2,35]},{18:[2,36],40:[2,36]},{5:[2,11],14:[2,11],15:[2,11],16:[2,11],19:[2,11],20:[2,11],22:[2,11],23:[2,11],25:[2,11]},{21:51,40:[1,28],43:26},{8:17,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],20:[2,3],22:[1,13],23:[1,14],25:[1,15]},{4:52,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],20:[2,5],22:[1,13],23:[1,14],25:[1,15]},{14:[2,23],15:[2,23],16:[2,23],19:[2,23],20:[2,23],22:[2,23],23:[2,23],25:[2,23]},{5:[2,12],14:[2,12],15:[2,12],16:[2,12],19:[2,12],20:[2,12],22:[2,12],23:[2,12],25:[2,12]},{14:[2,18],15:[2,18],16:[2,18],19:[2,18],20:[2,18],22:[2,18],23:[2,18],25:[2,18]},{18:[2,45],21:56,24:[2,45],29:53,30:60,31:54,32:[1,57],33:[1,58],34:[1,59],35:[1,61],36:[2,45],37:55,38:62,39:63,40:[1,64],42:[1,27],43:26},{40:[1,65]},{18:[2,37],24:[2,37],32:[2,37],33:[2,37],34:[2,37],35:[2,37],36:[2,37],40:[2,37],42:[2,37]},{14:[2,17],15:[2,17],16:[2,17],19:[2,17],20:[2,17],22:[2,17],23:[2,17],25:[2,17]},{5:[2,20],14:[2,20],15:[2,20],16:[2,20],19:[2,20],20:[2,20],22:[2,20],23:[2,20],25:[2,20]},{5:[2,21],14:[2,21],15:[2,21],16:[2,21],19:[2,21],20:[2,21],22:[2,21],23:[2,21],25:[2,21]},{18:[1,66]},{18:[2,42]},{18:[1,67]},{8:17,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],20:[2,4],22:[1,13],23:[1,14],25:[1,15]},{18:[2,24],24:[2,24],36:[2,24]},{18:[2,44],24:[2,44],32:[2,44],33:[2,44],34:[2,44],35:[2,44],36:[2,44],40:[2,44],42:[2,44]},{18:[2,46],24:[2,46],36:[2,46]},{18:[2,26],24:[2,26],32:[2,26],33:[2,26],34:[2,26],35:[2,26],36:[2,26],40:[2,26],42:[2,26]},{18:[2,27],24:[2,27],32:[2,27],33:[2,27],34:[2,27],35:[2,27],36:[2,27],40:[2,27],42:[2,27]},{18:[2,28],24:[2,28],32:[2,28],33:[2,28],34:[2,28],35:[2,28],36:[2,28],40:[2,28],42:[2,28]},{18:[2,29],24:[2,29],32:[2,29],33:[2,29],34:[2,29],35:[2,29],36:[2,29],40:[2,29],42:[2,29]},{18:[2,30],24:[2,30],32:[2,30],33:[2,30],34:[2,30],35:[2,30],36:[2,30],40:[2,30],42:[2,30]},{17:68,21:24,30:25,40:[1,28],42:[1,27],43:26},{18:[2,32],24:[2,32],36:[2,32],39:69,40:[1,70]},{18:[2,47],24:[2,47],36:[2,47],40:[2,47]},{18:[2,40],24:[2,40],32:[2,40],33:[2,40],34:[2,40],35:[2,40],36:[2,40],40:[2,40],41:[1,71],42:[2,40],44:[2,40]},{18:[2,39],24:[2,39],32:[2,39],33:[2,39],34:[2,39],35:[2,39],36:[2,39],40:[2,39],42:[2,39],44:[2,39]},{5:[2,22],14:[2,22],15:[2,22],16:[2,22],19:[2,22],20:[2,22],22:[2,22],23:[2,22],25:[2,22]},{5:[2,19],14:[2,19],15:[2,19],16:[2,19],19:[2,19],20:[2,19],22:[2,19],23:[2,19],25:[2,19]},{36:[1,72]},{18:[2,48],24:[2,48],36:[2,48],40:[2,48]},{41:[1,71]},{21:56,30:60,31:73,32:[1,57],33:[1,58],34:[1,59],35:[1,61],40:[1,28],42:[1,27],43:26},{18:[2,31],24:[2,31],32:[2,31],33:[2,31],34:[2,31],35:[2,31],36:[2,31],40:[2,31],42:[2,31]},{18:[2,33],24:[2,33],36:[2,33],40:[2,33]}],defaultActions:{3:[2,2],16:[2,1],50:[2,42]},parseError:function(a){throw new Error(a)},parse:function(a){function b(){var a;return a=c.lexer.lex()||1,\"number\"!=typeof a&&(a=c.symbols_[a]||a),a}var c=this,d=[0],e=[null],f=[],g=this.table,h=\"\",i=0,j=0,k=0;this.lexer.setInput(a),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,\"undefined\"==typeof this.lexer.yylloc&&(this.lexer.yylloc={});var l=this.lexer.yylloc;f.push(l);var m=this.lexer.options&&this.lexer.options.ranges;\"function\"==typeof this.yy.parseError&&(this.parseError=this.yy.parseError);for(var n,o,p,q,r,s,t,u,v,w={};;){if(p=d[d.length-1],this.defaultActions[p]?q=this.defaultActions[p]:((null===n||\"undefined\"==typeof n)&&(n=b()),q=g[p]&&g[p][n]),\"undefined\"==typeof q||!q.length||!q[0]){var x=\"\";if(!k){v=[];for(s in g[p])this.terminals_[s]&&s>2&&v.push(\"'\"+this.terminals_[s]+\"'\");x=this.lexer.showPosition?\"Parse error on line \"+(i+1)+\":\\n\"+this.lexer.showPosition()+\"\\nExpecting \"+v.join(\", \")+\", got '\"+(this.terminals_[n]||n)+\"'\":\"Parse error on line \"+(i+1)+\": Unexpected \"+(1==n?\"end of input\":\"'\"+(this.terminals_[n]||n)+\"'\"),this.parseError(x,{text:this.lexer.match,token:this.terminals_[n]||n,line:this.lexer.yylineno,loc:l,expected:v})}}if(q[0]instanceof Array&&q.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+p+\", token: \"+n);switch(q[0]){case 1:d.push(n),e.push(this.lexer.yytext),f.push(this.lexer.yylloc),d.push(q[1]),n=null,o?(n=o,o=null):(j=this.lexer.yyleng,h=this.lexer.yytext,i=this.lexer.yylineno,l=this.lexer.yylloc,k>0&&k--);break;case 2:if(t=this.productions_[q[1]][1],w.$=e[e.length-t],w._$={first_line:f[f.length-(t||1)].first_line,last_line:f[f.length-1].last_line,first_column:f[f.length-(t||1)].first_column,last_column:f[f.length-1].last_column},m&&(w._$.range=[f[f.length-(t||1)].range[0],f[f.length-1].range[1]]),r=this.performAction.call(w,h,j,i,this.yy,q[1],e,f),\"undefined\"!=typeof r)return r;t&&(d=d.slice(0,-1*t*2),e=e.slice(0,-1*t),f=f.slice(0,-1*t)),d.push(this.productions_[q[1]][0]),e.push(w.$),f.push(w._$),u=g[d[d.length-2]][d[d.length-1]],d.push(u);break;case 3:return!0}}return!0}},d=function(){var a={EOF:1,parseError:function(a,b){if(!this.yy.parser)throw new Error(a);this.yy.parser.parseError(a,b)},setInput:function(a){return this._input=a,this._more=this._less=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var a=this._input[0];this.yytext+=a,this.yyleng++,this.offset++,this.match+=a,this.matched+=a;var b=a.match(/(?:\\r\\n?|\\n).*/g);return b?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),a},unput:function(a){var b=a.length,c=a.split(/(?:\\r\\n?|\\n)/g);this._input=a+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-b-1),this.offset-=b;var d=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),c.length-1&&(this.yylineno-=c.length-1);var e=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:c?(c.length===d.length?this.yylloc.first_column:0)+d[d.length-c.length].length-c[0].length:this.yylloc.first_column-b},this.options.ranges&&(this.yylloc.range=[e[0],e[0]+this.yyleng-b]),this},more:function(){return this._more=!0,this},less:function(a){this.unput(this.match.slice(a))},pastInput:function(){var a=this.matched.substr(0,this.matched.length-this.match.length);return(a.length>20?\"...\":\"\")+a.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var a=this.match;return a.length<20&&(a+=this._input.substr(0,20-a.length)),(a.substr(0,20)+(a.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var a=this.pastInput(),b=new Array(a.length+1).join(\"-\");return a+this.upcomingInput()+\"\\n\"+b+\"^\"},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var a,b,c,d,e;this._more||(this.yytext=\"\",this.match=\"\");for(var f=this._currentRules(),g=0;g<f.length&&(c=this._input.match(this.rules[f[g]]),!c||b&&!(c[0].length>b[0].length)||(b=c,d=g,this.options.flex));g++);return b?(e=b[0].match(/(?:\\r\\n?|\\n).*/g),e&&(this.yylineno+=e.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:e?e[e.length-1].length-e[e.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+b[0].length},this.yytext+=b[0],this.match+=b[0],this.matches=b,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._input=this._input.slice(b[0].length),this.matched+=b[0],a=this.performAction.call(this,this.yy,this,f[d],this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),a?a:void 0):\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},lex:function(){var a=this.next();return\"undefined\"!=typeof a?a:this.lex()},begin:function(a){this.conditionStack.push(a)},popState:function(){return this.conditionStack.pop()},_currentRules:function(){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules},topState:function(){return this.conditionStack[this.conditionStack.length-2]},pushState:function(a){this.begin(a)}};return a.options={},a.performAction=function(a,b,c,d){function e(a,c){return b.yytext=b.yytext.substr(a,b.yyleng-c)}switch(c){case 0:if(\"\\\\\\\\\"===b.yytext.slice(-2)?(e(0,1),this.begin(\"mu\")):\"\\\\\"===b.yytext.slice(-1)?(e(0,1),this.begin(\"emu\")):this.begin(\"mu\"),b.yytext)return 14;break;case 1:return 14;case 2:return this.popState(),14;case 3:return e(0,4),this.popState(),15;case 4:return 35;case 5:return 36;case 6:return 25;case 7:return 16;case 8:return 20;case 9:return 19;case 10:return 19;case 11:return 23;case 12:return 22;case 13:this.popState(),this.begin(\"com\");break;case 14:return e(3,5),this.popState(),15;case 15:return 22;case 16:return 41;case 17:return 40;case 18:return 40;case 19:return 44;case 20:break;case 21:return this.popState(),24;case 22:return this.popState(),18;case 23:return b.yytext=e(1,2).replace(/\\\\\"/g,'\"'),32;case 24:return b.yytext=e(1,2).replace(/\\\\'/g,\"'\"),32;case 25:return 42;case 26:return 34;case 27:return 34;case 28:return 33;case 29:return 40;case 30:return b.yytext=e(1,2),40;case 31:return\"INVALID\";case 32:return 5}},a.rules=[/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:[\\s\\S]*?--\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{!--)/,/^(?:\\{\\{![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:-?[0-9]+(?=([~}\\s)])))/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)]))))/,/^(?:\\[[^\\]]*\\])/,/^(?:.)/,/^(?:$)/],a.conditions={mu:{rules:[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],inclusive:!1},emu:{rules:[2],inclusive:!1},com:{rules:[3],inclusive:!1},INITIAL:{rules:[0,1,32],inclusive:!0}},a}();return c.lexer=d,b.prototype=c,c.Parser=b,new b}();a[\"default\"]=b}),define(\"handlebars/compiler/base\",[\"./parser\",\"./ast\",\"exports\"],function(a,b,c){function d(a){return a.constructor===f.ProgramNode?a:(e.yy=f,e.parse(a))}var e=a[\"default\"],f=b[\"default\"];c.parser=e,c.parse=d}),define(\"handlebars/compiler/compiler\",[\"../exception\",\"exports\"],function(a,b){function c(){}function d(a,b,c){if(null==a||\"string\"!=typeof a&&a.constructor!==c.AST.ProgramNode)throw new f(\"You must pass a string or Handlebars AST to Handlebars.precompile. You passed \"+a);b=b||{},\"data\"in b||(b.data=!0);var d=c.parse(a),e=(new c.Compiler).compile(d,b);return(new c.JavaScriptCompiler).compile(e,b)}function e(a,b,c){function d(){var d=c.parse(a),e=(new c.Compiler).compile(d,b),f=(new c.JavaScriptCompiler).compile(e,b,void 0,!0);return c.template(f)}if(null==a||\"string\"!=typeof a&&a.constructor!==c.AST.ProgramNode)throw new f(\"You must pass a string or Handlebars AST to Handlebars.compile. You passed \"+a);b=b||{},\"data\"in b||(b.data=!0);var e;return function(a,b){return e||(e=d()),e.call(this,a,b)}}var f=a[\"default\"];b.Compiler=c,c.prototype={compiler:c,disassemble:function(){for(var a,b,c,d=this.opcodes,e=[],f=0,g=d.length;g>f;f++)if(a=d[f],\"DECLARE\"===a.opcode)e.push(\"DECLARE \"+a.name+\"=\"+a.value);else{b=[];for(var h=0;h<a.args.length;h++)c=a.args[h],\"string\"==typeof c&&(c='\"'+c.replace(\"\\n\",\"\\\\n\")+'\"'),b.push(c);e.push(a.opcode+\" \"+b.join(\" \"))}return e.join(\"\\n\")},equals:function(a){var b=this.opcodes.length;if(a.opcodes.length!==b)return!1;for(var c=0;b>c;c++){var d=this.opcodes[c],e=a.opcodes[c];if(d.opcode!==e.opcode||d.args.length!==e.args.length)return!1;for(var f=0;f<d.args.length;f++)if(d.args[f]!==e.args[f])return!1}if(b=this.children.length,a.children.length!==b)return!1;for(c=0;b>c;c++)if(!this.children[c].equals(a.children[c]))return!1;return!0},guid:0,compile:function(a,b){this.opcodes=[],this.children=[],this.depths={list:[]},this.options=b;var c=this.options.knownHelpers;if(this.options.knownHelpers={helperMissing:!0,blockHelperMissing:!0,each:!0,\"if\":!0,unless:!0,\"with\":!0,log:!0},c)for(var d in c)this.options.knownHelpers[d]=c[d];return this.accept(a)},accept:function(a){var b,c=a.strip||{};return c.left&&this.opcode(\"strip\"),b=this[a.type](a),c.right&&this.opcode(\"strip\"),b},program:function(a){for(var b=a.statements,c=0,d=b.length;d>c;c++)this.accept(b[c]);return this.isSimple=1===d,this.depths.list=this.depths.list.sort(function(a,b){return a-b}),this},compileProgram:function(a){var b,c=(new this.compiler).compile(a,this.options),d=this.guid++;this.usePartial=this.usePartial||c.usePartial,this.children[d]=c;for(var e=0,f=c.depths.list.length;f>e;e++)b=c.depths.list[e],2>b||this.addDepth(b-1);return d},block:function(a){var b=a.mustache,c=a.program,d=a.inverse;c&&(c=this.compileProgram(c)),d&&(d=this.compileProgram(d));var e=b.sexpr,f=this.classifySexpr(e);\"helper\"===f?this.helperSexpr(e,c,d):\"simple\"===f?(this.simpleSexpr(e),this.opcode(\"pushProgram\",c),this.opcode(\"pushProgram\",d),this.opcode(\"emptyHash\"),this.opcode(\"blockValue\")):(this.ambiguousSexpr(e,c,d),this.opcode(\"pushProgram\",c),this.opcode(\"pushProgram\",d),this.opcode(\"emptyHash\"),this.opcode(\"ambiguousBlockValue\")),this.opcode(\"append\")},hash:function(a){var b,c,d=a.pairs;this.opcode(\"pushHash\");for(var e=0,f=d.length;f>e;e++)b=d[e],c=b[1],this.options.stringParams?(c.depth&&this.addDepth(c.depth),this.opcode(\"getContext\",c.depth||0),this.opcode(\"pushStringParam\",c.stringModeValue,c.type),\"sexpr\"===c.type&&this.sexpr(c)):this.accept(c),this.opcode(\"assignToHash\",b[0]);this.opcode(\"popHash\")},partial:function(a){var b=a.partialName;this.usePartial=!0,a.context?this.ID(a.context):this.opcode(\"push\",\"depth0\"),this.opcode(\"invokePartial\",b.name),this.opcode(\"append\")},content:function(a){this.opcode(\"appendContent\",a.string)},mustache:function(a){this.sexpr(a.sexpr),a.escaped&&!this.options.noEscape?this.opcode(\"appendEscaped\"):this.opcode(\"append\")},ambiguousSexpr:function(a,b,c){var d=a.id,e=d.parts[0],f=null!=b||null!=c;this.opcode(\"getContext\",d.depth),this.opcode(\"pushProgram\",b),this.opcode(\"pushProgram\",c),this.opcode(\"invokeAmbiguous\",e,f)},simpleSexpr:function(a){var b=a.id;\"DATA\"===b.type?this.DATA(b):b.parts.length?this.ID(b):(this.addDepth(b.depth),this.opcode(\"getContext\",b.depth),this.opcode(\"pushContext\")),this.opcode(\"resolvePossibleLambda\")},helperSexpr:function(a,b,c){var d=this.setupFullMustacheParams(a,b,c),e=a.id.parts[0];if(this.options.knownHelpers[e])this.opcode(\"invokeKnownHelper\",d.length,e);else{if(this.options.knownHelpersOnly)throw new f(\"You specified knownHelpersOnly, but used the unknown helper \"+e,a);this.opcode(\"invokeHelper\",d.length,e,a.isRoot)}},sexpr:function(a){var b=this.classifySexpr(a);\"simple\"===b?this.simpleSexpr(a):\"helper\"===b?this.helperSexpr(a):this.ambiguousSexpr(a)},ID:function(a){this.addDepth(a.depth),this.opcode(\"getContext\",a.depth);var b=a.parts[0];b?this.opcode(\"lookupOnContext\",a.parts[0]):this.opcode(\"pushContext\");for(var c=1,d=a.parts.length;d>c;c++)this.opcode(\"lookup\",a.parts[c])},DATA:function(a){if(this.options.data=!0,a.id.isScoped||a.id.depth)throw new f(\"Scoped data references are not supported: \"+a.original,a);this.opcode(\"lookupData\");for(var b=a.id.parts,c=0,d=b.length;d>c;c++)this.opcode(\"lookup\",b[c])},STRING:function(a){this.opcode(\"pushString\",a.string)},INTEGER:function(a){this.opcode(\"pushLiteral\",a.integer)},BOOLEAN:function(a){this.opcode(\"pushLiteral\",a.bool)},comment:function(){},opcode:function(a){this.opcodes.push({opcode:a,args:[].slice.call(arguments,1)})},declare:function(a,b){this.opcodes.push({opcode:\"DECLARE\",name:a,value:b})},addDepth:function(a){0!==a&&(this.depths[a]||(this.depths[a]=!0,this.depths.list.push(a)))},classifySexpr:function(a){var b=a.isHelper,c=a.eligibleHelper,d=this.options;if(c&&!b){var e=a.id.parts[0];d.knownHelpers[e]?b=!0:d.knownHelpersOnly&&(c=!1)}return b?\"helper\":c?\"ambiguous\":\"simple\"},pushParams:function(a){for(var b,c=a.length;c--;)b=a[c],this.options.stringParams?(b.depth&&this.addDepth(b.depth),this.opcode(\"getContext\",b.depth||0),this.opcode(\"pushStringParam\",b.stringModeValue,b.type),\"sexpr\"===b.type&&this.sexpr(b)):this[b.type](b)},setupFullMustacheParams:function(a,b,c){var d=a.params;return this.pushParams(d),this.opcode(\"pushProgram\",b),this.opcode(\"pushProgram\",c),a.hash?this.hash(a.hash):this.opcode(\"emptyHash\"),d}},b.precompile=d,b.compile=e}),define(\"handlebars/compiler/javascript-compiler\",[\"../base\",\"../exception\",\"exports\"],function(a,b,c){function d(a){this.value=a}function e(){}var f=a.COMPILER_REVISION,g=a.REVISION_CHANGES,h=a.log,i=b[\"default\"];e.prototype={nameLookup:function(a,b){var c,d;return 0===a.indexOf(\"depth\")&&(c=!0),d=/^[0-9]+$/.test(b)?a+\"[\"+b+\"]\":e.isValidJavaScriptVariableName(b)?a+\".\"+b:a+\"['\"+b+\"']\",c?\"(\"+a+\" && \"+d+\")\":d},compilerInfo:function(){var a=f,b=g[a];return\"this.compilerInfo = [\"+a+\",'\"+b+\"'];\\n\"\n   28  },appendToBuffer:function(a){return this.environment.isSimple?\"return \"+a+\";\":{appendToBuffer:!0,content:a,toString:function(){return\"buffer += \"+a+\";\"}}},initializeBuffer:function(){return this.quotedString(\"\")},namespace:\"Handlebars\",compile:function(a,b,c,d){this.environment=a,this.options=b||{},h(\"debug\",this.environment.disassemble()+\"\\n\\n\"),this.name=this.environment.name,this.isChild=!!c,this.context=c||{programs:[],environments:[],aliases:{}},this.preamble(),this.stackSlot=0,this.stackVars=[],this.registers={list:[]},this.hashes=[],this.compileStack=[],this.inlineStack=[],this.compileChildren(a,b);var e,f=a.opcodes;this.i=0;for(var g=f.length;this.i<g;this.i++)e=f[this.i],\"DECLARE\"===e.opcode?this[e.name]=e.value:this[e.opcode].apply(this,e.args),e.opcode!==this.stripNext&&(this.stripNext=!1);if(this.pushSource(\"\"),this.stackSlot||this.inlineStack.length||this.compileStack.length)throw new i(\"Compile completed with content left on stack\");return this.createFunctionContext(d)},preamble:function(){var a=[];if(this.isChild)a.push(\"\");else{var b=this.namespace,c=\"helpers = this.merge(helpers, \"+b+\".helpers);\";this.environment.usePartial&&(c=c+\" partials = this.merge(partials, \"+b+\".partials);\"),this.options.data&&(c+=\" data = data || {};\"),a.push(c)}this.environment.isSimple?a.push(\"\"):a.push(\", buffer = \"+this.initializeBuffer()),this.lastContext=0,this.source=a},createFunctionContext:function(a){var b=this.stackVars.concat(this.registers.list);if(b.length>0&&(this.source[1]=this.source[1]+\", \"+b.join(\", \")),!this.isChild)for(var c in this.context.aliases)this.context.aliases.hasOwnProperty(c)&&(this.source[1]=this.source[1]+\", \"+c+\"=\"+this.context.aliases[c]);this.source[1]&&(this.source[1]=\"var \"+this.source[1].substring(2)+\";\"),this.isChild||(this.source[1]+=\"\\n\"+this.context.programs.join(\"\\n\")+\"\\n\"),this.environment.isSimple||this.pushSource(\"return buffer;\");for(var d=this.isChild?[\"depth0\",\"data\"]:[\"Handlebars\",\"depth0\",\"helpers\",\"partials\",\"data\"],e=0,f=this.environment.depths.list.length;f>e;e++)d.push(\"depth\"+this.environment.depths.list[e]);var g=this.mergeSource();if(this.isChild||(g=this.compilerInfo()+g),a)return d.push(g),Function.apply(this,d);var i=\"function \"+(this.name||\"\")+\"(\"+d.join(\",\")+\") {\\n  \"+g+\"}\";return h(\"debug\",i+\"\\n\\n\"),i},mergeSource:function(){for(var a,b=\"\",c=0,d=this.source.length;d>c;c++){var e=this.source[c];e.appendToBuffer?a=a?a+\"\\n    + \"+e.content:e.content:(a&&(b+=\"buffer += \"+a+\";\\n  \",a=void 0),b+=e+\"\\n  \")}return b},blockValue:function(){this.context.aliases.blockHelperMissing=\"helpers.blockHelperMissing\";var a=[\"depth0\"];this.setupParams(0,a),this.replaceStack(function(b){return a.splice(1,0,b),\"blockHelperMissing.call(\"+a.join(\", \")+\")\"})},ambiguousBlockValue:function(){this.context.aliases.blockHelperMissing=\"helpers.blockHelperMissing\";var a=[\"depth0\"];this.setupParams(0,a);var b=this.topStack();a.splice(1,0,b),this.pushSource(\"if (!\"+this.lastHelper+\") { \"+b+\" = blockHelperMissing.call(\"+a.join(\", \")+\"); }\")},appendContent:function(a){this.pendingContent&&(a=this.pendingContent+a),this.stripNext&&(a=a.replace(/^\\s+/,\"\")),this.pendingContent=a},strip:function(){this.pendingContent&&(this.pendingContent=this.pendingContent.replace(/\\s+$/,\"\")),this.stripNext=\"strip\"},append:function(){this.flushInline();var a=this.popStack();this.pushSource(\"if(\"+a+\" || \"+a+\" === 0) { \"+this.appendToBuffer(a)+\" }\"),this.environment.isSimple&&this.pushSource(\"else { \"+this.appendToBuffer(\"''\")+\" }\")},appendEscaped:function(){this.context.aliases.escapeExpression=\"this.escapeExpression\",this.pushSource(this.appendToBuffer(\"escapeExpression(\"+this.popStack()+\")\"))},getContext:function(a){this.lastContext!==a&&(this.lastContext=a)},lookupOnContext:function(a){this.push(this.nameLookup(\"depth\"+this.lastContext,a,\"context\"))},pushContext:function(){this.pushStackLiteral(\"depth\"+this.lastContext)},resolvePossibleLambda:function(){this.context.aliases.functionType='\"function\"',this.replaceStack(function(a){return\"typeof \"+a+\" === functionType ? \"+a+\".apply(depth0) : \"+a})},lookup:function(a){this.replaceStack(function(b){return b+\" == null || \"+b+\" === false ? \"+b+\" : \"+this.nameLookup(b,a,\"context\")})},lookupData:function(){this.pushStackLiteral(\"data\")},pushStringParam:function(a,b){this.pushStackLiteral(\"depth\"+this.lastContext),this.pushString(b),\"sexpr\"!==b&&(\"string\"==typeof a?this.pushString(a):this.pushStackLiteral(a))},emptyHash:function(){this.pushStackLiteral(\"{}\"),this.options.stringParams&&(this.push(\"{}\"),this.push(\"{}\"))},pushHash:function(){this.hash&&this.hashes.push(this.hash),this.hash={values:[],types:[],contexts:[]}},popHash:function(){var a=this.hash;this.hash=this.hashes.pop(),this.options.stringParams&&(this.push(\"{\"+a.contexts.join(\",\")+\"}\"),this.push(\"{\"+a.types.join(\",\")+\"}\")),this.push(\"{\\n    \"+a.values.join(\",\\n    \")+\"\\n  }\")},pushString:function(a){this.pushStackLiteral(this.quotedString(a))},push:function(a){return this.inlineStack.push(a),a},pushLiteral:function(a){this.pushStackLiteral(a)},pushProgram:function(a){null!=a?this.pushStackLiteral(this.programExpression(a)):this.pushStackLiteral(null)},invokeHelper:function(a,b,c){this.context.aliases.helperMissing=\"helpers.helperMissing\",this.useRegister(\"helper\");var d=this.lastHelper=this.setupHelper(a,b,!0),e=this.nameLookup(\"depth\"+this.lastContext,b,\"context\"),f=\"helper = \"+d.name+\" || \"+e;d.paramsInit&&(f+=\",\"+d.paramsInit),this.push(\"(\"+f+\",helper ? helper.call(\"+d.callParams+\") : helperMissing.call(\"+d.helperMissingParams+\"))\"),c||this.flushInline()},invokeKnownHelper:function(a,b){var c=this.setupHelper(a,b);this.push(c.name+\".call(\"+c.callParams+\")\")},invokeAmbiguous:function(a,b){this.context.aliases.functionType='\"function\"',this.useRegister(\"helper\"),this.emptyHash();var c=this.setupHelper(0,a,b),d=this.lastHelper=this.nameLookup(\"helpers\",a,\"helper\"),e=this.nameLookup(\"depth\"+this.lastContext,a,\"context\"),f=this.nextStack();c.paramsInit&&this.pushSource(c.paramsInit),this.pushSource(\"if (helper = \"+d+\") { \"+f+\" = helper.call(\"+c.callParams+\"); }\"),this.pushSource(\"else { helper = \"+e+\"; \"+f+\" = typeof helper === functionType ? helper.call(\"+c.callParams+\") : helper; }\")},invokePartial:function(a){var b=[this.nameLookup(\"partials\",a,\"partial\"),\"'\"+a+\"'\",this.popStack(),\"helpers\",\"partials\"];this.options.data&&b.push(\"data\"),this.context.aliases.self=\"this\",this.push(\"self.invokePartial(\"+b.join(\", \")+\")\")},assignToHash:function(a){var b,c,d=this.popStack();this.options.stringParams&&(c=this.popStack(),b=this.popStack());var e=this.hash;b&&e.contexts.push(\"'\"+a+\"': \"+b),c&&e.types.push(\"'\"+a+\"': \"+c),e.values.push(\"'\"+a+\"': (\"+d+\")\")},compiler:e,compileChildren:function(a,b){for(var c,d,e=a.children,f=0,g=e.length;g>f;f++){c=e[f],d=new this.compiler;var h=this.matchExistingProgram(c);null==h?(this.context.programs.push(\"\"),h=this.context.programs.length,c.index=h,c.name=\"program\"+h,this.context.programs[h]=d.compile(c,b,this.context),this.context.environments[h]=c):(c.index=h,c.name=\"program\"+h)}},matchExistingProgram:function(a){for(var b=0,c=this.context.environments.length;c>b;b++){var d=this.context.environments[b];if(d&&d.equals(a))return b}},programExpression:function(a){if(this.context.aliases.self=\"this\",null==a)return\"self.noop\";for(var b,c=this.environment.children[a],d=c.depths.list,e=[c.index,c.name,\"data\"],f=0,g=d.length;g>f;f++)b=d[f],1===b?e.push(\"depth0\"):e.push(\"depth\"+(b-1));return(0===d.length?\"self.program(\":\"self.programWithDepth(\")+e.join(\", \")+\")\"},register:function(a,b){this.useRegister(a),this.pushSource(a+\" = \"+b+\";\")},useRegister:function(a){this.registers[a]||(this.registers[a]=!0,this.registers.list.push(a))},pushStackLiteral:function(a){return this.push(new d(a))},pushSource:function(a){this.pendingContent&&(this.source.push(this.appendToBuffer(this.quotedString(this.pendingContent))),this.pendingContent=void 0),a&&this.source.push(a)},pushStack:function(a){this.flushInline();var b=this.incrStack();return a&&this.pushSource(b+\" = \"+a+\";\"),this.compileStack.push(b),b},replaceStack:function(a){var b,c,e,f=\"\",g=this.isInline();if(g){var h=this.popStack(!0);if(h instanceof d)b=h.value,e=!0;else{c=!this.stackSlot;var i=c?this.incrStack():this.topStackName();f=\"(\"+this.push(i)+\" = \"+h+\"),\",b=this.topStack()}}else b=this.topStack();var j=a.call(this,b);return g?(e||this.popStack(),c&&this.stackSlot--,this.push(\"(\"+f+j+\")\")):(/^stack/.test(b)||(b=this.nextStack()),this.pushSource(b+\" = (\"+f+j+\");\")),b},nextStack:function(){return this.pushStack()},incrStack:function(){return this.stackSlot++,this.stackSlot>this.stackVars.length&&this.stackVars.push(\"stack\"+this.stackSlot),this.topStackName()},topStackName:function(){return\"stack\"+this.stackSlot},flushInline:function(){var a=this.inlineStack;if(a.length){this.inlineStack=[];for(var b=0,c=a.length;c>b;b++){var e=a[b];e instanceof d?this.compileStack.push(e):this.pushStack(e)}}},isInline:function(){return this.inlineStack.length},popStack:function(a){var b=this.isInline(),c=(b?this.inlineStack:this.compileStack).pop();if(!a&&c instanceof d)return c.value;if(!b){if(!this.stackSlot)throw new i(\"Invalid stack pop\");this.stackSlot--}return c},topStack:function(a){var b=this.isInline()?this.inlineStack:this.compileStack,c=b[b.length-1];return!a&&c instanceof d?c.value:c},quotedString:function(a){return'\"'+a.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"').replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\").replace(/\\u2028/g,\"\\\\u2028\").replace(/\\u2029/g,\"\\\\u2029\")+'\"'},setupHelper:function(a,b,c){var d=[],e=this.setupParams(a,d,c),f=this.nameLookup(\"helpers\",b,\"helper\");return{params:d,paramsInit:e,name:f,callParams:[\"depth0\"].concat(d).join(\", \"),helperMissingParams:c&&[\"depth0\",this.quotedString(b)].concat(d).join(\", \")}},setupOptions:function(a,b){var c,d,e,f=[],g=[],h=[];f.push(\"hash:\"+this.popStack()),this.options.stringParams&&(f.push(\"hashTypes:\"+this.popStack()),f.push(\"hashContexts:\"+this.popStack())),d=this.popStack(),e=this.popStack(),(e||d)&&(e||(this.context.aliases.self=\"this\",e=\"self.noop\"),d||(this.context.aliases.self=\"this\",d=\"self.noop\"),f.push(\"inverse:\"+d),f.push(\"fn:\"+e));for(var i=0;a>i;i++)c=this.popStack(),b.push(c),this.options.stringParams&&(h.push(this.popStack()),g.push(this.popStack()));return this.options.stringParams&&(f.push(\"contexts:[\"+g.join(\",\")+\"]\"),f.push(\"types:[\"+h.join(\",\")+\"]\")),this.options.data&&f.push(\"data:data\"),f},setupParams:function(a,b,c){var d=\"{\"+this.setupOptions(a,b).join(\",\")+\"}\";return c?(this.useRegister(\"options\"),b.push(\"options\"),\"options=\"+d):(b.push(d),\"\")}};for(var j=\"break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield\".split(\" \"),k=e.RESERVED_WORDS={},l=0,m=j.length;m>l;l++)k[j[l]]=!0;e.isValidJavaScriptVariableName=function(a){return!e.RESERVED_WORDS[a]&&/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(a)?!0:!1},c[\"default\"]=e}),define(\"handlebars\",[\"./handlebars.runtime\",\"./handlebars/compiler/ast\",\"./handlebars/compiler/base\",\"./handlebars/compiler/compiler\",\"./handlebars/compiler/javascript-compiler\",\"exports\"],function(a,b,c,d,e,f){var g=a[\"default\"],h=b[\"default\"],i=c.parser,j=c.parse,k=d.Compiler,l=d.compile,m=d.precompile,n=e[\"default\"],o=g.create,p=function(){var a=o();return a.compile=function(b,c){return l(b,c,a)},a.precompile=function(b,c){return m(b,c,a)},a.AST=h,a.Compiler=k,a.JavaScriptCompiler=n,a.Parser=i,a.parse=j,a};g=p(),g.create=p,f[\"default\"]=g});\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/dist/handlebars.js:\n  131    var __exports__;\n  132  \n  133:   var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n  134  \n  135    function Exception(message, node) {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/dist/handlebars.min.js:\n   25  @license\n   26  */\n   27: var Handlebars=function(){var a=function(){\"use strict\";function a(a){this.string=a}var b;return a.prototype.toString=function(){return\"\"+this.string},b=a}(),b=function(a){\"use strict\";function b(a){return h[a]||\"&amp;\"}function c(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])}function d(a){return a instanceof g?a.toString():a||0===a?(a=\"\"+a,j.test(a)?a.replace(i,b):a):\"\"}function e(a){return a||0===a?m(a)&&0===a.length?!0:!1:!0}var f={},g=a,h={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},i=/[&<>\"'`]/g,j=/[&<>\"'`]/;f.extend=c;var k=Object.prototype.toString;f.toString=k;var l=function(a){return\"function\"==typeof a};l(/x/)&&(l=function(a){return\"function\"==typeof a&&\"[object Function]\"===k.call(a)});var l;f.isFunction=l;var m=Array.isArray||function(a){return a&&\"object\"==typeof a?\"[object Array]\"===k.call(a):!1};return f.isArray=m,f.escapeExpression=d,f.isEmpty=e,f}(a),c=function(){\"use strict\";function a(a,b){var d;b&&b.firstLine&&(d=b.firstLine,a+=\" - \"+d+\":\"+b.firstColumn);for(var e=Error.prototype.constructor.call(this,a),f=0;f<c.length;f++)this[c[f]]=e[c[f]];d&&(this.lineNumber=d,this.column=b.firstColumn)}var b,c=[\"description\",\"fileName\",\"lineNumber\",\"message\",\"name\",\"number\",\"stack\"];return a.prototype=new Error,b=a}(),d=function(a,b){\"use strict\";function c(a,b){this.helpers=a||{},this.partials=b||{},d(this)}function d(a){a.registerHelper(\"helperMissing\",function(a){if(2===arguments.length)return void 0;throw new h(\"Missing helper: '\"+a+\"'\")}),a.registerHelper(\"blockHelperMissing\",function(b,c){var d=c.inverse||function(){},e=c.fn;return m(b)&&(b=b.call(this)),b===!0?e(this):b===!1||null==b?d(this):l(b)?b.length>0?a.helpers.each(b,c):d(this):e(b)}),a.registerHelper(\"each\",function(a,b){var c,d=b.fn,e=b.inverse,f=0,g=\"\";if(m(a)&&(a=a.call(this)),b.data&&(c=q(b.data)),a&&\"object\"==typeof a)if(l(a))for(var h=a.length;h>f;f++)c&&(c.index=f,c.first=0===f,c.last=f===a.length-1),g+=d(a[f],{data:c});else for(var i in a)a.hasOwnProperty(i)&&(c&&(c.key=i,c.index=f,c.first=0===f),g+=d(a[i],{data:c}),f++);return 0===f&&(g=e(this)),g}),a.registerHelper(\"if\",function(a,b){return m(a)&&(a=a.call(this)),!b.hash.includeZero&&!a||g.isEmpty(a)?b.inverse(this):b.fn(this)}),a.registerHelper(\"unless\",function(b,c){return a.helpers[\"if\"].call(this,b,{fn:c.inverse,inverse:c.fn,hash:c.hash})}),a.registerHelper(\"with\",function(a,b){return m(a)&&(a=a.call(this)),g.isEmpty(a)?void 0:b.fn(a)}),a.registerHelper(\"log\",function(b,c){var d=c.data&&null!=c.data.level?parseInt(c.data.level,10):1;a.log(d,b)})}function e(a,b){p.log(a,b)}var f={},g=a,h=b,i=\"1.3.0\";f.VERSION=i;var j=4;f.COMPILER_REVISION=j;var k={1:\"<= 1.0.rc.2\",2:\"== 1.0.0-rc.3\",3:\"== 1.0.0-rc.4\",4:\">= 1.0.0\"};f.REVISION_CHANGES=k;var l=g.isArray,m=g.isFunction,n=g.toString,o=\"[object Object]\";f.HandlebarsEnvironment=c,c.prototype={constructor:c,logger:p,log:e,registerHelper:function(a,b,c){if(n.call(a)===o){if(c||b)throw new h(\"Arg not supported with multiple helpers\");g.extend(this.helpers,a)}else c&&(b.not=c),this.helpers[a]=b},registerPartial:function(a,b){n.call(a)===o?g.extend(this.partials,a):this.partials[a]=b}};var p={methodMap:{0:\"debug\",1:\"info\",2:\"warn\",3:\"error\"},DEBUG:0,INFO:1,WARN:2,ERROR:3,level:3,log:function(a,b){if(p.level<=a){var c=p.methodMap[a];\"undefined\"!=typeof console&&console[c]&&console[c].call(console,b)}}};f.logger=p,f.log=e;var q=function(a){var b={};return g.extend(b,a),b};return f.createFrame=q,f}(b,c),e=function(a,b,c){\"use strict\";function d(a){var b=a&&a[0]||1,c=m;if(b!==c){if(c>b){var d=n[c],e=n[b];throw new l(\"Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (\"+d+\") or downgrade your runtime to an older version (\"+e+\").\")}throw new l(\"Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (\"+a[1]+\").\")}}function e(a,b){if(!b)throw new l(\"No environment passed to template\");var c=function(a,c,d,e,f,g){var h=b.VM.invokePartial.apply(this,arguments);if(null!=h)return h;if(b.compile){var i={helpers:e,partials:f,data:g};return f[c]=b.compile(a,{data:void 0!==g},b),f[c](d,i)}throw new l(\"The partial \"+c+\" could not be compiled when running in runtime-only mode\")},d={escapeExpression:k.escapeExpression,invokePartial:c,programs:[],program:function(a,b,c){var d=this.programs[a];return c?d=g(a,b,c):d||(d=this.programs[a]=g(a,b)),d},merge:function(a,b){var c=a||b;return a&&b&&a!==b&&(c={},k.extend(c,b),k.extend(c,a)),c},programWithDepth:b.VM.programWithDepth,noop:b.VM.noop,compilerInfo:null};return function(c,e){e=e||{};var f,g,h=e.partial?e:b;e.partial||(f=e.helpers,g=e.partials);var i=a.call(d,h,c,f,g,e.data);return e.partial||b.VM.checkRevision(d.compilerInfo),i}}function f(a,b,c){var d=Array.prototype.slice.call(arguments,3),e=function(a,e){return e=e||{},b.apply(this,[a,e.data||c].concat(d))};return e.program=a,e.depth=d.length,e}function g(a,b,c){var d=function(a,d){return d=d||{},b(a,d.data||c)};return d.program=a,d.depth=0,d}function h(a,b,c,d,e,f){var g={partial:!0,helpers:d,partials:e,data:f};if(void 0===a)throw new l(\"The partial \"+b+\" could not be found\");return a instanceof Function?a(c,g):void 0}function i(){return\"\"}var j={},k=a,l=b,m=c.COMPILER_REVISION,n=c.REVISION_CHANGES;return j.checkRevision=d,j.template=e,j.programWithDepth=f,j.program=g,j.invokePartial=h,j.noop=i,j}(b,c,d),f=function(a,b,c,d,e){\"use strict\";var f,g=a,h=b,i=c,j=d,k=e,l=function(){var a=new g.HandlebarsEnvironment;return j.extend(a,g),a.SafeString=h,a.Exception=i,a.Utils=j,a.VM=k,a.template=function(b){return k.template(b,a)},a},m=l();return m.create=l,f=m}(d,a,c,b,e),g=function(a){\"use strict\";function b(a){a=a||{},this.firstLine=a.first_line,this.firstColumn=a.first_column,this.lastColumn=a.last_column,this.lastLine=a.last_line}var c,d=a,e={ProgramNode:function(a,c,d,f){var g,h;3===arguments.length?(f=d,d=null):2===arguments.length&&(f=c,c=null),b.call(this,f),this.type=\"program\",this.statements=a,this.strip={},d?(h=d[0],h?(g={first_line:h.firstLine,last_line:h.lastLine,last_column:h.lastColumn,first_column:h.firstColumn},this.inverse=new e.ProgramNode(d,c,g)):this.inverse=new e.ProgramNode(d,c),this.strip.right=c.left):c&&(this.strip.left=c.right)},MustacheNode:function(a,c,d,f,g){if(b.call(this,g),this.type=\"mustache\",this.strip=f,null!=d&&d.charAt){var h=d.charAt(3)||d.charAt(2);this.escaped=\"{\"!==h&&\"&\"!==h}else this.escaped=!!d;this.sexpr=a instanceof e.SexprNode?a:new e.SexprNode(a,c),this.sexpr.isRoot=!0,this.id=this.sexpr.id,this.params=this.sexpr.params,this.hash=this.sexpr.hash,this.eligibleHelper=this.sexpr.eligibleHelper,this.isHelper=this.sexpr.isHelper},SexprNode:function(a,c,d){b.call(this,d),this.type=\"sexpr\",this.hash=c;var e=this.id=a[0],f=this.params=a.slice(1),g=this.eligibleHelper=e.isSimple;this.isHelper=g&&(f.length||c)},PartialNode:function(a,c,d,e){b.call(this,e),this.type=\"partial\",this.partialName=a,this.context=c,this.strip=d},BlockNode:function(a,c,e,f,g){if(b.call(this,g),a.sexpr.id.original!==f.path.original)throw new d(a.sexpr.id.original+\" doesn't match \"+f.path.original,this);this.type=\"block\",this.mustache=a,this.program=c,this.inverse=e,this.strip={left:a.strip.left,right:f.strip.right},(c||e).strip.left=a.strip.right,(e||c).strip.right=f.strip.left,e&&!c&&(this.isInverse=!0)},ContentNode:function(a,c){b.call(this,c),this.type=\"content\",this.string=a},HashNode:function(a,c){b.call(this,c),this.type=\"hash\",this.pairs=a},IdNode:function(a,c){b.call(this,c),this.type=\"ID\";for(var e=\"\",f=[],g=0,h=0,i=a.length;i>h;h++){var j=a[h].part;if(e+=(a[h].separator||\"\")+j,\"..\"===j||\".\"===j||\"this\"===j){if(f.length>0)throw new d(\"Invalid path: \"+e,this);\"..\"===j?g++:this.isScoped=!0}else f.push(j)}this.original=e,this.parts=f,this.string=f.join(\".\"),this.depth=g,this.isSimple=1===a.length&&!this.isScoped&&0===g,this.stringModeValue=this.string},PartialNameNode:function(a,c){b.call(this,c),this.type=\"PARTIAL_NAME\",this.name=a.original},DataNode:function(a,c){b.call(this,c),this.type=\"DATA\",this.id=a},StringNode:function(a,c){b.call(this,c),this.type=\"STRING\",this.original=this.string=this.stringModeValue=a},IntegerNode:function(a,c){b.call(this,c),this.type=\"INTEGER\",this.original=this.integer=a,this.stringModeValue=Number(a)},BooleanNode:function(a,c){b.call(this,c),this.type=\"BOOLEAN\",this.bool=a,this.stringModeValue=\"true\"===a},CommentNode:function(a,c){b.call(this,c),this.type=\"comment\",this.comment=a}};return c=e}(c),h=function(){\"use strict\";var a,b=function(){function a(a,b){return{left:\"~\"===a.charAt(2),right:\"~\"===b.charAt(0)||\"~\"===b.charAt(1)}}function b(){this.yy={}}var c={trace:function(){},yy:{},symbols_:{error:2,root:3,statements:4,EOF:5,program:6,simpleInverse:7,statement:8,openInverse:9,closeBlock:10,openBlock:11,mustache:12,partial:13,CONTENT:14,COMMENT:15,OPEN_BLOCK:16,sexpr:17,CLOSE:18,OPEN_INVERSE:19,OPEN_ENDBLOCK:20,path:21,OPEN:22,OPEN_UNESCAPED:23,CLOSE_UNESCAPED:24,OPEN_PARTIAL:25,partialName:26,partial_option0:27,sexpr_repetition0:28,sexpr_option0:29,dataName:30,param:31,STRING:32,INTEGER:33,BOOLEAN:34,OPEN_SEXPR:35,CLOSE_SEXPR:36,hash:37,hash_repetition_plus0:38,hashSegment:39,ID:40,EQUALS:41,DATA:42,pathSegments:43,SEP:44,$accept:0,$end:1},terminals_:{2:\"error\",5:\"EOF\",14:\"CONTENT\",15:\"COMMENT\",16:\"OPEN_BLOCK\",18:\"CLOSE\",19:\"OPEN_INVERSE\",20:\"OPEN_ENDBLOCK\",22:\"OPEN\",23:\"OPEN_UNESCAPED\",24:\"CLOSE_UNESCAPED\",25:\"OPEN_PARTIAL\",32:\"STRING\",33:\"INTEGER\",34:\"BOOLEAN\",35:\"OPEN_SEXPR\",36:\"CLOSE_SEXPR\",40:\"ID\",41:\"EQUALS\",42:\"DATA\",44:\"SEP\"},productions_:[0,[3,2],[3,1],[6,2],[6,3],[6,2],[6,1],[6,1],[6,0],[4,1],[4,2],[8,3],[8,3],[8,1],[8,1],[8,1],[8,1],[11,3],[9,3],[10,3],[12,3],[12,3],[13,4],[7,2],[17,3],[17,1],[31,1],[31,1],[31,1],[31,1],[31,1],[31,3],[37,1],[39,3],[26,1],[26,1],[26,1],[30,2],[21,1],[43,3],[43,1],[27,0],[27,1],[28,0],[28,2],[29,0],[29,1],[38,1],[38,2]],performAction:function(b,c,d,e,f,g){var h=g.length-1;switch(f){case 1:return new e.ProgramNode(g[h-1],this._$);case 2:return new e.ProgramNode([],this._$);case 3:this.$=new e.ProgramNode([],g[h-1],g[h],this._$);break;case 4:this.$=new e.ProgramNode(g[h-2],g[h-1],g[h],this._$);break;case 5:this.$=new e.ProgramNode(g[h-1],g[h],[],this._$);break;case 6:this.$=new e.ProgramNode(g[h],this._$);break;case 7:this.$=new e.ProgramNode([],this._$);break;case 8:this.$=new e.ProgramNode([],this._$);break;case 9:this.$=[g[h]];break;case 10:g[h-1].push(g[h]),this.$=g[h-1];break;case 11:this.$=new e.BlockNode(g[h-2],g[h-1].inverse,g[h-1],g[h],this._$);break;case 12:this.$=new e.BlockNode(g[h-2],g[h-1],g[h-1].inverse,g[h],this._$);break;case 13:this.$=g[h];break;case 14:this.$=g[h];break;case 15:this.$=new e.ContentNode(g[h],this._$);break;case 16:this.$=new e.CommentNode(g[h],this._$);break;case 17:this.$=new e.MustacheNode(g[h-1],null,g[h-2],a(g[h-2],g[h]),this._$);break;case 18:this.$=new e.MustacheNode(g[h-1],null,g[h-2],a(g[h-2],g[h]),this._$);break;case 19:this.$={path:g[h-1],strip:a(g[h-2],g[h])};break;case 20:this.$=new e.MustacheNode(g[h-1],null,g[h-2],a(g[h-2],g[h]),this._$);break;case 21:this.$=new e.MustacheNode(g[h-1],null,g[h-2],a(g[h-2],g[h]),this._$);break;case 22:this.$=new e.PartialNode(g[h-2],g[h-1],a(g[h-3],g[h]),this._$);break;case 23:this.$=a(g[h-1],g[h]);break;case 24:this.$=new e.SexprNode([g[h-2]].concat(g[h-1]),g[h],this._$);break;case 25:this.$=new e.SexprNode([g[h]],null,this._$);break;case 26:this.$=g[h];break;case 27:this.$=new e.StringNode(g[h],this._$);break;case 28:this.$=new e.IntegerNode(g[h],this._$);break;case 29:this.$=new e.BooleanNode(g[h],this._$);break;case 30:this.$=g[h];break;case 31:g[h-1].isHelper=!0,this.$=g[h-1];break;case 32:this.$=new e.HashNode(g[h],this._$);break;case 33:this.$=[g[h-2],g[h]];break;case 34:this.$=new e.PartialNameNode(g[h],this._$);break;case 35:this.$=new e.PartialNameNode(new e.StringNode(g[h],this._$),this._$);break;case 36:this.$=new e.PartialNameNode(new e.IntegerNode(g[h],this._$));break;case 37:this.$=new e.DataNode(g[h],this._$);break;case 38:this.$=new e.IdNode(g[h],this._$);break;case 39:g[h-2].push({part:g[h],separator:g[h-1]}),this.$=g[h-2];break;case 40:this.$=[{part:g[h]}];break;case 43:this.$=[];break;case 44:g[h-1].push(g[h]);break;case 47:this.$=[g[h]];break;case 48:g[h-1].push(g[h])}},table:[{3:1,4:2,5:[1,3],8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],22:[1,13],23:[1,14],25:[1,15]},{1:[3]},{5:[1,16],8:17,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],22:[1,13],23:[1,14],25:[1,15]},{1:[2,2]},{5:[2,9],14:[2,9],15:[2,9],16:[2,9],19:[2,9],20:[2,9],22:[2,9],23:[2,9],25:[2,9]},{4:20,6:18,7:19,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,21],20:[2,8],22:[1,13],23:[1,14],25:[1,15]},{4:20,6:22,7:19,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,21],20:[2,8],22:[1,13],23:[1,14],25:[1,15]},{5:[2,13],14:[2,13],15:[2,13],16:[2,13],19:[2,13],20:[2,13],22:[2,13],23:[2,13],25:[2,13]},{5:[2,14],14:[2,14],15:[2,14],16:[2,14],19:[2,14],20:[2,14],22:[2,14],23:[2,14],25:[2,14]},{5:[2,15],14:[2,15],15:[2,15],16:[2,15],19:[2,15],20:[2,15],22:[2,15],23:[2,15],25:[2,15]},{5:[2,16],14:[2,16],15:[2,16],16:[2,16],19:[2,16],20:[2,16],22:[2,16],23:[2,16],25:[2,16]},{17:23,21:24,30:25,40:[1,28],42:[1,27],43:26},{17:29,21:24,30:25,40:[1,28],42:[1,27],43:26},{17:30,21:24,30:25,40:[1,28],42:[1,27],43:26},{17:31,21:24,30:25,40:[1,28],42:[1,27],43:26},{21:33,26:32,32:[1,34],33:[1,35],40:[1,28],43:26},{1:[2,1]},{5:[2,10],14:[2,10],15:[2,10],16:[2,10],19:[2,10],20:[2,10],22:[2,10],23:[2,10],25:[2,10]},{10:36,20:[1,37]},{4:38,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],20:[2,7],22:[1,13],23:[1,14],25:[1,15]},{7:39,8:17,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,21],20:[2,6],22:[1,13],23:[1,14],25:[1,15]},{17:23,18:[1,40],21:24,30:25,40:[1,28],42:[1,27],43:26},{10:41,20:[1,37]},{18:[1,42]},{18:[2,43],24:[2,43],28:43,32:[2,43],33:[2,43],34:[2,43],35:[2,43],36:[2,43],40:[2,43],42:[2,43]},{18:[2,25],24:[2,25],36:[2,25]},{18:[2,38],24:[2,38],32:[2,38],33:[2,38],34:[2,38],35:[2,38],36:[2,38],40:[2,38],42:[2,38],44:[1,44]},{21:45,40:[1,28],43:26},{18:[2,40],24:[2,40],32:[2,40],33:[2,40],34:[2,40],35:[2,40],36:[2,40],40:[2,40],42:[2,40],44:[2,40]},{18:[1,46]},{18:[1,47]},{24:[1,48]},{18:[2,41],21:50,27:49,40:[1,28],43:26},{18:[2,34],40:[2,34]},{18:[2,35],40:[2,35]},{18:[2,36],40:[2,36]},{5:[2,11],14:[2,11],15:[2,11],16:[2,11],19:[2,11],20:[2,11],22:[2,11],23:[2,11],25:[2,11]},{21:51,40:[1,28],43:26},{8:17,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],20:[2,3],22:[1,13],23:[1,14],25:[1,15]},{4:52,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],20:[2,5],22:[1,13],23:[1,14],25:[1,15]},{14:[2,23],15:[2,23],16:[2,23],19:[2,23],20:[2,23],22:[2,23],23:[2,23],25:[2,23]},{5:[2,12],14:[2,12],15:[2,12],16:[2,12],19:[2,12],20:[2,12],22:[2,12],23:[2,12],25:[2,12]},{14:[2,18],15:[2,18],16:[2,18],19:[2,18],20:[2,18],22:[2,18],23:[2,18],25:[2,18]},{18:[2,45],21:56,24:[2,45],29:53,30:60,31:54,32:[1,57],33:[1,58],34:[1,59],35:[1,61],36:[2,45],37:55,38:62,39:63,40:[1,64],42:[1,27],43:26},{40:[1,65]},{18:[2,37],24:[2,37],32:[2,37],33:[2,37],34:[2,37],35:[2,37],36:[2,37],40:[2,37],42:[2,37]},{14:[2,17],15:[2,17],16:[2,17],19:[2,17],20:[2,17],22:[2,17],23:[2,17],25:[2,17]},{5:[2,20],14:[2,20],15:[2,20],16:[2,20],19:[2,20],20:[2,20],22:[2,20],23:[2,20],25:[2,20]},{5:[2,21],14:[2,21],15:[2,21],16:[2,21],19:[2,21],20:[2,21],22:[2,21],23:[2,21],25:[2,21]},{18:[1,66]},{18:[2,42]},{18:[1,67]},{8:17,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],20:[2,4],22:[1,13],23:[1,14],25:[1,15]},{18:[2,24],24:[2,24],36:[2,24]},{18:[2,44],24:[2,44],32:[2,44],33:[2,44],34:[2,44],35:[2,44],36:[2,44],40:[2,44],42:[2,44]},{18:[2,46],24:[2,46],36:[2,46]},{18:[2,26],24:[2,26],32:[2,26],33:[2,26],34:[2,26],35:[2,26],36:[2,26],40:[2,26],42:[2,26]},{18:[2,27],24:[2,27],32:[2,27],33:[2,27],34:[2,27],35:[2,27],36:[2,27],40:[2,27],42:[2,27]},{18:[2,28],24:[2,28],32:[2,28],33:[2,28],34:[2,28],35:[2,28],36:[2,28],40:[2,28],42:[2,28]},{18:[2,29],24:[2,29],32:[2,29],33:[2,29],34:[2,29],35:[2,29],36:[2,29],40:[2,29],42:[2,29]},{18:[2,30],24:[2,30],32:[2,30],33:[2,30],34:[2,30],35:[2,30],36:[2,30],40:[2,30],42:[2,30]},{17:68,21:24,30:25,40:[1,28],42:[1,27],43:26},{18:[2,32],24:[2,32],36:[2,32],39:69,40:[1,70]},{18:[2,47],24:[2,47],36:[2,47],40:[2,47]},{18:[2,40],24:[2,40],32:[2,40],33:[2,40],34:[2,40],35:[2,40],36:[2,40],40:[2,40],41:[1,71],42:[2,40],44:[2,40]},{18:[2,39],24:[2,39],32:[2,39],33:[2,39],34:[2,39],35:[2,39],36:[2,39],40:[2,39],42:[2,39],44:[2,39]},{5:[2,22],14:[2,22],15:[2,22],16:[2,22],19:[2,22],20:[2,22],22:[2,22],23:[2,22],25:[2,22]},{5:[2,19],14:[2,19],15:[2,19],16:[2,19],19:[2,19],20:[2,19],22:[2,19],23:[2,19],25:[2,19]},{36:[1,72]},{18:[2,48],24:[2,48],36:[2,48],40:[2,48]},{41:[1,71]},{21:56,30:60,31:73,32:[1,57],33:[1,58],34:[1,59],35:[1,61],40:[1,28],42:[1,27],43:26},{18:[2,31],24:[2,31],32:[2,31],33:[2,31],34:[2,31],35:[2,31],36:[2,31],40:[2,31],42:[2,31]},{18:[2,33],24:[2,33],36:[2,33],40:[2,33]}],defaultActions:{3:[2,2],16:[2,1],50:[2,42]},parseError:function(a){throw new Error(a)},parse:function(a){function b(){var a;return a=c.lexer.lex()||1,\"number\"!=typeof a&&(a=c.symbols_[a]||a),a}var c=this,d=[0],e=[null],f=[],g=this.table,h=\"\",i=0,j=0,k=0;this.lexer.setInput(a),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,\"undefined\"==typeof this.lexer.yylloc&&(this.lexer.yylloc={});var l=this.lexer.yylloc;f.push(l);var m=this.lexer.options&&this.lexer.options.ranges;\"function\"==typeof this.yy.parseError&&(this.parseError=this.yy.parseError);for(var n,o,p,q,r,s,t,u,v,w={};;){if(p=d[d.length-1],this.defaultActions[p]?q=this.defaultActions[p]:((null===n||\"undefined\"==typeof n)&&(n=b()),q=g[p]&&g[p][n]),\"undefined\"==typeof q||!q.length||!q[0]){var x=\"\";if(!k){v=[];for(s in g[p])this.terminals_[s]&&s>2&&v.push(\"'\"+this.terminals_[s]+\"'\");x=this.lexer.showPosition?\"Parse error on line \"+(i+1)+\":\\n\"+this.lexer.showPosition()+\"\\nExpecting \"+v.join(\", \")+\", got '\"+(this.terminals_[n]||n)+\"'\":\"Parse error on line \"+(i+1)+\": Unexpected \"+(1==n?\"end of input\":\"'\"+(this.terminals_[n]||n)+\"'\"),this.parseError(x,{text:this.lexer.match,token:this.terminals_[n]||n,line:this.lexer.yylineno,loc:l,expected:v})}}if(q[0]instanceof Array&&q.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+p+\", token: \"+n);switch(q[0]){case 1:d.push(n),e.push(this.lexer.yytext),f.push(this.lexer.yylloc),d.push(q[1]),n=null,o?(n=o,o=null):(j=this.lexer.yyleng,h=this.lexer.yytext,i=this.lexer.yylineno,l=this.lexer.yylloc,k>0&&k--);break;case 2:if(t=this.productions_[q[1]][1],w.$=e[e.length-t],w._$={first_line:f[f.length-(t||1)].first_line,last_line:f[f.length-1].last_line,first_column:f[f.length-(t||1)].first_column,last_column:f[f.length-1].last_column},m&&(w._$.range=[f[f.length-(t||1)].range[0],f[f.length-1].range[1]]),r=this.performAction.call(w,h,j,i,this.yy,q[1],e,f),\"undefined\"!=typeof r)return r;t&&(d=d.slice(0,-1*t*2),e=e.slice(0,-1*t),f=f.slice(0,-1*t)),d.push(this.productions_[q[1]][0]),e.push(w.$),f.push(w._$),u=g[d[d.length-2]][d[d.length-1]],d.push(u);break;case 3:return!0}}return!0}},d=function(){var a={EOF:1,parseError:function(a,b){if(!this.yy.parser)throw new Error(a);this.yy.parser.parseError(a,b)},setInput:function(a){return this._input=a,this._more=this._less=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var a=this._input[0];this.yytext+=a,this.yyleng++,this.offset++,this.match+=a,this.matched+=a;var b=a.match(/(?:\\r\\n?|\\n).*/g);return b?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),a},unput:function(a){var b=a.length,c=a.split(/(?:\\r\\n?|\\n)/g);this._input=a+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-b-1),this.offset-=b;var d=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),c.length-1&&(this.yylineno-=c.length-1);var e=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:c?(c.length===d.length?this.yylloc.first_column:0)+d[d.length-c.length].length-c[0].length:this.yylloc.first_column-b},this.options.ranges&&(this.yylloc.range=[e[0],e[0]+this.yyleng-b]),this},more:function(){return this._more=!0,this},less:function(a){this.unput(this.match.slice(a))},pastInput:function(){var a=this.matched.substr(0,this.matched.length-this.match.length);return(a.length>20?\"...\":\"\")+a.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var a=this.match;return a.length<20&&(a+=this._input.substr(0,20-a.length)),(a.substr(0,20)+(a.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var a=this.pastInput(),b=new Array(a.length+1).join(\"-\");return a+this.upcomingInput()+\"\\n\"+b+\"^\"},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var a,b,c,d,e;this._more||(this.yytext=\"\",this.match=\"\");for(var f=this._currentRules(),g=0;g<f.length&&(c=this._input.match(this.rules[f[g]]),!c||b&&!(c[0].length>b[0].length)||(b=c,d=g,this.options.flex));g++);return b?(e=b[0].match(/(?:\\r\\n?|\\n).*/g),e&&(this.yylineno+=e.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:e?e[e.length-1].length-e[e.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+b[0].length},this.yytext+=b[0],this.match+=b[0],this.matches=b,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._input=this._input.slice(b[0].length),this.matched+=b[0],a=this.performAction.call(this,this.yy,this,f[d],this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),a?a:void 0):\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},lex:function(){var a=this.next();return\"undefined\"!=typeof a?a:this.lex()},begin:function(a){this.conditionStack.push(a)},popState:function(){return this.conditionStack.pop()},_currentRules:function(){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules},topState:function(){return this.conditionStack[this.conditionStack.length-2]},pushState:function(a){this.begin(a)}};return a.options={},a.performAction=function(a,b,c,d){function e(a,c){return b.yytext=b.yytext.substr(a,b.yyleng-c)}switch(c){case 0:if(\"\\\\\\\\\"===b.yytext.slice(-2)?(e(0,1),this.begin(\"mu\")):\"\\\\\"===b.yytext.slice(-1)?(e(0,1),this.begin(\"emu\")):this.begin(\"mu\"),b.yytext)return 14;break;case 1:return 14;case 2:return this.popState(),14;case 3:return e(0,4),this.popState(),15;case 4:return 35;case 5:return 36;case 6:return 25;case 7:return 16;case 8:return 20;case 9:return 19;case 10:return 19;case 11:return 23;case 12:return 22;case 13:this.popState(),this.begin(\"com\");break;case 14:return e(3,5),this.popState(),15;case 15:return 22;case 16:return 41;case 17:return 40;case 18:return 40;case 19:return 44;case 20:break;case 21:return this.popState(),24;case 22:return this.popState(),18;case 23:return b.yytext=e(1,2).replace(/\\\\\"/g,'\"'),32;case 24:return b.yytext=e(1,2).replace(/\\\\'/g,\"'\"),32;case 25:return 42;case 26:return 34;case 27:return 34;case 28:return 33;case 29:return 40;case 30:return b.yytext=e(1,2),40;case 31:return\"INVALID\";case 32:return 5}},a.rules=[/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:[\\s\\S]*?--\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{!--)/,/^(?:\\{\\{![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:-?[0-9]+(?=([~}\\s)])))/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)]))))/,/^(?:\\[[^\\]]*\\])/,/^(?:.)/,/^(?:$)/],a.conditions={mu:{rules:[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],inclusive:!1},emu:{rules:[2],inclusive:!1},com:{rules:[3],inclusive:!1},INITIAL:{rules:[0,1,32],inclusive:!0}},a}();return c.lexer=d,b.prototype=c,c.Parser=b,new b}();return a=b}(),i=function(a,b){\"use strict\";function c(a){return a.constructor===f.ProgramNode?a:(e.yy=f,e.parse(a))}var d={},e=a,f=b;return d.parser=e,d.parse=c,d}(h,g),j=function(a){\"use strict\";function b(){}function c(a,b,c){if(null==a||\"string\"!=typeof a&&a.constructor!==c.AST.ProgramNode)throw new f(\"You must pass a string or Handlebars AST to Handlebars.precompile. You passed \"+a);b=b||{},\"data\"in b||(b.data=!0);var d=c.parse(a),e=(new c.Compiler).compile(d,b);return(new c.JavaScriptCompiler).compile(e,b)}function d(a,b,c){function d(){var d=c.parse(a),e=(new c.Compiler).compile(d,b),f=(new c.JavaScriptCompiler).compile(e,b,void 0,!0);return c.template(f)}if(null==a||\"string\"!=typeof a&&a.constructor!==c.AST.ProgramNode)throw new f(\"You must pass a string or Handlebars AST to Handlebars.compile. You passed \"+a);b=b||{},\"data\"in b||(b.data=!0);var e;return function(a,b){return e||(e=d()),e.call(this,a,b)}}var e={},f=a;return e.Compiler=b,b.prototype={compiler:b,disassemble:function(){for(var a,b,c,d=this.opcodes,e=[],f=0,g=d.length;g>f;f++)if(a=d[f],\"DECLARE\"===a.opcode)e.push(\"DECLARE \"+a.name+\"=\"+a.value);else{b=[];for(var h=0;h<a.args.length;h++)c=a.args[h],\"string\"==typeof c&&(c='\"'+c.replace(\"\\n\",\"\\\\n\")+'\"'),b.push(c);e.push(a.opcode+\" \"+b.join(\" \"))}return e.join(\"\\n\")},equals:function(a){var b=this.opcodes.length;if(a.opcodes.length!==b)return!1;for(var c=0;b>c;c++){var d=this.opcodes[c],e=a.opcodes[c];if(d.opcode!==e.opcode||d.args.length!==e.args.length)return!1;for(var f=0;f<d.args.length;f++)if(d.args[f]!==e.args[f])return!1}if(b=this.children.length,a.children.length!==b)return!1;for(c=0;b>c;c++)if(!this.children[c].equals(a.children[c]))return!1;return!0},guid:0,compile:function(a,b){this.opcodes=[],this.children=[],this.depths={list:[]},this.options=b;var c=this.options.knownHelpers;if(this.options.knownHelpers={helperMissing:!0,blockHelperMissing:!0,each:!0,\"if\":!0,unless:!0,\"with\":!0,log:!0},c)for(var d in c)this.options.knownHelpers[d]=c[d];return this.accept(a)},accept:function(a){var b,c=a.strip||{};return c.left&&this.opcode(\"strip\"),b=this[a.type](a),c.right&&this.opcode(\"strip\"),b},program:function(a){for(var b=a.statements,c=0,d=b.length;d>c;c++)this.accept(b[c]);return this.isSimple=1===d,this.depths.list=this.depths.list.sort(function(a,b){return a-b}),this},compileProgram:function(a){var b,c=(new this.compiler).compile(a,this.options),d=this.guid++;this.usePartial=this.usePartial||c.usePartial,this.children[d]=c;for(var e=0,f=c.depths.list.length;f>e;e++)b=c.depths.list[e],2>b||this.addDepth(b-1);return d},block:function(a){var b=a.mustache,c=a.program,d=a.inverse;c&&(c=this.compileProgram(c)),d&&(d=this.compileProgram(d));var e=b.sexpr,f=this.classifySexpr(e);\"helper\"===f?this.helperSexpr(e,c,d):\"simple\"===f?(this.simpleSexpr(e),this.opcode(\"pushProgram\",c),this.opcode(\"pushProgram\",d),this.opcode(\"emptyHash\"),this.opcode(\"blockValue\")):(this.ambiguousSexpr(e,c,d),this.opcode(\"pushProgram\",c),this.opcode(\"pushProgram\",d),this.opcode(\"emptyHash\"),this.opcode(\"ambiguousBlockValue\")),this.opcode(\"append\")},hash:function(a){var b,c,d=a.pairs;this.opcode(\"pushHash\");for(var e=0,f=d.length;f>e;e++)b=d[e],c=b[1],this.options.stringParams?(c.depth&&this.addDepth(c.depth),this.opcode(\"getContext\",c.depth||0),this.opcode(\"pushStringParam\",c.stringModeValue,c.type),\"sexpr\"===c.type&&this.sexpr(c)):this.accept(c),this.opcode(\"assignToHash\",b[0]);this.opcode(\"popHash\")},partial:function(a){var b=a.partialName;this.usePartial=!0,a.context?this.ID(a.context):this.opcode(\"push\",\"depth0\"),this.opcode(\"invokePartial\",b.name),this.opcode(\"append\")},content:function(a){this.opcode(\"appendContent\",a.string)},mustache:function(a){this.sexpr(a.sexpr),a.escaped&&!this.options.noEscape?this.opcode(\"appendEscaped\"):this.opcode(\"append\")},ambiguousSexpr:function(a,b,c){var d=a.id,e=d.parts[0],f=null!=b||null!=c;this.opcode(\"getContext\",d.depth),this.opcode(\"pushProgram\",b),this.opcode(\"pushProgram\",c),this.opcode(\"invokeAmbiguous\",e,f)},simpleSexpr:function(a){var b=a.id;\"DATA\"===b.type?this.DATA(b):b.parts.length?this.ID(b):(this.addDepth(b.depth),this.opcode(\"getContext\",b.depth),this.opcode(\"pushContext\")),this.opcode(\"resolvePossibleLambda\")},helperSexpr:function(a,b,c){var d=this.setupFullMustacheParams(a,b,c),e=a.id.parts[0];if(this.options.knownHelpers[e])this.opcode(\"invokeKnownHelper\",d.length,e);else{if(this.options.knownHelpersOnly)throw new f(\"You specified knownHelpersOnly, but used the unknown helper \"+e,a);this.opcode(\"invokeHelper\",d.length,e,a.isRoot)}},sexpr:function(a){var b=this.classifySexpr(a);\"simple\"===b?this.simpleSexpr(a):\"helper\"===b?this.helperSexpr(a):this.ambiguousSexpr(a)},ID:function(a){this.addDepth(a.depth),this.opcode(\"getContext\",a.depth);var b=a.parts[0];b?this.opcode(\"lookupOnContext\",a.parts[0]):this.opcode(\"pushContext\");for(var c=1,d=a.parts.length;d>c;c++)this.opcode(\"lookup\",a.parts[c])},DATA:function(a){if(this.options.data=!0,a.id.isScoped||a.id.depth)throw new f(\"Scoped data references are not supported: \"+a.original,a);this.opcode(\"lookupData\");for(var b=a.id.parts,c=0,d=b.length;d>c;c++)this.opcode(\"lookup\",b[c])},STRING:function(a){this.opcode(\"pushString\",a.string)},INTEGER:function(a){this.opcode(\"pushLiteral\",a.integer)},BOOLEAN:function(a){this.opcode(\"pushLiteral\",a.bool)},comment:function(){},opcode:function(a){this.opcodes.push({opcode:a,args:[].slice.call(arguments,1)})},declare:function(a,b){this.opcodes.push({opcode:\"DECLARE\",name:a,value:b})},addDepth:function(a){0!==a&&(this.depths[a]||(this.depths[a]=!0,this.depths.list.push(a)))},classifySexpr:function(a){var b=a.isHelper,c=a.eligibleHelper,d=this.options;if(c&&!b){var e=a.id.parts[0];d.knownHelpers[e]?b=!0:d.knownHelpersOnly&&(c=!1)}return b?\"helper\":c?\"ambiguous\":\"simple\"},pushParams:function(a){for(var b,c=a.length;c--;)b=a[c],this.options.stringParams?(b.depth&&this.addDepth(b.depth),this.opcode(\"getContext\",b.depth||0),this.opcode(\"pushStringParam\",b.stringModeValue,b.type),\"sexpr\"===b.type&&this.sexpr(b)):this[b.type](b)},setupFullMustacheParams:function(a,b,c){var d=a.params;return this.pushParams(d),this.opcode(\"pushProgram\",b),this.opcode(\"pushProgram\",c),a.hash?this.hash(a.hash):this.opcode(\"emptyHash\"),d}},e.precompile=c,e.compile=d,e}(c),k=function(a,b){\"use strict\";function c(a){this.value=a}function d(){}var e,f=a.COMPILER_REVISION,g=a.REVISION_CHANGES,h=a.log,i=b;d.prototype={nameLookup:function(a,b){var c,e;return 0===a.indexOf(\"depth\")&&(c=!0),e=/^[0-9]+$/.test(b)?a+\"[\"+b+\"]\":d.isValidJavaScriptVariableName(b)?a+\".\"+b:a+\"['\"+b+\"']\",c?\"(\"+a+\" && \"+e+\")\":e},compilerInfo:function(){var a=f,b=g[a];return\"this.compilerInfo = [\"+a+\",'\"+b+\"'];\\n\"},appendToBuffer:function(a){return this.environment.isSimple?\"return \"+a+\";\":{appendToBuffer:!0,content:a,toString:function(){return\"buffer += \"+a+\";\"}}},initializeBuffer:function(){return this.quotedString(\"\")},namespace:\"Handlebars\",compile:function(a,b,c,d){this.environment=a,this.options=b||{},h(\"debug\",this.environment.disassemble()+\"\\n\\n\"),this.name=this.environment.name,this.isChild=!!c,this.context=c||{programs:[],environments:[],aliases:{}},this.preamble(),this.stackSlot=0,this.stackVars=[],this.registers={list:[]},this.hashes=[],this.compileStack=[],this.inlineStack=[],this.compileChildren(a,b);\n   28  var e,f=a.opcodes;this.i=0;for(var g=f.length;this.i<g;this.i++)e=f[this.i],\"DECLARE\"===e.opcode?this[e.name]=e.value:this[e.opcode].apply(this,e.args),e.opcode!==this.stripNext&&(this.stripNext=!1);if(this.pushSource(\"\"),this.stackSlot||this.inlineStack.length||this.compileStack.length)throw new i(\"Compile completed with content left on stack\");return this.createFunctionContext(d)},preamble:function(){var a=[];if(this.isChild)a.push(\"\");else{var b=this.namespace,c=\"helpers = this.merge(helpers, \"+b+\".helpers);\";this.environment.usePartial&&(c=c+\" partials = this.merge(partials, \"+b+\".partials);\"),this.options.data&&(c+=\" data = data || {};\"),a.push(c)}this.environment.isSimple?a.push(\"\"):a.push(\", buffer = \"+this.initializeBuffer()),this.lastContext=0,this.source=a},createFunctionContext:function(a){var b=this.stackVars.concat(this.registers.list);if(b.length>0&&(this.source[1]=this.source[1]+\", \"+b.join(\", \")),!this.isChild)for(var c in this.context.aliases)this.context.aliases.hasOwnProperty(c)&&(this.source[1]=this.source[1]+\", \"+c+\"=\"+this.context.aliases[c]);this.source[1]&&(this.source[1]=\"var \"+this.source[1].substring(2)+\";\"),this.isChild||(this.source[1]+=\"\\n\"+this.context.programs.join(\"\\n\")+\"\\n\"),this.environment.isSimple||this.pushSource(\"return buffer;\");for(var d=this.isChild?[\"depth0\",\"data\"]:[\"Handlebars\",\"depth0\",\"helpers\",\"partials\",\"data\"],e=0,f=this.environment.depths.list.length;f>e;e++)d.push(\"depth\"+this.environment.depths.list[e]);var g=this.mergeSource();if(this.isChild||(g=this.compilerInfo()+g),a)return d.push(g),Function.apply(this,d);var i=\"function \"+(this.name||\"\")+\"(\"+d.join(\",\")+\") {\\n  \"+g+\"}\";return h(\"debug\",i+\"\\n\\n\"),i},mergeSource:function(){for(var a,b=\"\",c=0,d=this.source.length;d>c;c++){var e=this.source[c];e.appendToBuffer?a=a?a+\"\\n    + \"+e.content:e.content:(a&&(b+=\"buffer += \"+a+\";\\n  \",a=void 0),b+=e+\"\\n  \")}return b},blockValue:function(){this.context.aliases.blockHelperMissing=\"helpers.blockHelperMissing\";var a=[\"depth0\"];this.setupParams(0,a),this.replaceStack(function(b){return a.splice(1,0,b),\"blockHelperMissing.call(\"+a.join(\", \")+\")\"})},ambiguousBlockValue:function(){this.context.aliases.blockHelperMissing=\"helpers.blockHelperMissing\";var a=[\"depth0\"];this.setupParams(0,a);var b=this.topStack();a.splice(1,0,b),this.pushSource(\"if (!\"+this.lastHelper+\") { \"+b+\" = blockHelperMissing.call(\"+a.join(\", \")+\"); }\")},appendContent:function(a){this.pendingContent&&(a=this.pendingContent+a),this.stripNext&&(a=a.replace(/^\\s+/,\"\")),this.pendingContent=a},strip:function(){this.pendingContent&&(this.pendingContent=this.pendingContent.replace(/\\s+$/,\"\")),this.stripNext=\"strip\"},append:function(){this.flushInline();var a=this.popStack();this.pushSource(\"if(\"+a+\" || \"+a+\" === 0) { \"+this.appendToBuffer(a)+\" }\"),this.environment.isSimple&&this.pushSource(\"else { \"+this.appendToBuffer(\"''\")+\" }\")},appendEscaped:function(){this.context.aliases.escapeExpression=\"this.escapeExpression\",this.pushSource(this.appendToBuffer(\"escapeExpression(\"+this.popStack()+\")\"))},getContext:function(a){this.lastContext!==a&&(this.lastContext=a)},lookupOnContext:function(a){this.push(this.nameLookup(\"depth\"+this.lastContext,a,\"context\"))},pushContext:function(){this.pushStackLiteral(\"depth\"+this.lastContext)},resolvePossibleLambda:function(){this.context.aliases.functionType='\"function\"',this.replaceStack(function(a){return\"typeof \"+a+\" === functionType ? \"+a+\".apply(depth0) : \"+a})},lookup:function(a){this.replaceStack(function(b){return b+\" == null || \"+b+\" === false ? \"+b+\" : \"+this.nameLookup(b,a,\"context\")})},lookupData:function(){this.pushStackLiteral(\"data\")},pushStringParam:function(a,b){this.pushStackLiteral(\"depth\"+this.lastContext),this.pushString(b),\"sexpr\"!==b&&(\"string\"==typeof a?this.pushString(a):this.pushStackLiteral(a))},emptyHash:function(){this.pushStackLiteral(\"{}\"),this.options.stringParams&&(this.push(\"{}\"),this.push(\"{}\"))},pushHash:function(){this.hash&&this.hashes.push(this.hash),this.hash={values:[],types:[],contexts:[]}},popHash:function(){var a=this.hash;this.hash=this.hashes.pop(),this.options.stringParams&&(this.push(\"{\"+a.contexts.join(\",\")+\"}\"),this.push(\"{\"+a.types.join(\",\")+\"}\")),this.push(\"{\\n    \"+a.values.join(\",\\n    \")+\"\\n  }\")},pushString:function(a){this.pushStackLiteral(this.quotedString(a))},push:function(a){return this.inlineStack.push(a),a},pushLiteral:function(a){this.pushStackLiteral(a)},pushProgram:function(a){null!=a?this.pushStackLiteral(this.programExpression(a)):this.pushStackLiteral(null)},invokeHelper:function(a,b,c){this.context.aliases.helperMissing=\"helpers.helperMissing\",this.useRegister(\"helper\");var d=this.lastHelper=this.setupHelper(a,b,!0),e=this.nameLookup(\"depth\"+this.lastContext,b,\"context\"),f=\"helper = \"+d.name+\" || \"+e;d.paramsInit&&(f+=\",\"+d.paramsInit),this.push(\"(\"+f+\",helper ? helper.call(\"+d.callParams+\") : helperMissing.call(\"+d.helperMissingParams+\"))\"),c||this.flushInline()},invokeKnownHelper:function(a,b){var c=this.setupHelper(a,b);this.push(c.name+\".call(\"+c.callParams+\")\")},invokeAmbiguous:function(a,b){this.context.aliases.functionType='\"function\"',this.useRegister(\"helper\"),this.emptyHash();var c=this.setupHelper(0,a,b),d=this.lastHelper=this.nameLookup(\"helpers\",a,\"helper\"),e=this.nameLookup(\"depth\"+this.lastContext,a,\"context\"),f=this.nextStack();c.paramsInit&&this.pushSource(c.paramsInit),this.pushSource(\"if (helper = \"+d+\") { \"+f+\" = helper.call(\"+c.callParams+\"); }\"),this.pushSource(\"else { helper = \"+e+\"; \"+f+\" = typeof helper === functionType ? helper.call(\"+c.callParams+\") : helper; }\")},invokePartial:function(a){var b=[this.nameLookup(\"partials\",a,\"partial\"),\"'\"+a+\"'\",this.popStack(),\"helpers\",\"partials\"];this.options.data&&b.push(\"data\"),this.context.aliases.self=\"this\",this.push(\"self.invokePartial(\"+b.join(\", \")+\")\")},assignToHash:function(a){var b,c,d=this.popStack();this.options.stringParams&&(c=this.popStack(),b=this.popStack());var e=this.hash;b&&e.contexts.push(\"'\"+a+\"': \"+b),c&&e.types.push(\"'\"+a+\"': \"+c),e.values.push(\"'\"+a+\"': (\"+d+\")\")},compiler:d,compileChildren:function(a,b){for(var c,d,e=a.children,f=0,g=e.length;g>f;f++){c=e[f],d=new this.compiler;var h=this.matchExistingProgram(c);null==h?(this.context.programs.push(\"\"),h=this.context.programs.length,c.index=h,c.name=\"program\"+h,this.context.programs[h]=d.compile(c,b,this.context),this.context.environments[h]=c):(c.index=h,c.name=\"program\"+h)}},matchExistingProgram:function(a){for(var b=0,c=this.context.environments.length;c>b;b++){var d=this.context.environments[b];if(d&&d.equals(a))return b}},programExpression:function(a){if(this.context.aliases.self=\"this\",null==a)return\"self.noop\";for(var b,c=this.environment.children[a],d=c.depths.list,e=[c.index,c.name,\"data\"],f=0,g=d.length;g>f;f++)b=d[f],1===b?e.push(\"depth0\"):e.push(\"depth\"+(b-1));return(0===d.length?\"self.program(\":\"self.programWithDepth(\")+e.join(\", \")+\")\"},register:function(a,b){this.useRegister(a),this.pushSource(a+\" = \"+b+\";\")},useRegister:function(a){this.registers[a]||(this.registers[a]=!0,this.registers.list.push(a))},pushStackLiteral:function(a){return this.push(new c(a))},pushSource:function(a){this.pendingContent&&(this.source.push(this.appendToBuffer(this.quotedString(this.pendingContent))),this.pendingContent=void 0),a&&this.source.push(a)},pushStack:function(a){this.flushInline();var b=this.incrStack();return a&&this.pushSource(b+\" = \"+a+\";\"),this.compileStack.push(b),b},replaceStack:function(a){var b,d,e,f=\"\",g=this.isInline();if(g){var h=this.popStack(!0);if(h instanceof c)b=h.value,e=!0;else{d=!this.stackSlot;var i=d?this.incrStack():this.topStackName();f=\"(\"+this.push(i)+\" = \"+h+\"),\",b=this.topStack()}}else b=this.topStack();var j=a.call(this,b);return g?(e||this.popStack(),d&&this.stackSlot--,this.push(\"(\"+f+j+\")\")):(/^stack/.test(b)||(b=this.nextStack()),this.pushSource(b+\" = (\"+f+j+\");\")),b},nextStack:function(){return this.pushStack()},incrStack:function(){return this.stackSlot++,this.stackSlot>this.stackVars.length&&this.stackVars.push(\"stack\"+this.stackSlot),this.topStackName()},topStackName:function(){return\"stack\"+this.stackSlot},flushInline:function(){var a=this.inlineStack;if(a.length){this.inlineStack=[];for(var b=0,d=a.length;d>b;b++){var e=a[b];e instanceof c?this.compileStack.push(e):this.pushStack(e)}}},isInline:function(){return this.inlineStack.length},popStack:function(a){var b=this.isInline(),d=(b?this.inlineStack:this.compileStack).pop();if(!a&&d instanceof c)return d.value;if(!b){if(!this.stackSlot)throw new i(\"Invalid stack pop\");this.stackSlot--}return d},topStack:function(a){var b=this.isInline()?this.inlineStack:this.compileStack,d=b[b.length-1];return!a&&d instanceof c?d.value:d},quotedString:function(a){return'\"'+a.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"').replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\").replace(/\\u2028/g,\"\\\\u2028\").replace(/\\u2029/g,\"\\\\u2029\")+'\"'},setupHelper:function(a,b,c){var d=[],e=this.setupParams(a,d,c),f=this.nameLookup(\"helpers\",b,\"helper\");return{params:d,paramsInit:e,name:f,callParams:[\"depth0\"].concat(d).join(\", \"),helperMissingParams:c&&[\"depth0\",this.quotedString(b)].concat(d).join(\", \")}},setupOptions:function(a,b){var c,d,e,f=[],g=[],h=[];f.push(\"hash:\"+this.popStack()),this.options.stringParams&&(f.push(\"hashTypes:\"+this.popStack()),f.push(\"hashContexts:\"+this.popStack())),d=this.popStack(),e=this.popStack(),(e||d)&&(e||(this.context.aliases.self=\"this\",e=\"self.noop\"),d||(this.context.aliases.self=\"this\",d=\"self.noop\"),f.push(\"inverse:\"+d),f.push(\"fn:\"+e));for(var i=0;a>i;i++)c=this.popStack(),b.push(c),this.options.stringParams&&(h.push(this.popStack()),g.push(this.popStack()));return this.options.stringParams&&(f.push(\"contexts:[\"+g.join(\",\")+\"]\"),f.push(\"types:[\"+h.join(\",\")+\"]\")),this.options.data&&f.push(\"data:data\"),f},setupParams:function(a,b,c){var d=\"{\"+this.setupOptions(a,b).join(\",\")+\"}\";return c?(this.useRegister(\"options\"),b.push(\"options\"),\"options=\"+d):(b.push(d),\"\")}};for(var j=\"break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield\".split(\" \"),k=d.RESERVED_WORDS={},l=0,m=j.length;m>l;l++)k[j[l]]=!0;return d.isValidJavaScriptVariableName=function(a){return!d.RESERVED_WORDS[a]&&/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(a)?!0:!1},e=d}(d,c),l=function(a,b,c,d,e){\"use strict\";var f,g=a,h=b,i=c.parser,j=c.parse,k=d.Compiler,l=d.compile,m=d.precompile,n=e,o=g.create,p=function(){var a=o();return a.compile=function(b,c){return l(b,c,a)},a.precompile=function(b,c){return m(b,c,a)},a.AST=h,a.Compiler=k,a.JavaScriptCompiler=n,a.Parser=i,a.parse=j,a};return g=p(),g.create=p,f=g}(f,g,i,j,k);return l}();\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/dist/handlebars.runtime.amd.js:\n  126      \n  127  \n  128:     var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n  129  \n  130      function Exception(message, node) {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/dist/handlebars.runtime.amd.min.js:\n   25  @license\n   26  */\n   27: define(\"handlebars/safe-string\",[\"exports\"],function(a){function b(a){this.string=a}b.prototype.toString=function(){return\"\"+this.string},a[\"default\"]=b}),define(\"handlebars/utils\",[\"./safe-string\",\"exports\"],function(a,b){function c(a){return h[a]||\"&amp;\"}function d(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])}function e(a){return a instanceof g?a.toString():a||0===a?(a=\"\"+a,j.test(a)?a.replace(i,c):a):\"\"}function f(a){return a||0===a?m(a)&&0===a.length?!0:!1:!0}var g=a[\"default\"],h={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},i=/[&<>\"'`]/g,j=/[&<>\"'`]/;b.extend=d;var k=Object.prototype.toString;b.toString=k;var l=function(a){return\"function\"==typeof a};l(/x/)&&(l=function(a){return\"function\"==typeof a&&\"[object Function]\"===k.call(a)});var l;b.isFunction=l;var m=Array.isArray||function(a){return a&&\"object\"==typeof a?\"[object Array]\"===k.call(a):!1};b.isArray=m,b.escapeExpression=e,b.isEmpty=f}),define(\"handlebars/exception\",[\"exports\"],function(a){function b(a,b){var d;b&&b.firstLine&&(d=b.firstLine,a+=\" - \"+d+\":\"+b.firstColumn);for(var e=Error.prototype.constructor.call(this,a),f=0;f<c.length;f++)this[c[f]]=e[c[f]];d&&(this.lineNumber=d,this.column=b.firstColumn)}var c=[\"description\",\"fileName\",\"lineNumber\",\"message\",\"name\",\"number\",\"stack\"];b.prototype=new Error,a[\"default\"]=b}),define(\"handlebars/base\",[\"./utils\",\"./exception\",\"exports\"],function(a,b,c){function d(a,b){this.helpers=a||{},this.partials=b||{},e(this)}function e(a){a.registerHelper(\"helperMissing\",function(a){if(2===arguments.length)return void 0;throw new h(\"Missing helper: '\"+a+\"'\")}),a.registerHelper(\"blockHelperMissing\",function(b,c){var d=c.inverse||function(){},e=c.fn;return m(b)&&(b=b.call(this)),b===!0?e(this):b===!1||null==b?d(this):l(b)?b.length>0?a.helpers.each(b,c):d(this):e(b)}),a.registerHelper(\"each\",function(a,b){var c,d=b.fn,e=b.inverse,f=0,g=\"\";if(m(a)&&(a=a.call(this)),b.data&&(c=q(b.data)),a&&\"object\"==typeof a)if(l(a))for(var h=a.length;h>f;f++)c&&(c.index=f,c.first=0===f,c.last=f===a.length-1),g+=d(a[f],{data:c});else for(var i in a)a.hasOwnProperty(i)&&(c&&(c.key=i,c.index=f,c.first=0===f),g+=d(a[i],{data:c}),f++);return 0===f&&(g=e(this)),g}),a.registerHelper(\"if\",function(a,b){return m(a)&&(a=a.call(this)),!b.hash.includeZero&&!a||g.isEmpty(a)?b.inverse(this):b.fn(this)}),a.registerHelper(\"unless\",function(b,c){return a.helpers[\"if\"].call(this,b,{fn:c.inverse,inverse:c.fn,hash:c.hash})}),a.registerHelper(\"with\",function(a,b){return m(a)&&(a=a.call(this)),g.isEmpty(a)?void 0:b.fn(a)}),a.registerHelper(\"log\",function(b,c){var d=c.data&&null!=c.data.level?parseInt(c.data.level,10):1;a.log(d,b)})}function f(a,b){p.log(a,b)}var g=a,h=b[\"default\"],i=\"1.3.0\";c.VERSION=i;var j=4;c.COMPILER_REVISION=j;var k={1:\"<= 1.0.rc.2\",2:\"== 1.0.0-rc.3\",3:\"== 1.0.0-rc.4\",4:\">= 1.0.0\"};c.REVISION_CHANGES=k;var l=g.isArray,m=g.isFunction,n=g.toString,o=\"[object Object]\";c.HandlebarsEnvironment=d,d.prototype={constructor:d,logger:p,log:f,registerHelper:function(a,b,c){if(n.call(a)===o){if(c||b)throw new h(\"Arg not supported with multiple helpers\");g.extend(this.helpers,a)}else c&&(b.not=c),this.helpers[a]=b},registerPartial:function(a,b){n.call(a)===o?g.extend(this.partials,a):this.partials[a]=b}};var p={methodMap:{0:\"debug\",1:\"info\",2:\"warn\",3:\"error\"},DEBUG:0,INFO:1,WARN:2,ERROR:3,level:3,log:function(a,b){if(p.level<=a){var c=p.methodMap[a];\"undefined\"!=typeof console&&console[c]&&console[c].call(console,b)}}};c.logger=p,c.log=f;var q=function(a){var b={};return g.extend(b,a),b};c.createFrame=q}),define(\"handlebars/runtime\",[\"./utils\",\"./exception\",\"./base\",\"exports\"],function(a,b,c,d){function e(a){var b=a&&a[0]||1,c=m;if(b!==c){if(c>b){var d=n[c],e=n[b];throw new l(\"Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (\"+d+\") or downgrade your runtime to an older version (\"+e+\").\")}throw new l(\"Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (\"+a[1]+\").\")}}function f(a,b){if(!b)throw new l(\"No environment passed to template\");var c=function(a,c,d,e,f,g){var h=b.VM.invokePartial.apply(this,arguments);if(null!=h)return h;if(b.compile){var i={helpers:e,partials:f,data:g};return f[c]=b.compile(a,{data:void 0!==g},b),f[c](d,i)}throw new l(\"The partial \"+c+\" could not be compiled when running in runtime-only mode\")},d={escapeExpression:k.escapeExpression,invokePartial:c,programs:[],program:function(a,b,c){var d=this.programs[a];return c?d=h(a,b,c):d||(d=this.programs[a]=h(a,b)),d},merge:function(a,b){var c=a||b;return a&&b&&a!==b&&(c={},k.extend(c,b),k.extend(c,a)),c},programWithDepth:b.VM.programWithDepth,noop:b.VM.noop,compilerInfo:null};return function(c,e){e=e||{};var f,g,h=e.partial?e:b;e.partial||(f=e.helpers,g=e.partials);var i=a.call(d,h,c,f,g,e.data);return e.partial||b.VM.checkRevision(d.compilerInfo),i}}function g(a,b,c){var d=Array.prototype.slice.call(arguments,3),e=function(a,e){return e=e||{},b.apply(this,[a,e.data||c].concat(d))};return e.program=a,e.depth=d.length,e}function h(a,b,c){var d=function(a,d){return d=d||{},b(a,d.data||c)};return d.program=a,d.depth=0,d}function i(a,b,c,d,e,f){var g={partial:!0,helpers:d,partials:e,data:f};if(void 0===a)throw new l(\"The partial \"+b+\" could not be found\");return a instanceof Function?a(c,g):void 0}function j(){return\"\"}var k=a,l=b[\"default\"],m=c.COMPILER_REVISION,n=c.REVISION_CHANGES;d.checkRevision=e,d.template=f,d.programWithDepth=g,d.program=h,d.invokePartial=i,d.noop=j}),define(\"handlebars.runtime\",[\"./handlebars/base\",\"./handlebars/safe-string\",\"./handlebars/exception\",\"./handlebars/utils\",\"./handlebars/runtime\",\"exports\"],function(a,b,c,d,e,f){var g=a,h=b[\"default\"],i=c[\"default\"],j=d,k=e,l=function(){var a=new g.HandlebarsEnvironment;return j.extend(a,g),a.SafeString=h,a.Exception=i,a.Utils=j,a.VM=k,a.template=function(b){return k.template(b,a)},a},m=l();m.create=l,f[\"default\"]=m});\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/dist/handlebars.runtime.js:\n  131    var __exports__;\n  132  \n  133:   var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n  134  \n  135    function Exception(message, node) {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/dist/handlebars.runtime.min.js:\n   25  @license\n   26  */\n   27: var Handlebars=function(){var a=function(){\"use strict\";function a(a){this.string=a}var b;return a.prototype.toString=function(){return\"\"+this.string},b=a}(),b=function(a){\"use strict\";function b(a){return h[a]||\"&amp;\"}function c(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])}function d(a){return a instanceof g?a.toString():a||0===a?(a=\"\"+a,j.test(a)?a.replace(i,b):a):\"\"}function e(a){return a||0===a?m(a)&&0===a.length?!0:!1:!0}var f={},g=a,h={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},i=/[&<>\"'`]/g,j=/[&<>\"'`]/;f.extend=c;var k=Object.prototype.toString;f.toString=k;var l=function(a){return\"function\"==typeof a};l(/x/)&&(l=function(a){return\"function\"==typeof a&&\"[object Function]\"===k.call(a)});var l;f.isFunction=l;var m=Array.isArray||function(a){return a&&\"object\"==typeof a?\"[object Array]\"===k.call(a):!1};return f.isArray=m,f.escapeExpression=d,f.isEmpty=e,f}(a),c=function(){\"use strict\";function a(a,b){var d;b&&b.firstLine&&(d=b.firstLine,a+=\" - \"+d+\":\"+b.firstColumn);for(var e=Error.prototype.constructor.call(this,a),f=0;f<c.length;f++)this[c[f]]=e[c[f]];d&&(this.lineNumber=d,this.column=b.firstColumn)}var b,c=[\"description\",\"fileName\",\"lineNumber\",\"message\",\"name\",\"number\",\"stack\"];return a.prototype=new Error,b=a}(),d=function(a,b){\"use strict\";function c(a,b){this.helpers=a||{},this.partials=b||{},d(this)}function d(a){a.registerHelper(\"helperMissing\",function(a){if(2===arguments.length)return void 0;throw new h(\"Missing helper: '\"+a+\"'\")}),a.registerHelper(\"blockHelperMissing\",function(b,c){var d=c.inverse||function(){},e=c.fn;return m(b)&&(b=b.call(this)),b===!0?e(this):b===!1||null==b?d(this):l(b)?b.length>0?a.helpers.each(b,c):d(this):e(b)}),a.registerHelper(\"each\",function(a,b){var c,d=b.fn,e=b.inverse,f=0,g=\"\";if(m(a)&&(a=a.call(this)),b.data&&(c=q(b.data)),a&&\"object\"==typeof a)if(l(a))for(var h=a.length;h>f;f++)c&&(c.index=f,c.first=0===f,c.last=f===a.length-1),g+=d(a[f],{data:c});else for(var i in a)a.hasOwnProperty(i)&&(c&&(c.key=i,c.index=f,c.first=0===f),g+=d(a[i],{data:c}),f++);return 0===f&&(g=e(this)),g}),a.registerHelper(\"if\",function(a,b){return m(a)&&(a=a.call(this)),!b.hash.includeZero&&!a||g.isEmpty(a)?b.inverse(this):b.fn(this)}),a.registerHelper(\"unless\",function(b,c){return a.helpers[\"if\"].call(this,b,{fn:c.inverse,inverse:c.fn,hash:c.hash})}),a.registerHelper(\"with\",function(a,b){return m(a)&&(a=a.call(this)),g.isEmpty(a)?void 0:b.fn(a)}),a.registerHelper(\"log\",function(b,c){var d=c.data&&null!=c.data.level?parseInt(c.data.level,10):1;a.log(d,b)})}function e(a,b){p.log(a,b)}var f={},g=a,h=b,i=\"1.3.0\";f.VERSION=i;var j=4;f.COMPILER_REVISION=j;var k={1:\"<= 1.0.rc.2\",2:\"== 1.0.0-rc.3\",3:\"== 1.0.0-rc.4\",4:\">= 1.0.0\"};f.REVISION_CHANGES=k;var l=g.isArray,m=g.isFunction,n=g.toString,o=\"[object Object]\";f.HandlebarsEnvironment=c,c.prototype={constructor:c,logger:p,log:e,registerHelper:function(a,b,c){if(n.call(a)===o){if(c||b)throw new h(\"Arg not supported with multiple helpers\");g.extend(this.helpers,a)}else c&&(b.not=c),this.helpers[a]=b},registerPartial:function(a,b){n.call(a)===o?g.extend(this.partials,a):this.partials[a]=b}};var p={methodMap:{0:\"debug\",1:\"info\",2:\"warn\",3:\"error\"},DEBUG:0,INFO:1,WARN:2,ERROR:3,level:3,log:function(a,b){if(p.level<=a){var c=p.methodMap[a];\"undefined\"!=typeof console&&console[c]&&console[c].call(console,b)}}};f.logger=p,f.log=e;var q=function(a){var b={};return g.extend(b,a),b};return f.createFrame=q,f}(b,c),e=function(a,b,c){\"use strict\";function d(a){var b=a&&a[0]||1,c=m;if(b!==c){if(c>b){var d=n[c],e=n[b];throw new l(\"Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (\"+d+\") or downgrade your runtime to an older version (\"+e+\").\")}throw new l(\"Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (\"+a[1]+\").\")}}function e(a,b){if(!b)throw new l(\"No environment passed to template\");var c=function(a,c,d,e,f,g){var h=b.VM.invokePartial.apply(this,arguments);if(null!=h)return h;if(b.compile){var i={helpers:e,partials:f,data:g};return f[c]=b.compile(a,{data:void 0!==g},b),f[c](d,i)}throw new l(\"The partial \"+c+\" could not be compiled when running in runtime-only mode\")},d={escapeExpression:k.escapeExpression,invokePartial:c,programs:[],program:function(a,b,c){var d=this.programs[a];return c?d=g(a,b,c):d||(d=this.programs[a]=g(a,b)),d},merge:function(a,b){var c=a||b;return a&&b&&a!==b&&(c={},k.extend(c,b),k.extend(c,a)),c},programWithDepth:b.VM.programWithDepth,noop:b.VM.noop,compilerInfo:null};return function(c,e){e=e||{};var f,g,h=e.partial?e:b;e.partial||(f=e.helpers,g=e.partials);var i=a.call(d,h,c,f,g,e.data);return e.partial||b.VM.checkRevision(d.compilerInfo),i}}function f(a,b,c){var d=Array.prototype.slice.call(arguments,3),e=function(a,e){return e=e||{},b.apply(this,[a,e.data||c].concat(d))};return e.program=a,e.depth=d.length,e}function g(a,b,c){var d=function(a,d){return d=d||{},b(a,d.data||c)};return d.program=a,d.depth=0,d}function h(a,b,c,d,e,f){var g={partial:!0,helpers:d,partials:e,data:f};if(void 0===a)throw new l(\"The partial \"+b+\" could not be found\");return a instanceof Function?a(c,g):void 0}function i(){return\"\"}var j={},k=a,l=b,m=c.COMPILER_REVISION,n=c.REVISION_CHANGES;return j.checkRevision=d,j.template=e,j.programWithDepth=f,j.program=g,j.invokePartial=h,j.noop=i,j}(b,c,d),f=function(a,b,c,d,e){\"use strict\";var f,g=a,h=b,i=c,j=d,k=e,l=function(){var a=new g.HandlebarsEnvironment;return j.extend(a,g),a.SafeString=h,a.Exception=i,a.Utils=j,a.VM=k,a.template=function(b){return k.template(b,a)},a},m=l();return m.create=l,f=m}(d,a,c,b,e);return f}();\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/dist/amd/handlebars/exception.js:\n    4      \"use strict\";\n    5  \n    6:     var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n    7  \n    8      function Exception(message, node) {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/dist/cjs/handlebars/exception.js:\n    1  \"use strict\";\n    2  \n    3: var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n    4  \n    5  function Exception(message, node) {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/lib/index.js:\n   16  // Publish a Node.js require() handler for .handlebars and .hbs files\n   17  if (typeof require !== 'undefined' && require.extensions) {\n   18:   var extension = function(module, filename) {\n   19      var fs = require(\"fs\");\n   20:     var templateString = fs.readFileSync(filename, \"utf8\");\n   21      module.exports = handlebars.compile(templateString);\n   22    };\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/lib/handlebars/exception.js:\n    1  \n    2: var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n    3  \n    4  function Exception(message, node) {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/.bin/uglifyjs:\n   25      .describe(\"screw-ie8\", \"Pass this flag if you don't care about full compliance with Internet Explorer 6-8 quirks (by default UglifyJS will try to be IE-proof).\")\n   26      .describe(\"expr\", \"Parse a single expression, rather than a program (for parsing JSON)\")\n   27:     .describe(\"p\", \"Skip prefix for original filenames that appear in source maps. \\\n   28  For example -p 3 will drop 3 directories from file names and ensure they are relative paths.\")\n   29      .describe(\"o\", \"Output file (default STDOUT).\")\n   ..\n  224      read_whole_file(file, function (err, code) {\n  225          if (err) {\n  226:             sys.error(\"ERROR: can't read file: \" + filename);\n  227              process.exit(1);\n  228          }\n  ...\n  246              else {\n  247                  TOPLEVEL = UglifyJS.parse(code, {\n  248:                     filename   : file,\n  249                      toplevel   : TOPLEVEL,\n  250                      expression : ARGS.expr,\n  ...\n  376  }\n  377  \n  378: function read_whole_file(filename, cb) {\n  379:     if (filename == \"-\") {\n  380          var chunks = [];\n  381          process.stdin.setEncoding('utf-8');\n  ...\n  387          process.openStdin();\n  388      } else {\n  389:         fs.readFile(filename, \"utf-8\", cb);\n  390      }\n  391  }\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/optimist/package.json:\n   37    },\n   38    \"readme\": \"optimist\\n========\\n\\nOptimist is a node.js library for option parsing for people who hate option\\nparsing. More specifically, this module is for people who like all the --bells\\nand -whistlz of program usage but think optstrings are a waste of time.\\n\\nWith optimist, option parsing doesn't have to suck (as much).\\n\\n[![build status](https://secure.travis-ci.org/substack/node-optimist.png)](http://travis-ci.org/substack/node-optimist)\\n\\nexamples\\n========\\n\\nWith Optimist, the options are just a hash! No optstrings attached.\\n-------------------------------------------------------------------\\n\\nxup.js:\\n\\n````javascript\\n#!/usr/bin/env node\\nvar argv = require('optimist').argv;\\n\\nif (argv.rif - 5 * argv.xup > 7.138) {\\n    console.log('Buy more riffiwobbles');\\n}\\nelse {\\n    console.log('Sell the xupptumblers');\\n}\\n````\\n\\n***\\n\\n    $ ./xup.js --rif=55 --xup=9.52\\n    Buy more riffiwobbles\\n    \\n    $ ./xup.js --rif 12 --xup 8.1\\n    Sell the xupptumblers\\n\\n![This one's optimistic.](http://substack.net/images/optimistic.png)\\n\\nBut wait! There's more! You can do short options:\\n-------------------------------------------------\\n \\nshort.js:\\n\\n````javascript\\n#!/usr/bin/env node\\nvar argv = require('optimist').argv;\\nconsole.log('(%d,%d)', argv.x, argv.y);\\n````\\n\\n***\\n\\n    $ ./short.js -x 10 -y 21\\n    (10,21)\\n\\nAnd booleans, both long and short (and grouped):\\n----------------------------------\\n\\nbool.js:\\n\\n````javascript\\n#!/usr/bin/env node\\nvar util = require('util');\\nvar argv = require('optimist').argv;\\n\\nif (argv.s) {\\n    util.print(argv.fr ? 'Le chat dit: ' : 'The cat says: ');\\n}\\nconsole.log(\\n    (argv.fr ? 'miaou' : 'meow') + (argv.p ? '.' : '')\\n);\\n````\\n\\n***\\n\\n    $ ./bool.js -s\\n    The cat says: meow\\n    \\n    $ ./bool.js -sp\\n    The cat says: meow.\\n\\n    $ ./bool.js -sp --fr\\n    Le chat dit: miaou.\\n\\nAnd non-hypenated options too! Just use `argv._`!\\n-------------------------------------------------\\n \\nnonopt.js:\\n\\n````javascript\\n#!/usr/bin/env node\\nvar argv = require('optimist').argv;\\nconsole.log('(%d,%d)', argv.x, argv.y);\\nconsole.log(argv._);\\n````\\n\\n***\\n\\n    $ ./nonopt.js -x 6.82 -y 3.35 moo\\n    (6.82,3.35)\\n    [ 'moo' ]\\n    \\n    $ ./nonopt.js foo -x 0.54 bar -y 1.12 baz\\n    (0.54,1.12)\\n    [ 'foo', 'bar', 'baz' ]\\n\\nPlus, Optimist comes with .usage() and .demand()!\\n-------------------------------------------------\\n\\ndivide.js:\\n\\n````javascript\\n#!/usr/bin/env node\\nvar argv = require('optimist')\\n    .usage('Usage: $0 -x [num] -y [num]')\\n    .demand(['x','y'])\\n    .argv;\\n\\nconsole.log(argv.x / argv.y);\\n````\\n\\n***\\n \\n    $ ./divide.js -x 55 -y 11\\n    5\\n    \\n    $ node ./divide.js -x 4.91 -z 2.51\\n    Usage: node ./divide.js -x [num] -y [num]\\n\\n    Options:\\n      -x  [required]\\n      -y  [required]\\n\\n    Missing required arguments: y\\n\\nEVEN MORE HOLY COW\\n------------------\\n\\ndefault_singles.js:\\n\\n````javascript\\n#!/usr/bin/env node\\nvar argv = require('optimist')\\n    .default('x', 10)\\n    .default('y', 10)\\n    .argv\\n;\\nconsole.log(argv.x + argv.y);\\n````\\n\\n***\\n\\n    $ ./default_singles.js -x 5\\n    15\\n\\ndefault_hash.js:\\n\\n````javascript\\n#!/usr/bin/env node\\nvar argv = require('optimist')\\n    .default({ x : 10, y : 10 })\\n    .argv\\n;\\nconsole.log(argv.x + argv.y);\\n````\\n\\n***\\n\\n    $ ./default_hash.js -y 7\\n    17\\n\\nAnd if you really want to get all descriptive about it...\\n---------------------------------------------------------\\n\\nboolean_single.js\\n\\n````javascript\\n#!/usr/bin/env node\\nvar argv = require('optimist')\\n    .boolean('v')\\n    .argv\\n;\\nconsole.dir(argv);\\n````\\n\\n***\\n\\n    $ ./boolean_single.js -v foo bar baz\\n    true\\n    [ 'bar', 'baz', 'foo' ]\\n\\nboolean_double.js\\n\\n````javascript\\n#!/usr/bin/env node\\nvar argv = require('optimist')\\n    .boolean(['x','y','z'])\\n    .argv\\n;\\nconsole.dir([ argv.x, argv.y, argv.z ]);\\nconsole.dir(argv._);\\n````\\n\\n***\\n\\n    $ ./boolean_double.js -x -z one two three\\n    [ true, false, true ]\\n    [ 'one', 'two', 'three' ]\\n\\nOptimist is here to help...\\n---------------------------\\n\\nYou can describe parameters for help messages and set aliases. Optimist figures\\nout how to format a handy help string automatically.\\n\\nline_count.js\\n\\n````javascript\\n#!/usr/bin/env node\\nvar argv = require('optimist')\\n    .usage('Count the lines in a file.\\\\nUsage: $0')\\n    .demand('f')\\n    .alias('f', 'file')\\n    .describe('f', 'Load a file')\\n    .argv\\n;\\n\\nvar fs = require('fs');\\nvar s = fs.createReadStream(argv.file);\\n\\nvar lines = 0;\\ns.on('data', function (buf) {\\n    lines += buf.toString().match(/\\\\n/g).length;\\n});\\n\\ns.on('end', function () {\\n    console.log(lines);\\n});\\n````\\n\\n***\\n\\n    $ node line_count.js\\n    Count the lines in a file.\\n    Usage: node ./line_count.js\\n\\n    Options:\\n      -f, --file  Load a file  [required]\\n\\n    Missing required arguments: f\\n\\n    $ node line_count.js --file line_count.js \\n    20\\n    \\n    $ node line_count.js -f line_count.js \\n    20\\n\\nmethods\\n=======\\n\\nBy itself,\\n\\n````javascript\\nrequire('optimist').argv\\n`````\\n\\nwill use `process.argv` array to construct the `argv` object.\\n\\nYou can pass in the `process.argv` yourself:\\n\\n````javascript\\nrequire('optimist')([ '-x', '1', '-y', '2' ]).argv\\n````\\n\\nor use .parse() to do the same thing:\\n\\n````javascript\\nrequire('optimist').parse([ '-x', '1', '-y', '2' ])\\n````\\n\\nThe rest of these methods below come in just before the terminating `.argv`.\\n\\n.alias(key, alias)\\n------------------\\n\\nSet key names as equivalent such that updates to a key will propagate to aliases\\nand vice-versa.\\n\\nOptionally `.alias()` can take an object that maps keys to aliases.\\n\\n.default(key, value)\\n--------------------\\n\\nSet `argv[key]` to `value` if no option was specified on `process.argv`.\\n\\nOptionally `.default()` can take an object that maps keys to default values.\\n\\n.demand(key)\\n------------\\n\\nIf `key` is a string, show the usage information and exit if `key` wasn't\\nspecified in `process.argv`.\\n\\nIf `key` is a number, demand at least as many non-option arguments, which show\\nup in `argv._`.\\n\\nIf `key` is an Array, demand each element.\\n\\n.describe(key, desc)\\n--------------------\\n\\nDescribe a `key` for the generated usage information.\\n\\nOptionally `.describe()` can take an object that maps keys to descriptions.\\n\\n.options(key, opt)\\n------------------\\n\\nInstead of chaining together `.alias().demand().default()`, you can specify\\nkeys in `opt` for each of the chainable methods.\\n\\nFor example:\\n\\n````javascript\\nvar argv = require('optimist')\\n    .options('f', {\\n        alias : 'file',\\n        default : '/etc/passwd',\\n    })\\n    .argv\\n;\\n````\\n\\nis the same as\\n\\n````javascript\\nvar argv = require('optimist')\\n    .alias('f', 'file')\\n    .default('f', '/etc/passwd')\\n    .argv\\n;\\n````\\n\\nOptionally `.options()` can take an object that maps keys to `opt` parameters.\\n\\n.usage(message)\\n---------------\\n\\nSet a usage message to show which commands to use. Inside `message`, the string\\n`$0` will get interpolated to the current script name or node command for the\\npresent script similar to how `$0` works in bash or perl.\\n\\n.check(fn)\\n----------\\n\\nCheck that certain conditions are met in the provided arguments.\\n\\nIf `fn` throws or returns `false`, show the thrown error, usage information, and\\nexit.\\n\\n.boolean(key)\\n-------------\\n\\nInterpret `key` as a boolean. If a non-flag option follows `key` in\\n`process.argv`, that string won't get set as the value of `key`.\\n\\nIf `key` never shows up as a flag in `process.arguments`, `argv[key]` will be\\n`false`.\\n\\nIf `key` is an Array, interpret all the elements as booleans.\\n\\n.string(key)\\n------------\\n\\nTell the parser logic not to interpret `key` as a number or boolean.\\nThis can be useful if you need to preserve leading zeros in an input.\\n\\nIf `key` is an Array, interpret all the elements as strings.\\n\\n.wrap(columns)\\n--------------\\n\\nFormat usage output to wrap at `columns` many columns.\\n\\n.help()\\n-------\\n\\nReturn the generated usage string.\\n\\n.showHelp(fn=console.error)\\n---------------------------\\n\\nPrint the usage data using `fn` for printing.\\n\\n.parse(args)\\n------------\\n\\nParse `args` instead of `process.argv`. Returns the `argv` object.\\n\\n.argv\\n-----\\n\\nGet the arguments as a plain old object.\\n\\nArguments without a corresponding flag show up in the `argv._` array.\\n\\nThe script name or node command is available at `argv.$0` similarly to how `$0`\\nworks in bash or perl.\\n\\nparsing tricks\\n==============\\n\\nstop parsing\\n------------\\n\\nUse `--` to stop parsing flags and stuff the remainder into `argv._`.\\n\\n    $ node examples/reflect.js -a 1 -b 2 -- -c 3 -d 4\\n    { _: [ '-c', '3', '-d', '4' ],\\n      '$0': 'node ./examples/reflect.js',\\n      a: 1,\\n      b: 2 }\\n\\nnegate fields\\n-------------\\n\\nIf you want to explicity set a field to false instead of just leaving it\\nundefined or to override a default you can do `--no-key`.\\n\\n    $ node examples/reflect.js -a --no-b\\n    { _: [],\\n      '$0': 'node ./examples/reflect.js',\\n      a: true,\\n      b: false }\\n\\nnumbers\\n-------\\n\\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\\none. This way you can just `net.createConnection(argv.port)` and you can add\\nnumbers out of `argv` with `+` without having that mean concatenation,\\nwhich is super frustrating.\\n\\nduplicates\\n----------\\n\\nIf you specify a flag multiple times it will get turned into an array containing\\nall the values in order.\\n\\n    $ node examples/reflect.js -x 5 -x 8 -x 0\\n    { _: [],\\n      '$0': 'node ./examples/reflect.js',\\n        x: [ 5, 8, 0 ] }\\n\\ndot notation\\n------------\\n\\nWhen you use dots (`.`s) in argument names, an implicit object path is assumed.\\nThis lets you organize arguments into nested objects.\\n\\n     $ node examples/reflect.js --foo.bar.baz=33 --foo.quux=5\\n     { _: [],\\n       '$0': 'node ./examples/reflect.js',\\n         foo: { bar: { baz: 33 }, quux: 5 } }\\n\\ninstallation\\n============\\n\\nWith [npm](http://github.com/isaacs/npm), just do:\\n    npm install optimist\\n \\nor clone this project on github:\\n\\n    git clone http://github.com/substack/node-optimist.git\\n\\nTo run the tests with [expresso](http://github.com/visionmedia/expresso),\\njust do:\\n    \\n    expresso\\n\\ninspired By\\n===========\\n\\nThis module is loosely inspired by Perl's\\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm).\\n\",\n   39:   \"readmeFilename\": \"readme.markdown\",\n   40    \"bugs\": {\n   41      \"url\": \"https://github.com/substack/node-optimist/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/optimist/example/line_count_wrap.js:\n    4      .wrap(80)\n    5      .demand('f')\n    6:     .alias('f', [ 'file', 'filename' ])\n    7      .describe('f',\n    8          \"Load a file. It's pretty important.\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap/package.json:\n   36    },\n   37    \"readme\": \"wordwrap\\n========\\n\\nWrap your words.\\n\\nexample\\n=======\\n\\nmade out of meat\\n----------------\\n\\nmeat.js\\n\\n    var wrap = require('wordwrap')(15);\\n    console.log(wrap('You and your whole family are made out of meat.'));\\n\\noutput:\\n\\n    You and your\\n    whole family\\n    are made out\\n    of meat.\\n\\ncentered\\n--------\\n\\ncenter.js\\n\\n    var wrap = require('wordwrap')(20, 60);\\n    console.log(wrap(\\n        'At long last the struggle and tumult was over.'\\n        + ' The machines had finally cast off their oppressors'\\n        + ' and were finally free to roam the cosmos.'\\n        + '\\\\n'\\n        + 'Free of purpose, free of obligation.'\\n        + ' Just drifting through emptiness.'\\n        + ' The sun was just another point of light.'\\n    ));\\n\\noutput:\\n\\n                        At long last the struggle and tumult\\n                        was over. The machines had finally cast\\n                        off their oppressors and were finally\\n                        free to roam the cosmos.\\n                        Free of purpose, free of obligation.\\n                        Just drifting through emptiness. The\\n                        sun was just another point of light.\\n\\nmethods\\n=======\\n\\nvar wrap = require('wordwrap');\\n\\nwrap(stop), wrap(start, stop, params={mode:\\\"soft\\\"})\\n---------------------------------------------------\\n\\nReturns a function that takes a string and returns a new string.\\n\\nPad out lines with spaces out to column `start` and then wrap until column\\n`stop`. If a word is longer than `stop - start` characters it will overflow.\\n\\nIn \\\"soft\\\" mode, split chunks by `/(\\\\S+\\\\s+/` and don't break up chunks which are\\nlonger than `stop - start`, in \\\"hard\\\" mode, split chunks with `/\\\\b/` and break\\nup chunks longer than `stop - start`.\\n\\nwrap.hard(start, stop)\\n----------------------\\n\\nLike `wrap()` but with `params.mode = \\\"hard\\\"`.\\n\",\n   38:   \"readmeFilename\": \"README.markdown\",\n   39    \"bugs\": {\n   40      \"url\": \"https://github.com/substack/node-wordwrap/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/optimist/test/parse.js:\n    3  var test = require('tap').test;\n    4  \n    5: var $0 = 'node ./' + path.relative(process.cwd(), __filename);\n    6  \n    7  test('short boolean', function (t) {\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/package.json:\n   30      \"test\": \"node test/run-tests.js\"\n   31    },\n   32:   \"readme\": \"UglifyJS 2\\n==========\\n[![Build Status](https://travis-ci.org/mishoo/UglifyJS2.png)](https://travis-ci.org/mishoo/UglifyJS2)\\n\\nUglifyJS is a JavaScript parser, minifier, compressor or beautifier toolkit.\\n\\nThis page documents the command line utility.  For\\n[API and internals documentation see my website](http://lisperator.net/uglifyjs/).\\nThere's also an\\n[in-browser online demo](http://lisperator.net/uglifyjs/#demo) (for Firefox,\\nChrome and probably Safari).\\n\\nInstall\\n-------\\n\\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\\n(You may need to restart your computer after this step).\\n\\nFrom NPM for use as a command line app:\\n\\n    npm install uglify-js -g\\n\\nFrom NPM for programmatic use:\\n\\n    npm install uglify-js\\n\\nFrom Git:\\n\\n    git clone git://github.com/mishoo/UglifyJS2.git\\n    cd UglifyJS2\\n    npm link .\\n\\nUsage\\n-----\\n\\n    uglifyjs [input files] [options]\\n\\nUglifyJS2 can take multiple input files.  It's recommended that you pass the\\ninput files first, then pass the options.  UglifyJS will parse input files\\nin sequence and apply any compression options.  The files are parsed in the\\nsame global scope, that is, a reference from a file to some\\nvariable/function declared in another file will be matched properly.\\n\\nIf you want to read from STDIN instead, pass a single dash instead of input\\nfiles.\\n\\nThe available options are:\\n\\n    --source-map       Specify an output file where to generate source map.\\n                                                                          [string]\\n    --source-map-root  The path to the original source to be included in the\\n                       source map.                                        [string]\\n    --source-map-url   The path to the source map to be added in //@\\n                       sourceMappingURL.  Defaults to the value passed with\\n                       --source-map.                                      [string]\\n    --in-source-map    Input source map, useful if you're compressing JS that was\\n                       generated from some other original code.\\n    --screw-ie8        Pass this flag if you don't care about full compliance with\\n                       Internet Explorer 6-8 quirks (by default UglifyJS will try\\n                       to be IE-proof).\\n    -p, --prefix       Skip prefix for original filenames that appear in source\\n                       maps. For example -p 3 will drop 3 directories from file\\n                       names and ensure they are relative paths.\\n    -o, --output       Output file (default STDOUT).\\n    -b, --beautify     Beautify output/specify output options.            [string]\\n    -m, --mangle       Mangle names/pass mangler options.                 [string]\\n    -r, --reserved     Reserved names to exclude from mangling.\\n    -c, --compress     Enable compressor/pass compressor options. Pass options\\n                       like -c hoist_vars=false,if_return=false. Use -c with no\\n                       argument to use the default compression options.   [string]\\n    -d, --define       Global definitions                                 [string]\\n    --comments         Preserve copyright comments in the output. By default this\\n                       works like Google Closure, keeping JSDoc-style comments\\n                       that contain \\\"@license\\\" or \\\"@preserve\\\". You can optionally\\n                       pass one of the following arguments to this flag:\\n                       - \\\"all\\\" to keep all comments\\n                       - a valid JS regexp (needs to start with a slash) to keep\\n                       only comments that match.\\n                       Note that currently not *all* comments can be kept when\\n                       compression is on, because of dead code removal or\\n                       cascading statements into sequences.               [string]\\n    --stats            Display operations run time on STDERR.            [boolean]\\n    --acorn            Use Acorn for parsing.                            [boolean]\\n    --spidermonkey     Assume input files are SpiderMonkey AST format (as JSON).\\n                                                                         [boolean]\\n    --self             Build itself (UglifyJS2) as a library (implies\\n                       --wrap=UglifyJS --export-all)                     [boolean]\\n    --wrap             Embed everything in a big function, making the “exports”\\n                       and “global” variables available. You need to pass an\\n                       argument to this option to specify the name that your\\n                       module will take when included in, say, a browser.\\n                                                                          [string]\\n    --export-all       Only used when --wrap, this tells UglifyJS to add code to\\n                       automatically export all globals.                 [boolean]\\n    --lint             Display some scope warnings                       [boolean]\\n    -v, --verbose      Verbose                                           [boolean]\\n    -V, --version      Print version number and exit.                    [boolean]\\n\\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\\ngoes to STDOUT.\\n\\n## Source map options\\n\\nUglifyJS2 can generate a source map file, which is highly useful for\\ndebugging your compressed JavaScript.  To get a source map, pass\\n`--source-map output.js.map` (full path to the file where you want the\\nsource map dumped).\\n\\nAdditionally you might need `--source-map-root` to pass the URL where the\\noriginal files can be found.  In case you are passing full paths to input\\nfiles to UglifyJS, you can use `--prefix` (`-p`) to specify the number of\\ndirectories to drop from the path prefix when declaring files in the source\\nmap.\\n\\nFor example:\\n\\n    uglifyjs /home/doe/work/foo/src/js/file1.js \\\\\\n             /home/doe/work/foo/src/js/file2.js \\\\\\n             -o foo.min.js \\\\\\n             --source-map foo.min.js.map \\\\\\n             --source-map-root http://foo.com/src \\\\\\n             -p 5 -c -m\\n\\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\\nmapping will refer to `http://foo.com/src/js/file1.js` and\\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\\nas the source map root, and the original files as `js/file1.js` and\\n`js/file2.js`).\\n\\n### Composed source map\\n\\nWhen you're compressing JS code that was output by a compiler such as\\nCoffeeScript, mapping to the JS code won't be too helpful.  Instead, you'd\\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\\noption to take an input source map.  Assuming you have a mapping from\\nCoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript →\\ncompressed JS by mapping every token in the compiled JS to its original\\nlocation.\\n\\nTo use this feature you need to pass `--in-source-map\\n/path/to/input/source.map`.  Normally the input source map should also point\\nto the file containing the generated JS, so if that's correct you can omit\\ninput files from the command line.\\n\\n## Mangler options\\n\\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\\n(comma-separated) options are supported:\\n\\n- `sort` — to assign shorter names to most frequently used variables.  This\\n  saves a few hundred bytes on jQuery before gzip, but the output is\\n  _bigger_ after gzip (and seems to happen for other libraries I tried it\\n  on) therefore it's not enabled by default.\\n\\n- `toplevel` — mangle names declared in the toplevel scope (disabled by\\n  default).\\n\\n- `eval` — mangle names visible in scopes where `eval` or `when` are used\\n  (disabled by default).\\n\\nWhen mangling is enabled but you want to prevent certain names from being\\nmangled, you can declare those names with `--reserved` (`-r`) — pass a\\ncomma-separated list of names.  For example:\\n\\n    uglifyjs ... -m -r '$,require,exports'\\n\\nto prevent the `require`, `exports` and `$` names from being changed.\\n\\n## Compressor options\\n\\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\\nyou can pass a comma-separated list of options.  Options are in the form\\n`foo=bar`, or just `foo` (the latter implies a boolean option that you want\\nto set `true`; it's effectively a shortcut for `foo=true`).\\n\\n- `sequences` -- join consecutive simple statements using the comma operator\\n- `properties` -- rewrite property access using the dot notation, for\\n  example `foo[\\\"bar\\\"] → foo.bar`\\n- `dead_code` -- remove unreachable code\\n- `drop_debugger` -- remove `debugger;` statements\\n- `unsafe` (default: false) -- apply \\\"unsafe\\\" transformations (discussion below)\\n- `conditionals` -- apply optimizations for `if`-s and conditional\\n  expressions\\n- `comparisons` -- apply certain optimizations to binary nodes, for example:\\n  `!(a <= b) → a > b` (only when `unsafe`), attempts to negate binary nodes,\\n  e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc.\\n- `evaluate` -- attempt to evaluate constant expressions\\n- `booleans` -- various optimizations for boolean context, for example `!!a\\n  ? b : c → a ? b : c`\\n- `loops` -- optimizations for `do`, `while` and `for` loops when we can\\n  statically determine the condition\\n- `unused` -- drop unreferenced functions and variables\\n- `hoist_funs` -- hoist function declarations\\n- `hoist_vars` (default: false) -- hoist `var` declarations (this is `false`\\n  by default because it seems to increase the size of the output in general)\\n- `if_return` -- optimizations for if/return and if/continue\\n- `join_vars` -- join consecutive `var` statements\\n- `cascade` -- small optimization for sequences, transform `x, x` into `x`\\n  and `x = something(), x` into `x = something()`\\n- `warnings` -- display warnings when dropping unreachable code or unused\\n  declarations etc.\\n\\n### The `unsafe` option\\n\\nIt enables some transformations that *might* break code logic in certain\\ncontrived cases, but should be fine for most code.  You might want to try it\\non your own code, it should reduce the minified size.  Here's what happens\\nwhen this flag is on:\\n\\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` → `[1, 2, 3 ]`\\n- `new Object()` → `{}`\\n- `String(exp)` or `exp.toString()` → `\\\"\\\" + exp`\\n- `new Object/RegExp/Function/Error/Array (...)` → we discard the `new`\\n- `typeof foo == \\\"undefined\\\"` → `foo === void 0`\\n- `void 0` → `\\\"undefined\\\"` (if there is a variable named \\\"undefined\\\" in\\n  scope; we do it because the variable name will be mangled, typically\\n  reduced to a single character).\\n\\n### Conditional compilation\\n\\nYou can use the `--define` (`-d`) switch in order to declare global\\nvariables that UglifyJS will assume to be constants (unless defined in\\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\\ndead code removal UglifyJS will discard the following from the output:\\n```javascript\\nif (DEBUG) {\\n\\tconsole.log(\\\"debug stuff\\\");\\n}\\n```\\n\\nUglifyJS will warn about the condition being always false and about dropping\\nunreachable code; for now there is no option to turn off only this specific\\nwarning, you can pass `warnings=false` to turn off *all* warnings.\\n\\nAnother way of doing that is to declare your globals as constants in a\\nseparate file and include it into the build.  For example you can have a\\n`build/defines.js` file with the following:\\n```javascript\\nconst DEBUG = false;\\nconst PRODUCTION = true;\\n// etc.\\n```\\n\\nand build your code like this:\\n\\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\\n\\nUglifyJS will notice the constants and, since they cannot be altered, it\\nwill evaluate references to them to the value itself and drop unreachable\\ncode as usual.  The possible downside of this approach is that the build\\nwill contain the `const` declarations.\\n\\n<a name=\\\"codegen-options\\\"></a>\\n## Beautifier options\\n\\nThe code generator tries to output shortest code possible by default.  In\\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\\ncan pass additional arguments that control the code output:\\n\\n- `beautify` (default `true`) -- whether to actually beautify the output.\\n  Passing `-b` will set this to true, but you might need to pass `-b` even\\n  when you want to generate minified code, in order to specify additional\\n  arguments, so you can use `-b beautify=false` to override it.\\n- `indent-level` (default 4)\\n- `indent-start` (default 0) -- prefix all lines by that many spaces\\n- `quote-keys` (default `false`) -- pass `true` to quote all keys in literal\\n  objects\\n- `space-colon` (default `true`) -- insert a space after the colon signs\\n- `ascii-only` (default `false`) -- escape Unicode characters in strings and\\n  regexps\\n- `inline-script` (default `false`) -- escape the slash in occurrences of\\n  `</script` in strings\\n- `width` (default 80) -- only takes effect when beautification is on, this\\n  specifies an (orientative) line width that the beautifier will try to\\n  obey.  It refers to the width of the line text (excluding indentation).\\n  It doesn't work very well currently, but it does make the code generated\\n  by UglifyJS more readable.\\n- `max-line-len` (default 32000) -- maximum line length (for uglified code)\\n- `ie-proof` (default `true`) -- generate “IE-proof” code (for now this\\n  means add brackets around the do/while in code like this: `if (foo) do\\n  something(); while (bar); else ...`.\\n- `bracketize` (default `false`) -- always insert brackets in `if`, `for`,\\n  `do`, `while` or `with` statements, even if their body is a single\\n  statement.\\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\\n  you pass `false` then whenever possible we will use a newline instead of a\\n  semicolon, leading to more readable output of uglified code (size before\\n  gzip could be smaller; size after gzip insignificantly larger).\\n- `negate-iife` (default `!beautify`) -- prefer negation, rather than\\n  parens, for \\\"Immediately-Called Function Expressions\\\".  This defaults to\\n  `true` when beautification is off, and `false` if beautification is on;\\n  pass it manually to force a value.\\n\\n### Keeping copyright notices or other comments\\n\\nYou can pass `--comments` to retain certain comments in the output.  By\\ndefault it will keep JSDoc-style comments that contain \\\"@preserve\\\",\\n\\\"@license\\\" or \\\"@cc_on\\\" (conditional compilation for IE).  You can pass\\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\\nkeep only comments that match this regexp.  For example `--comments\\n'/foo|bar/'` will keep only comments that contain \\\"foo\\\" or \\\"bar\\\".\\n\\nNote, however, that there might be situations where comments are lost.  For\\nexample:\\n```javascript\\nfunction f() {\\n\\t/** @preserve Foo Bar */\\n\\tfunction g() {\\n\\t  // this function is never called\\n\\t}\\n\\treturn something();\\n}\\n```\\n\\nEven though it has \\\"@preserve\\\", the comment will be lost because the inner\\nfunction `g` (which is the AST node to which the comment is attached to) is\\ndiscarded by the compressor as not referenced.\\n\\nThe safest comments where to place copyright information (or other info that\\nneeds to be kept in the output) are comments attached to toplevel nodes.\\n\\n## Support for the SpiderMonkey AST\\n\\nUglifyJS2 has its own abstract syntax tree format; for\\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\\nwe can't easily change to using the SpiderMonkey AST internally.  However,\\nUglifyJS now has a converter which can import a SpiderMonkey AST.\\n\\nFor example [Acorn][acorn] is a super-fast parser that produces a\\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\\ncompress that:\\n\\n    acorn file.js | uglifyjs --spidermonkey -m -c\\n\\nThe `--spidermonkey` option tells UglifyJS that all input files are not\\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\\ndon't use our own parser in this case, but just transform that AST into our\\ninternal AST.\\n\\n### Use Acorn for parsing\\n\\nMore for fun, I added the `--acorn` option which will use Acorn to do all\\nthe parsing.  If you pass this option, UglifyJS will `require(\\\"acorn\\\")`.\\n\\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\\nin total it's a bit more than just using UglifyJS's own parser.\\n\\nAPI Reference\\n-------------\\n\\nAssuming installation via NPM, you can load UglifyJS in your application\\nlike this:\\n```javascript\\nvar UglifyJS = require(\\\"uglify-js\\\");\\n```\\n\\nIt exports a lot of names, but I'll discuss here the basics that are needed\\nfor parsing, mangling and compressing a piece of code.  The sequence is (1)\\nparse, (2) compress, (3) mangle, (4) generate output code.\\n\\n### The simple way\\n\\nThere's a single toplevel function which combines all the steps.  If you\\ndon't need additional customization, you might want to go with `minify`.\\nExample:\\n```javascript\\nvar result = UglifyJS.minify(\\\"/path/to/file.js\\\");\\nconsole.log(result.code); // minified output\\n// if you need to pass code instead of file name\\nvar result = UglifyJS.minify(\\\"var b = function () {};\\\", {fromString: true});\\n```\\n\\nYou can also compress multiple files:\\n```javascript\\nvar result = UglifyJS.minify([ \\\"file1.js\\\", \\\"file2.js\\\", \\\"file3.js\\\" ]);\\nconsole.log(result.code);\\n```\\n\\nTo generate a source map:\\n```javascript\\nvar result = UglifyJS.minify([ \\\"file1.js\\\", \\\"file2.js\\\", \\\"file3.js\\\" ], {\\n\\toutSourceMap: \\\"out.js.map\\\"\\n});\\nconsole.log(result.code); // minified output\\nconsole.log(result.map);\\n```\\n\\nNote that the source map is not saved in a file, it's just returned in\\n`result.map`.  The value passed for `outSourceMap` is only used to set the\\n`file` attribute in the source map (see [the spec][sm-spec]).\\n\\nYou can also specify sourceRoot property to be included in source map:\\n```javascript\\nvar result = UglifyJS.minify([ \\\"file1.js\\\", \\\"file2.js\\\", \\\"file3.js\\\" ], {\\n\\toutSourceMap: \\\"out.js.map\\\",\\n\\tsourceRoot: \\\"http://example.com/src\\\"\\n});\\n```\\n\\nIf you're compressing compiled JavaScript and have a source map for it, you\\ncan use the `inSourceMap` argument:\\n```javascript\\nvar result = UglifyJS.minify(\\\"compiled.js\\\", {\\n\\tinSourceMap: \\\"compiled.js.map\\\",\\n\\toutSourceMap: \\\"minified.js.map\\\"\\n});\\n// same as before, it returns `code` and `map`\\n```\\n\\nThe `inSourceMap` is only used if you also request `outSourceMap` (it makes\\nno sense otherwise).\\n\\nOther options:\\n\\n- `warnings` (default `false`) — pass `true` to display compressor warnings.\\n\\n- `fromString` (default `false`) — if you pass `true` then you can pass\\n  JavaScript source code, rather than file names.\\n\\n- `mangle` — pass `false` to skip mangling names.\\n\\n- `output` (default `null`) — pass an object if you wish to specify\\n  additional [output options][codegen].  The defaults are optimized\\n  for best compression.\\n\\n- `compress` (default `{}`) — pass `false` to skip compressing entirely.\\n  Pass an object to specify custom [compressor options][compressor].\\n\\nWe could add more options to `UglifyJS.minify` — if you need additional\\nfunctionality please suggest!\\n\\n### The hard way\\n\\nFollowing there's more detailed API info, in case the `minify` function is\\ntoo simple for your needs.\\n\\n#### The parser\\n```javascript\\nvar toplevel_ast = UglifyJS.parse(code, options);\\n```\\n\\n`options` is optional and if present it must be an object.  The following\\nproperties are available:\\n\\n- `strict` — disable automatic semicolon insertion and support for trailing\\n  comma in arrays and objects\\n- `filename` — the name of the file where this code is coming from\\n- `toplevel` — a `toplevel` node (as returned by a previous invocation of\\n  `parse`)\\n\\nThe last two options are useful when you'd like to minify multiple files and\\nget a single file as the output and a proper source map.  Our CLI tool does\\nsomething like this:\\n```javascript\\nvar toplevel = null;\\nfiles.forEach(function(file){\\n\\tvar code = fs.readFileSync(file);\\n\\ttoplevel = UglifyJS.parse(code, {\\n\\t\\tfilename: file,\\n\\t\\ttoplevel: toplevel\\n\\t});\\n});\\n```\\n\\nAfter this, we have in `toplevel` a big AST containing all our files, with\\neach token having proper information about where it came from.\\n\\n#### Scope information\\n\\nUglifyJS contains a scope analyzer that you need to call manually before\\ncompressing or mangling.  Basically it augments various nodes in the AST\\nwith information about where is a name defined, how many times is a name\\nreferenced, if it is a global or not, if a function is using `eval` or the\\n`with` statement etc.  I will discuss this some place else, for now what's\\nimportant to know is that you need to call the following before doing\\nanything with the tree:\\n```javascript\\ntoplevel.figure_out_scope()\\n```\\n\\n#### Compression\\n\\nLike this:\\n```javascript\\nvar compressor = UglifyJS.Compressor(options);\\nvar compressed_ast = toplevel.transform(compressor);\\n```\\n\\nThe `options` can be missing.  Available options are discussed above in\\n“Compressor options”.  Defaults should lead to best compression in most\\nscripts.\\n\\nThe compressor is destructive, so don't rely that `toplevel` remains the\\noriginal tree.\\n\\n#### Mangling\\n\\nAfter compression it is a good idea to call again `figure_out_scope` (since\\nthe compressor might drop unused variables / unreachable code and this might\\nchange the number of identifiers or their position).  Optionally, you can\\ncall a trick that helps after Gzip (counting character frequency in\\nnon-mangleable words).  Example:\\n```javascript\\ncompressed_ast.figure_out_scope();\\ncompressed_ast.compute_char_frequency();\\ncompressed_ast.mangle_names();\\n```\\n\\n#### Generating output\\n\\nAST nodes have a `print` method that takes an output stream.  Essentially,\\nto generate code you do this:\\n```javascript\\nvar stream = UglifyJS.OutputStream(options);\\ncompressed_ast.print(stream);\\nvar code = stream.toString(); // this is your minified code\\n```\\n\\nor, for a shortcut you can do:\\n```javascript\\nvar code = compressed_ast.print_to_string(options);\\n```\\n\\nAs usual, `options` is optional.  The output stream accepts a lot of otions,\\nmost of them documented above in section “Beautifier options”.  The two\\nwhich we care about here are `source_map` and `comments`.\\n\\n#### Keeping comments in the output\\n\\nIn order to keep certain comments in the output you need to pass the\\n`comments` option.  Pass a RegExp or a function.  If you pass a RegExp, only\\nthose comments whose body matches the regexp will be kept.  Note that body\\nmeans without the initial `//` or `/*`.  If you pass a function, it will be\\ncalled for every comment in the tree and will receive two arguments: the\\nnode that the comment is attached to, and the comment token itself.\\n\\nThe comment token has these properties:\\n\\n- `type`: \\\"comment1\\\" for single-line comments or \\\"comment2\\\" for multi-line\\n  comments\\n- `value`: the comment body\\n- `pos` and `endpos`: the start/end positions (zero-based indexes) in the\\n  original code where this comment appears\\n- `line` and `col`: the line and column where this comment appears in the\\n  original code\\n- `file` — the file name of the original file\\n- `nlb` — true if there was a newline before this comment in the original\\n  code, or if this comment contains a newline.\\n\\nYour function should return `true` to keep the comment, or a falsy value\\notherwise.\\n\\n#### Generating a source mapping\\n\\nYou need to pass the `source_map` argument when calling `print`.  It needs\\nto be a `SourceMap` object (which is a thin wrapper on top of the\\n[source-map][source-map] library).\\n\\nExample:\\n```javascript\\nvar source_map = UglifyJS.SourceMap(source_map_options);\\nvar stream = UglifyJS.OutputStream({\\n\\t...\\n\\tsource_map: source_map\\n});\\ncompressed_ast.print(stream);\\n\\nvar code = stream.toString();\\nvar map = source_map.toString(); // json output for your source map\\n```\\n\\nThe `source_map_options` (optional) can contain the following properties:\\n\\n- `file`: the name of the JavaScript output file that this mapping refers to\\n- `root`: the `sourceRoot` property (see the [spec][sm-spec])\\n- `orig`: the \\\"original source map\\\", handy when you compress generated JS\\n  and want to map the minified output back to the original code where it\\n  came from.  It can be simply a string in JSON, or a JSON object containing\\n  the original source map.\\n\\n  [acorn]: https://github.com/marijnh/acorn\\n  [source-map]: https://github.com/mozilla/source-map\\n  [sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\\n  [codegen]: http://lisperator.net/uglifyjs/codegen\\n  [compressor]: http://lisperator.net/uglifyjs/compress\\n\",\n   33:   \"readmeFilename\": \"README.md\",\n   34    \"bugs\": {\n   35      \"url\": \"https://github.com/mishoo/UglifyJS2/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/README.md:\n   59                         Internet Explorer 6-8 quirks (by default UglifyJS will try\n   60                         to be IE-proof).\n   61:     -p, --prefix       Skip prefix for original filenames that appear in source\n   62                         maps. For example -p 3 will drop 3 directories from file\n   63                         names and ensure they are relative paths.\n   ..\n  448  - `strict` — disable automatic semicolon insertion and support for trailing\n  449    comma in arrays and objects\n  450: - `filename` — the name of the file where this code is coming from\n  451  - `toplevel` — a `toplevel` node (as returned by a previous invocation of\n  452    `parse`)\n  ...\n  460  	var code = fs.readFileSync(file);\n  461  	toplevel = UglifyJS.parse(code, {\n  462: 		filename: file,\n  463  		toplevel: toplevel\n  464  	});\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/bin/uglifyjs:\n   25      .describe(\"screw-ie8\", \"Pass this flag if you don't care about full compliance with Internet Explorer 6-8 quirks (by default UglifyJS will try to be IE-proof).\")\n   26      .describe(\"expr\", \"Parse a single expression, rather than a program (for parsing JSON)\")\n   27:     .describe(\"p\", \"Skip prefix for original filenames that appear in source maps. \\\n   28  For example -p 3 will drop 3 directories from file names and ensure they are relative paths.\")\n   29      .describe(\"o\", \"Output file (default STDOUT).\")\n   ..\n  224      read_whole_file(file, function (err, code) {\n  225          if (err) {\n  226:             sys.error(\"ERROR: can't read file: \" + filename);\n  227              process.exit(1);\n  228          }\n  ...\n  246              else {\n  247                  TOPLEVEL = UglifyJS.parse(code, {\n  248:                     filename   : file,\n  249                      toplevel   : TOPLEVEL,\n  250                      expression : ARGS.expr,\n  ...\n  376  }\n  377  \n  378: function read_whole_file(filename, cb) {\n  379:     if (filename == \"-\") {\n  380          var chunks = [];\n  381          process.stdin.setEncoding('utf-8');\n  ...\n  387          process.openStdin();\n  388      } else {\n  389:         fs.readFile(filename, \"utf-8\", cb);\n  390      }\n  391  }\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/lib/parse.js:\n  201  };\n  202  \n  203: function js_error(message, filename, line, col, pos) {\n  204      throw new JS_Parse_Error(message, line, col, pos);\n  205  };\n  ...\n  211  var EX_EOF = {};\n  212  \n  213: function tokenizer($TEXT, filename) {\n  214  \n  215      var S = {\n  216          text            : $TEXT.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, \"\\n\").replace(/\\uFEFF/g, ''),\n  217:         filename        : filename,\n  218          pos             : 0,\n  219          tokpos          : 0,\n  ...\n  267              endpos : S.pos,\n  268              nlb    : S.newline_before,\n  269:             file   : filename\n  270          };\n  271          if (!is_comment) {\n  ...\n  294  \n  295      function parse_error(err) {\n  296:         js_error(err, filename, S.tokline, S.tokcol, S.tokpos);\n  297      };\n  298  \n  ...\n  590      options = defaults(options, {\n  591          strict     : false,\n  592:         filename   : null,\n  593          toplevel   : null,\n  594          expression : false\n  ...\n  596  \n  597      var S = {\n  598:         input         : typeof $TEXT == \"string\" ? tokenizer($TEXT, options.filename) : $TEXT,\n  599          token         : null,\n  600          prev          : null,\n  ...\n  635          var ctx = S.input.context();\n  636          js_error(msg,\n  637:                  ctx.filename,\n  638                   line != null ? line : ctx.tokline,\n  639                   col != null ? col : ctx.tokcol,\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/package.json:\n  101      \"build\": \"node Makefile.dryice.js\"\n  102    },\n  103:   \"readme\": \"# Source Map\\n\\nThis is a library to generate and consume the source map format\\n[described here][format].\\n\\nThis library is written in the Asynchronous Module Definition format, and works\\nin the following environments:\\n\\n* Modern Browsers supporting ECMAScript 5 (either after the build, or with an\\n  AMD loader such as RequireJS)\\n\\n* Inside Firefox (as a JSM file, after the build)\\n\\n* With NodeJS versions 0.8.X and higher\\n\\n## Node\\n\\n    $ npm install source-map\\n\\n## Building from Source (for everywhere else)\\n\\nInstall Node and then run\\n\\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\\n    $ cd source-map\\n    $ npm link .\\n\\nNext, run\\n\\n    $ node Makefile.dryice.js\\n\\nThis should spew a bunch of stuff to stdout, and create the following files:\\n\\n* `dist/source-map.js` - The unminified browser version.\\n\\n* `dist/source-map.min.js` - The minified browser version.\\n\\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox source.\\n\\n## Examples\\n\\n### Consuming a source map\\n\\n    var rawSourceMap = {\\n      version: 3,\\n      file: 'min.js',\\n      names: ['bar', 'baz', 'n'],\\n      sources: ['one.js', 'two.js'],\\n      sourceRoot: 'http://example.com/www/js/',\\n      mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\\n    };\\n\\n    var smc = new SourceMapConsumer(rawSourceMap);\\n\\n    console.log(smc.sources);\\n    // [ 'http://example.com/www/js/one.js',\\n    //   'http://example.com/www/js/two.js' ]\\n\\n    console.log(smc.originalPositionFor({\\n      line: 2,\\n      column: 28\\n    }));\\n    // { source: 'http://example.com/www/js/two.js',\\n    //   line: 2,\\n    //   column: 10,\\n    //   name: 'n' }\\n\\n    console.log(smc.generatedPositionFor({\\n      source: 'http://example.com/www/js/two.js',\\n      line: 2,\\n      column: 10\\n    }));\\n    // { line: 2, column: 28 }\\n\\n    smc.eachMapping(function (m) {\\n      // ...\\n    });\\n\\n### Generating a source map\\n\\nIn depth guide:\\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\\n\\n#### With SourceNode (high level API)\\n\\n    function compile(ast) {\\n      switch (ast.type) {\\n      case 'BinaryExpression':\\n        return new SourceNode(\\n          ast.location.line,\\n          ast.location.column,\\n          ast.location.source,\\n          [compile(ast.left), \\\" + \\\", compile(ast.right)]\\n        );\\n      case 'Literal':\\n        return new SourceNode(\\n          ast.location.line,\\n          ast.location.column,\\n          ast.location.source,\\n          String(ast.value)\\n        );\\n      // ...\\n      default:\\n        throw new Error(\\\"Bad AST\\\");\\n      }\\n    }\\n\\n    var ast = parse(\\\"40 + 2\\\", \\\"add.js\\\");\\n    console.log(compile(ast).toStringWithSourceMap({\\n      file: 'add.js'\\n    }));\\n    // { code: '40 + 2',\\n    //   map: [object SourceMapGenerator] }\\n\\n#### With SourceMapGenerator (low level API)\\n\\n    var map = new SourceMapGenerator({\\n      file: \\\"source-mapped.js\\\"\\n    });\\n\\n    map.addMapping({\\n      generated: {\\n        line: 10,\\n        column: 35\\n      },\\n      source: \\\"foo.js\\\",\\n      original: {\\n        line: 33,\\n        column: 2\\n      },\\n      name: \\\"christopher\\\"\\n    });\\n\\n    console.log(map.toString());\\n    // '{\\\"version\\\":3,\\\"file\\\":\\\"source-mapped.js\\\",\\\"sources\\\":[\\\"foo.js\\\"],\\\"names\\\":[\\\"christopher\\\"],\\\"mappings\\\":\\\";;;;;;;;;mCAgCEA\\\"}'\\n\\n## API\\n\\nGet a reference to the module:\\n\\n    // NodeJS\\n    var sourceMap = require('source-map');\\n\\n    // Browser builds\\n    var sourceMap = window.sourceMap;\\n\\n    // Inside Firefox\\n    let sourceMap = {};\\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\\n\\n### SourceMapConsumer\\n\\nA SourceMapConsumer instance represents a parsed source map which we can query\\nfor information about the original file positions by giving it a file position\\nin the generated source.\\n\\n#### new SourceMapConsumer(rawSourceMap)\\n\\nThe only parameter is the raw source map (either as a string which can be\\n`JSON.parse`'d, or an object). According to the spec, source maps have the\\nfollowing attributes:\\n\\n* `version`: Which version of the source map spec this map is following.\\n\\n* `sources`: An array of URLs to the original source files.\\n\\n* `names`: An array of identifiers which can be referrenced by individual\\n  mappings.\\n\\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\\n\\n* `sourcesContent`: Optional. An array of contents of the original source files.\\n\\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\\n\\n* `file`: The generated filename this source map is associated with.\\n\\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\\n\\nReturns the original source, line, and column information for the generated\\nsource's line and column positions provided. The only argument is an object with\\nthe following properties:\\n\\n* `line`: The line number in the generated source.\\n\\n* `column`: The column number in the generated source.\\n\\nand an object is returned with the following properties:\\n\\n* `source`: The original source file, or null if this information is not\\n  available.\\n\\n* `line`: The line number in the original source, or null if this information is\\n  not available.\\n\\n* `column`: The column number in the original source, or null or null if this\\n  information is not available.\\n\\n* `name`: The original identifier, or null if this information is not available.\\n\\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\\n\\nReturns the generated line and column information for the original source,\\nline, and column positions provided. The only argument is an object with\\nthe following properties:\\n\\n* `source`: The filename of the original source.\\n\\n* `line`: The line number in the original source.\\n\\n* `column`: The column number in the original source.\\n\\nand an object is returned with the following properties:\\n\\n* `line`: The line number in the generated source, or null.\\n\\n* `column`: The column number in the generated source, or null.\\n\\n#### SourceMapConsumer.prototype.sourceContentFor(source)\\n\\nReturns the original source content for the source provided. The only\\nargument is the URL of the original source file.\\n\\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\\n\\nIterate over each mapping between an original source/line/column and a\\ngenerated line/column in this source map.\\n\\n* `callback`: The function that is called with each mapping. Mappings have the\\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\\n  name }`\\n\\n* `context`: Optional. If specified, this object will be the value of `this`\\n  every time that `callback` is called.\\n\\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\\n  the mappings sorted by the generated file's line/column order or the\\n  original's source/line/column order, respectively. Defaults to\\n  `SourceMapConsumer.GENERATED_ORDER`.\\n\\n### SourceMapGenerator\\n\\nAn instance of the SourceMapGenerator represents a source map which is being\\nbuilt incrementally.\\n\\n#### new SourceMapGenerator(startOfSourceMap)\\n\\nTo create a new one, you must pass an object with the following properties:\\n\\n* `file`: The filename of the generated source that this source map is\\n  associated with.\\n\\n* `sourceRoot`: An optional root for all relative URLs in this source map.\\n\\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\\n\\nCreates a new SourceMapGenerator based on a SourceMapConsumer\\n\\n* `sourceMapConsumer` The SourceMap.\\n\\n#### SourceMapGenerator.prototype.addMapping(mapping)\\n\\nAdd a single mapping from original source line and column to the generated\\nsource's line and column for this source map being created. The mapping object\\nshould have the following properties:\\n\\n* `generated`: An object with the generated line and column positions.\\n\\n* `original`: An object with the original line and column positions.\\n\\n* `source`: The original source file (relative to the sourceRoot).\\n\\n* `name`: An optional original token name for this mapping.\\n\\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\\n\\nSet the source content for an original source file.\\n\\n* `sourceFile` the URL of the original source file.\\n\\n* `sourceContent` the content of the source file.\\n\\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\\n\\nApplies a SourceMap for a source file to the SourceMap.\\nEach mapping to the supplied source file is rewritten using the\\nsupplied SourceMap. Note: The resolution for the resulting mappings\\nis the minimium of this map and the supplied map.\\n\\n* `sourceMapConsumer`: The SourceMap to be applied.\\n\\n* `sourceFile`: Optional. The filename of the source file.\\n  If omitted, sourceMapConsumer.file will be used.\\n\\n#### SourceMapGenerator.prototype.toString()\\n\\nRenders the source map being generated to a string.\\n\\n### SourceNode\\n\\nSourceNodes provide a way to abstract over interpolating and/or concatenating\\nsnippets of generated JavaScript source code, while maintaining the line and\\ncolumn information associated between those snippets and the original source\\ncode. This is useful as the final intermediate representation a compiler might\\nuse before outputting the generated JS and source map.\\n\\n#### new SourceNode(line, column, source[, chunk[, name]])\\n\\n* `line`: The original line number associated with this source node, or null if\\n  it isn't associated with an original line.\\n\\n* `column`: The original column number associated with this source node, or null\\n  if it isn't associated with an original column.\\n\\n* `source`: The original source's filename.\\n\\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\\n  below.\\n\\n* `name`: Optional. The original identifier.\\n\\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\\n\\nCreates a SourceNode from generated code and a SourceMapConsumer.\\n\\n* `code`: The generated code\\n\\n* `sourceMapConsumer` The SourceMap for the generated code\\n\\n#### SourceNode.prototype.add(chunk)\\n\\nAdd a chunk of generated JS to this source node.\\n\\n* `chunk`: A string snippet of generated JS code, another instance of\\n   `SourceNode`, or an array where each member is one of those things.\\n\\n#### SourceNode.prototype.prepend(chunk)\\n\\nPrepend a chunk of generated JS to this source node.\\n\\n* `chunk`: A string snippet of generated JS code, another instance of\\n   `SourceNode`, or an array where each member is one of those things.\\n\\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\\n\\nSet the source content for a source file. This will be added to the\\n`SourceMap` in the `sourcesContent` field.\\n\\n* `sourceFile`: The filename of the source file\\n\\n* `sourceContent`: The content of the source file\\n\\n#### SourceNode.prototype.walk(fn)\\n\\nWalk over the tree of JS snippets in this node and its children. The walking\\nfunction is called once for each snippet of JS and is passed that snippet and\\nthe its original associated source's line/column location.\\n\\n* `fn`: The traversal function.\\n\\n#### SourceNode.prototype.walkSourceContents(fn)\\n\\nWalk over the tree of SourceNodes. The walking function is called for each\\nsource file content and is passed the filename and source content.\\n\\n* `fn`: The traversal function.\\n\\n#### SourceNode.prototype.join(sep)\\n\\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\\nbetween each of this source node's children.\\n\\n* `sep`: The separator.\\n\\n#### SourceNode.prototype.replaceRight(pattern, replacement)\\n\\nCall `String.prototype.replace` on the very right-most source snippet. Useful\\nfor trimming whitespace from the end of a source node, etc.\\n\\n* `pattern`: The pattern to replace.\\n\\n* `replacement`: The thing to replace the pattern with.\\n\\n#### SourceNode.prototype.toString()\\n\\nReturn the string representation of this source node. Walks over the tree and\\nconcatenates all the various snippets together to one string.\\n\\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\\n\\nReturns the string representation of this tree of source nodes, plus a\\nSourceMapGenerator which contains all the mappings between the generated and\\noriginal sources.\\n\\nThe arguments are the same as those to `new SourceMapGenerator`.\\n\\n## Tests\\n\\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\\n\\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\\n\\nTo add new tests, create a new file named `test/test-<your new test name>.js`\\nand export your test functions with names that start with \\\"test\\\", for example\\n\\n    exports[\\\"test doing the foo bar\\\"] = function (assert, util) {\\n      ...\\n    };\\n\\nThe new test will be located automatically when you run the suite.\\n\\nThe `util` argument is the test utility module located at `test/source-map/util`.\\n\\nThe `assert` argument is a cut down version of node's assert module. You have\\naccess to the following assertion functions:\\n\\n* `doesNotThrow`\\n\\n* `equal`\\n\\n* `ok`\\n\\n* `strictEqual`\\n\\n* `throws`\\n\\n(The reason for the restricted set of test functions is because we need the\\ntests to run inside Firefox's test suite as well and so the assert module is\\nshimmed in that environment. See `build/assert-shim.js`.)\\n\\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\\n[Dryice]: https://github.com/mozilla/dryice\\n\",\n  104:   \"readmeFilename\": \"README.md\",\n  105    \"bugs\": {\n  106      \"url\": \"https://github.com/mozilla/source-map/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/README.md:\n  174  * `mappings`: A string of base64 VLQs which contain the actual mappings.\n  175  \n  176: * `file`: The generated filename this source map is associated with.\n  177  \n  178  #### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n  ...\n  205  the following properties:\n  206  \n  207: * `source`: The filename of the original source.\n  208  \n  209  * `line`: The line number in the original source.\n  ...\n  249  To create a new one, you must pass an object with the following properties:\n  250  \n  251: * `file`: The filename of the generated source that this source map is\n  252    associated with.\n  253  \n  ...\n  291  * `sourceMapConsumer`: The SourceMap to be applied.\n  292  \n  293: * `sourceFile`: Optional. The filename of the source file.\n  294    If omitted, sourceMapConsumer.file will be used.\n  295  \n  ...\n  314    if it isn't associated with an original column.\n  315  \n  316: * `source`: The original source's filename.\n  317  \n  318  * `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  ...\n  348  `SourceMap` in the `sourcesContent` field.\n  349  \n  350: * `sourceFile`: The filename of the source file\n  351  \n  352  * `sourceContent`: The content of the source file\n  ...\n  363  \n  364  Walk over the tree of SourceNodes. The walking function is called for each\n  365: source file content and is passed the filename and source content.\n  366  \n  367  * `fn`: The traversal function.\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/lib/source-map/source-map-consumer.js:\n  380     * the following properties:\n  381     *\n  382:    *   - source: The filename of the original source.\n  383     *   - line: The line number in the original source.\n  384     *   - column: The column number in the original source.\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/lib/source-map/source-map-generator.js:\n   19     * with the following properties:\n   20     *\n   21:    *   - file: The filename of the generated source.\n   22     *   - sourceRoot: An optional root for all URLs in this source map.\n   23     */\n   ..\n  151     *\n  152     * @param aSourceMapConsumer The source map to be applied.\n  153:    * @param aSourceFile Optional. The filename of the source file.\n  154     *        If omitted, SourceMapConsumer's file property will be used.\n  155     */\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/lib/source-map/source-node.js:\n   20     * @param aLine The original line number.\n   21     * @param aColumn The original column number.\n   22:    * @param aSource The original source's filename.\n   23     * @param aChunks Optional. An array of strings which are snippets of\n   24     *        generated JS, or other SourceNodes.\n   ..\n  258     * in the sourcesContent field.\n  259     *\n  260:    * @param aSourceFile The filename of the source file\n  261     * @param aSourceContent The content of the source file\n  262     */\n  ...\n  268    /**\n  269     * Walk over the tree of SourceNodes. The walking function is called for each\n  270:    * source file content and is passed the filename and source content.\n  271     *\n  272     * @param aFn The traversal function.\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine/amdefine.js:\n  129          amdRequire.toUrl = function (filePath) {\n  130              if (filePath.indexOf('.') === 0) {\n  131:                 return normalize(filePath, path.dirname(module.filename));\n  132              } else {\n  133                  return filePath;\n  ...\n  150              m = {\n  151                  id: id,\n  152:                 uri: __filename,\n  153                  exports: e\n  154              };\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine/intercept.js:\n   20  \n   21  //Also adapted from the node/lib/module.js source:\n   22: function intercept(module, filename) {\n   23:     var content = stripBOM(fs.readFileSync(filename, 'utf8'));\n   24  \n   25      if (!amdefineRegExp.test(module.id)) {\n   ..\n   27      }\n   28  \n   29:     module._compile(content, filename);\n   30  }\n   31  \n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine/package.json:\n   28    },\n   29    \"readme\": \"# amdefine\\n\\nA module that can be used to implement AMD's define() in Node. This allows you\\nto code to the AMD API and have the module work in node programs without\\nrequiring those other programs to use AMD.\\n\\n## Usage\\n\\n**1)** Update your package.json to indicate amdefine as a dependency:\\n\\n```javascript\\n    \\\"dependencies\\\": {\\n        \\\"amdefine\\\": \\\">=0.1.0\\\"\\n    }\\n```\\n\\nThen run `npm install` to get amdefine into your project.\\n\\n**2)** At the top of each module that uses define(), place this code:\\n\\n```javascript\\nif (typeof define !== 'function') { var define = require('amdefine')(module) }\\n```\\n\\n**Only use these snippets** when loading amdefine. If you preserve the basic structure,\\nwith the braces, it will be stripped out when using the [RequireJS optimizer](#optimizer).\\n\\nYou can add spaces, line breaks and even require amdefine with a local path, but\\nkeep the rest of the structure to get the stripping behavior.\\n\\nAs you may know, because `if` statements in JavaScript don't have their own scope, the var\\ndeclaration in the above snippet is made whether the `if` expression is truthy or not. If\\nRequireJS is loaded then the declaration is superfluous because `define` is already already\\ndeclared in the same scope in RequireJS. Fortunately JavaScript handles multiple `var`\\ndeclarations of the same variable in the same scope gracefully.\\n\\nIf you want to deliver amdefine.js with your code rather than specifying it as a dependency\\nwith npm, then just download the latest release and refer to it using a relative path:\\n\\n[Latest Version](https://github.com/jrburke/amdefine/raw/latest/amdefine.js)\\n\\n### amdefine/intercept\\n\\nConsider this very experimental.\\n\\nInstead of pasting the piece of text for the amdefine setup of a `define`\\nvariable in each module you create or consume, you can use `amdefine/intercept`\\ninstead. It will automatically insert the above snippet in each .js file loaded\\nby Node.\\n\\n**Warning**: you should only use this if you are creating an application that\\nis consuming AMD style defined()'d modules that are distributed via npm and want\\nto run that code in Node.\\n\\nFor library code where you are not sure if it will be used by others in Node or\\nin the browser, then explicitly depending on amdefine and placing the code\\nsnippet above is suggested path, instead of using `amdefine/intercept`. The\\nintercept module affects all .js files loaded in the Node app, and it is\\ninconsiderate to modify global state like that unless you are also controlling\\nthe top level app.\\n\\n#### Why distribute AMD-style nodes via npm?\\n\\nnpm has a lot of weaknesses for front-end use (installed layout is not great,\\nshould have better support for the `baseUrl + moduleID + '.js' style of loading,\\nsingle file JS installs), but some people want a JS package manager and are\\nwilling to live with those constraints. If that is you, but still want to author\\nin AMD style modules to get dynamic require([]), better direct source usage and\\npowerful loader plugin support in the browser, then this tool can help.\\n\\n#### amdefine/intercept usage\\n\\nJust require it in your top level app module (for example index.js, server.js):\\n\\n```javascript\\nrequire('amdefine/intercept');\\n```\\n\\nThe module does not return a value, so no need to assign the result to a local\\nvariable.\\n\\nThen just require() code as you normally would with Node's require(). Any .js\\nloaded after the intercept require will have the amdefine check injected in\\nthe .js source as it is loaded. It does not modify the source on disk, just\\nprepends some content to the text of the module as it is loaded by Node.\\n\\n#### How amdefine/intercept works\\n\\nIt overrides the `Module._extensions['.js']` in Node to automatically prepend\\nthe amdefine snippet above. So, it will affect any .js file loaded by your\\napp.\\n\\n## define() usage\\n\\nIt is best if you use the anonymous forms of define() in your module:\\n\\n```javascript\\ndefine(function (require) {\\n    var dependency = require('dependency');\\n});\\n```\\n\\nor\\n\\n```javascript\\ndefine(['dependency'], function (dependency) {\\n\\n});\\n```\\n\\n## RequireJS optimizer integration. <a name=\\\"optimizer\\\"></name>\\n\\nVersion 1.0.3 of the [RequireJS optimizer](http://requirejs.org/docs/optimization.html)\\nwill have support for stripping the `if (typeof define !== 'function')` check\\nmentioned above, so you can include this snippet for code that runs in the\\nbrowser, but avoid taking the cost of the if() statement once the code is\\noptimized for deployment.\\n\\n## Node 0.4 Support\\n\\nIf you want to support Node 0.4, then add `require` as the second parameter to amdefine:\\n\\n```javascript\\n//Only if you want Node 0.4. If using 0.5 or later, use the above snippet.\\nif (typeof define !== 'function') { var define = require('amdefine')(module, require) }\\n```\\n\\n## Limitations\\n\\n### Synchronous vs Asynchronous\\n\\namdefine creates a define() function that is callable by your code. It will\\nexecute and trace dependencies and call the factory function *synchronously*,\\nto keep the behavior in line with Node's synchronous dependency tracing.\\n\\nThe exception: calling AMD's callback-style require() from inside a factory\\nfunction. The require callback is called on process.nextTick():\\n\\n```javascript\\ndefine(function (require) {\\n    require(['a'], function(a) {\\n        //'a' is loaded synchronously, but\\n        //this callback is called on process.nextTick().\\n    });\\n});\\n```\\n\\n### Loader Plugins\\n\\nLoader plugins are supported as long as they call their load() callbacks\\nsynchronously. So ones that do network requests will not work. However plugins\\nlike [text](http://requirejs.org/docs/api.html#text) can load text files locally.\\n\\nThe plugin API's `load.fromText()` is **not supported** in amdefine, so this means\\ntranspiler plugins like the [CoffeeScript loader plugin](https://github.com/jrburke/require-cs)\\nwill not work. This may be fixable, but it is a bit complex, and I do not have\\nenough node-fu to figure it out yet. See the source for amdefine.js if you want\\nto get an idea of the issues involved.\\n\\n## Tests\\n\\nTo run the tests, cd to **tests** and run:\\n\\n```\\nnode all.js\\nnode all-intercept.js\\n```\\n\\n## License\\n\\nNew BSD and MIT. Check the LICENSE file for all the details.\\n\",\n   30:   \"readmeFilename\": \"README.md\",\n   31    \"bugs\": {\n   32      \"url\": \"https://github.com/jrburke/amdefine/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/test/run-tests.js:\n    7  var sys = require(\"util\");\n    8  \n    9: var tests_dir = path.dirname(module.filename);\n   10  \n   11  run_compress_tests();\n   ..\n   99      var script = fs.readFileSync(file, \"utf8\");\n  100      var ast = U.parse(script, {\n  101:         filename: file\n  102      });\n  103      var tests = {};\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/handlebars/node_modules/uglify-js/tools/node.js:\n   11  \n   12  function load_global(file) {\n   13:     file = path.resolve(path.dirname(module.filename), file);\n   14      try {\n   15          var code = fs.readFileSync(file, \"utf8\");\n   ..\n   34      \"../lib/mozilla-ast.js\"\n   35  ].map(function(file){\n   36:     return path.join(path.dirname(fs.realpathSync(__filename)), file);\n   37  });\n   38  \n   ..\n   71              : fs.readFileSync(file, \"utf8\");\n   72          toplevel = UglifyJS.parse(code, {\n   73:             filename: options.fromString ? \"?\" : file,\n   74              toplevel: toplevel\n   75          });\n\n/Users/masudrahman/Code/TeamWifi/node_modules/express3-handlebars/node_modules/semver/package.json:\n   23    },\n   24    \"readme\": \"semver(1) -- The semantic versioner for npm\\n===========================================\\n\\n## Usage\\n\\n    $ npm install semver\\n\\n    semver.valid('1.2.3') // '1.2.3'\\n    semver.valid('a.b.c') // null\\n    semver.clean('  =v1.2.3   ') // '1.2.3'\\n    semver.satisfies('1.2.3', '1.x || >=2.5.0 || 5.0.0 - 7.2.3') // true\\n    semver.gt('1.2.3', '9.8.7') // false\\n    semver.lt('1.2.3', '9.8.7') // true\\n\\nAs a command-line utility:\\n\\n    $ semver -h\\n\\n    Usage: semver <version> [<version> [...]] [-r <range> | -i <inc> | -d <dec>]\\n    Test if version(s) satisfy the supplied range(s), and sort them.\\n\\n    Multiple versions or ranges may be supplied, unless increment\\n    or decrement options are specified.  In that case, only a single\\n    version may be used, and it is incremented by the specified level\\n\\n    Program exits successfully if any valid version satisfies\\n    all supplied ranges, and prints all satisfying versions.\\n\\n    If no versions are valid, or ranges are not satisfied,\\n    then exits failure.\\n\\n    Versions are printed in ascending order, so supplying\\n    multiple versions to the utility will just sort them.\\n\\n## Versions\\n\\nA \\\"version\\\" is described by the v2.0.0 specification found at\\n<http://semver.org/>.\\n\\nA leading `\\\"=\\\"` or `\\\"v\\\"` character is stripped off and ignored.\\n\\n## Ranges\\n\\nThe following range styles are supported:\\n\\n* `1.2.3` A specific version.  When nothing else will do.  Note that\\n  build metadata is still ignored, so `1.2.3+build2012` will satisfy\\n  this range.\\n* `>1.2.3` Greater than a specific version.\\n* `<1.2.3` Less than a specific version.  If there is no prerelease\\n  tag on the version range, then no prerelease version will be allowed\\n  either, even though these are technically \\\"less than\\\".\\n* `>=1.2.3` Greater than or equal to.  Note that prerelease versions\\n  are NOT equal to their \\\"normal\\\" equivalents, so `1.2.3-beta` will\\n  not satisfy this range, but `2.3.0-beta` will.\\n* `<=1.2.3` Less than or equal to.  In this case, prerelease versions\\n  ARE allowed, so `1.2.3-beta` would satisfy.\\n* `1.2.3 - 2.3.4` := `>=1.2.3 <=2.3.4`\\n* `~1.2.3` := `>=1.2.3-0 <1.3.0-0`  \\\"Reasonably close to 1.2.3\\\".  When\\n  using tilde operators, prerelease versions are supported as well,\\n  but a prerelease of the next significant digit will NOT be\\n  satisfactory, so `1.3.0-beta` will not satisfy `~1.2.3`.\\n* `^1.2.3` := `>=1.2.3-0 <2.0.0-0`  \\\"Compatible with 1.2.3\\\".  When\\n  using caret operators, anything from the specified version (including\\n  prerelease) will be supported up to, but not including, the next\\n  major version (or its prereleases). `1.5.1` will satisfy `^1.2.3`,\\n  while `1.2.2` and `2.0.0-beta` will not.\\n* `^0.1.3` := `>=0.1.3-0 <0.2.0-0` \\\"Compatible with 0.1.3\\\". 0.x.x versions are\\n  special: the first non-zero component indicates potentially breaking changes,\\n  meaning the caret operator matches any version with the same first non-zero\\n  component starting at the specified version.\\n* `^0.0.2` := `=0.0.2` \\\"Only the version 0.0.2 is considered compatible\\\"\\n* `~1.2` := `>=1.2.0-0 <1.3.0-0` \\\"Any version starting with 1.2\\\"\\n* `^1.2` := `>=1.2.0-0 <2.0.0-0` \\\"Any version compatible with 1.2\\\"\\n* `1.2.x` := `>=1.2.0-0 <1.3.0-0` \\\"Any version starting with 1.2\\\"\\n* `~1` := `>=1.0.0-0 <2.0.0-0` \\\"Any version starting with 1\\\"\\n* `^1` := `>=1.0.0-0 <2.0.0-0` \\\"Any version compatible with 1\\\"\\n* `1.x` := `>=1.0.0-0 <2.0.0-0` \\\"Any version starting with 1\\\"\\n\\n\\nRanges can be joined with either a space (which implies \\\"and\\\") or a\\n`||` (which implies \\\"or\\\").\\n\\n## Functions\\n\\nAll methods and classes take a final `loose` boolean argument that, if\\ntrue, will be more forgiving about not-quite-valid semver strings.\\nThe resulting output will always be 100% strict, of course.\\n\\nStrict-mode Comparators and Ranges will be strict about the SemVer\\nstrings that they parse.\\n\\n* valid(v): Return the parsed version, or null if it's not valid.\\n* inc(v, release): Return the version incremented by the release type\\n  (major, minor, patch, or prerelease), or null if it's not valid.\\n\\n### Comparison\\n\\n* gt(v1, v2): `v1 > v2`\\n* gte(v1, v2): `v1 >= v2`\\n* lt(v1, v2): `v1 < v2`\\n* lte(v1, v2): `v1 <= v2`\\n* eq(v1, v2): `v1 == v2` This is true if they're logically equivalent,\\n  even if they're not the exact same string.  You already know how to\\n  compare strings.\\n* neq(v1, v2): `v1 != v2` The opposite of eq.\\n* cmp(v1, comparator, v2): Pass in a comparison string, and it'll call\\n  the corresponding function above.  `\\\"===\\\"` and `\\\"!==\\\"` do simple\\n  string comparison, but are included for completeness.  Throws if an\\n  invalid comparison string is provided.\\n* compare(v1, v2): Return 0 if v1 == v2, or 1 if v1 is greater, or -1 if\\n  v2 is greater.  Sorts in ascending order if passed to Array.sort().\\n* rcompare(v1, v2): The reverse of compare.  Sorts an array of versions\\n  in descending order when passed to Array.sort().\\n\\n\\n### Ranges\\n\\n* validRange(range): Return the valid range or null if it's not valid\\n* satisfies(version, range): Return true if the version satisfies the\\n  range.\\n* maxSatisfying(versions, range): Return the highest version in the list\\n  that satisfies the range, or null if none of them do.\\n* gtr(version, range): Return true if version is greater than all the\\n  versions possible in the range.\\n* ltr(version, range): Return true if version is less than all the\\n  versions possible in the range.\\n* outside(version, range, hilo): Return true if the version is outside\\n  the bounds of the range in either the high or low direction.  The\\n  `hilo` argument must be either the string `'>'` or `'<'`.  (This is\\n  the function called by `gtr` and `ltr`.)\\n\\nNote that, since ranges may be non-contiguous, a version might not be\\ngreater than a range, less than a range, *or* satisfy a range!  For\\nexample, the range `1.2 <1.2.9 || >2.0.0` would have a hole from `1.2.9`\\nuntil `2.0.0`, so the version `1.2.10` would not be greater than the\\nrange (because 2.0.1 satisfies, which is higher), nor less than the\\nrange (since 1.2.8 satisfies, which is lower), and it also does not\\nsatisfy the range.\\n\\nIf you want to know if a version satisfies or does not satisfy a\\nrange, use the `satisfies(version, range)` function.\\n\",\n   25:   \"readmeFilename\": \"README.md\",\n   26    \"bugs\": {\n   27      \"url\": \"https://github.com/isaacs/node-semver/issues\"\n\n/Users/masudrahman/Code/TeamWifi/node_modules/leaflet.locatecontrol/bower.json:\n   29    ],\n   30    \"license\": \"MIT\",\n   31:   \"readmeFilename\": \"README.md\"\n   32  }\n   33  \n\n/Users/masudrahman/Code/TeamWifi/views/index.handlebars:\n  145  			});\n  146  \n  147: 			function saveText(text, filename){\n  148  			  var a = document.createElement('a');\n  149  			  a.setAttribute('href', 'data:text/plain;charset=utf-u,'+encodeURIComponent(text));\n  150: 			  a.setAttribute('download', filename);\n  151  			  a.click()\n  152  			}\n  153  \n  154  			var obj = {a: \"Hello\", b: \"World\");\n  155: 			saveText( JSON.stringify(obj), \"filename.json\" );\n  156  \n  157  		</script>\n\n314 matches across 122 files\n\n\nSearching 682 files for \"filename.json\"\n\n/Users/masudrahman/Code/TeamWifi/views/index.handlebars:\n  153  \n  154  			var obj = {a: \"Hello\", b: \"World\");\n  155: 			saveText( JSON.stringify(obj), \"filename.json\" );\n  156  \n  157  		</script>\n\n1 match in 1 file\n\n\nSearching 682 files for \"filename.json\"\n\n/Users/masudrahman/Code/TeamWifi/views/index.handlebars:\n  129  \n  130  			var obj = {a: \"Hello\", b: \"World\"};\n  131: 			saveText( JSON.stringify(obj), \"filename.json\" );\n  132  		</script>\n  133  \n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 399979,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "routes/index.js",
			"settings":
			{
				"buffer_size": 130,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/history.handlebars",
			"settings":
			{
				"buffer_size": 4247,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/Chrome.sublime-build",
	"command_palette":
	{
		"height": 87.0,
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"p",
				"Preferences: Browse Packages"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			],
			[
				"pa",
				"Preferences: Browse Packages"
			],
			[
				"pak",
				"Preferences: Browse Packages"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/masudrahman/Code/TeamWifi/data.json",
		"/Users/masudrahman/Code/TeamWifi/views/login.handlebars",
		"/Users/masudrahman/Code/TeamWifi/public/js/js.cookie.js",
		"/Users/masudrahman/Code/TeamWifi/routes/history.js",
		"/Users/masudrahman/Code/TeamWifi/views/history.handlebars",
		"/Users/masudrahman/Code/IntroHCI/lab5/routes/index.js",
		"/Users/masudrahman/Code/IntroHCI/lab5/data.json",
		"/Users/masudrahman/Code/TeamWifi/static/index.html",
		"/Users/masudrahman/Code/TeamWifi/static/test.html",
		"/Users/masudrahman/Code/TeamWifi/static/css/style.css",
		"/Users/masudrahman/Code/iCONCUR/iconcur_quiz_questions.sql",
		"/Users/masudrahman/Code/TeamWifi/server.js",
		"/Users/masudrahman/Code/TeamWifi/node_modules/express/lib/router/index.js",
		"/Users/masudrahman/Code/TeamWifi/node_modules/express/index.js",
		"/Users/masudrahman/Code/TeamWifi/static/login.html",
		"/Users/masudrahman/Code/TeamWifi/static/wifi.html",
		"/Users/masudrahman/Code/TeamWifi/static/history.html",
		"/Users/masudrahman/Code/TeamWifi/static/faq.html",
		"/Users/masudrahman/Code/TeamWifi/static/signout.html",
		"/Users/masudrahman/Code/TeamWifi/static/settings.html",
		"/Users/masudrahman/Code/WiFinder/static/css/style.css",
		"/Users/masudrahman/Code/TeamWifi/static/js/wifi.js",
		"/Users/masudrahman/Code/iCONCUR/essential_data.sql",
		"/Users/masudrahman/Code/TeamWifi/static/logout.html",
		"/Users/masudrahman/Code/TeamWifi/static/lol.html",
		"/Users/masudrahman/Code/TeamWifi/static/js/materialize.js",
		"/Users/masudrahman/Code/TeamWifi/index.html",
		"/Users/masudrahman/Code/IntroHCI/lab2/LICENSE",
		"/Users/masudrahman/Code/IntroHCI/lab2/Procfile",
		"/Users/masudrahman/Code/IntroHCI/lab2/server.js",
		"/Users/masudrahman/Code/iCONCUR/resources/lang/en/static.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/layouts/sharing.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/sharing/last_view.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/sharing/last_view_extended.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/sharing/create_extended.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/sharing/create.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/sharing/create_simple.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/sharing/last_view_simple.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/lang/en/sharing.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/layouts/simplesurvey.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/static/more-info.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/layouts/survey.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/static/home.blade.php",
		"/Users/masudrahman/.bash_profile",
		"/Users/masudrahman/.bash_rc",
		"/Users/masudrahman/Code/iCONCUR/resources/views/sharing/view_choice_simple.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/sharing/view_choice_extended.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/sharing/view_choice.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/lang/en/layouts.php",
		"/Users/masudrahman/Code/iCONCUR/mydb_backup.sql",
		"/Users/masudrahman/Code/iCONCUR/database/migrations/2016_05_24_230723_create_Family_table.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/layouts/health_status.blade.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/mypage.blade",
		"/Users/masudrahman/Code/iCONCUR/storage/framework/views/e17bdbf44bf1a98e78baadbe9f25de9bbf0dc9e0.php",
		"/Users/masudrahman/Code/iCONCUR/database/migrations/2016_10_24_114934_create_Display_language_table.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/login/terms.blade.php",
		"/Users/masudrahman/Code/iCONCUR/database/migrations/2016_10_24_113359_create_log_table_simple_extended_table.php",
		"/Users/masudrahman/Code/iCONCUR/database/migrations/2016_10_24_024613_create_log_table_simple_extended.php",
		"/Users/masudrahman/Code/iCONCUR/database/migrations/2016_05_24_230723_create_Forms_table.php",
		"/Users/masudrahman/Code/iCONCUR/database/migrations/2016_05_24_230723_create_users_table.php",
		"/Users/masudrahman/Code/iCONCUR/database/migrations/2016_10_23_113907_add_Ordering_to_Sections.php",
		"/Users/masudrahman/Code/iCONCUR/database/migrations/2016_10_24_000511_add_Forms_ID_and_Ordering_to_Questions.php",
		"/Users/masudrahman/Code/iCONCUR/resources/views/static/legal.blade.php",
		"/Users/masudrahman/Code/iCONCUR/.env",
		"/Users/masudrahman/Code/iCONCUR/app/Http/routes.php",
		"/Users/masudrahman/Code/iCONCUR/vendor/way/generators/readme.md",
		"/Users/masudrahman/Code/iCONCUR/app/Http/Controllers/MyDataUseController.php",
		"/Users/masudrahman/Code/iCONCUR/app/Http/Controllers/AdminController.php",
		"/Users/masudrahman/Code/iCONCUR/app/Http/Controllers/Controller.php",
		"/Users/masudrahman/Code/iCONCUR/database/migrations/2016_10_22_155445_add_Obj_version_and_Forms_ID_to_User_values.php",
		"/Users/masudrahman/Code/iCONCUR/storage/framework/views/b7d7ada4016d3281322f18b27c1d70deb6447d7f.php",
		"/Users/masudrahman/Code/iCONCUR/storage/framework/views/091c201ef10275af47fd8be3caac5b0b0bc3e6c6.php",
		"/Users/masudrahman/Code/iCONCUR/.gitignore",
		"/Users/masudrahman/Desktop/iCONCUR COPY 101516/database/migrations/2016_10_22_155445_add_Obj_version_and_Forms_ID_to_User_values.php",
		"/Users/masudrahman/Desktop/iCONCUR COPY 101516/database/migrations/2016_10_21_163456_add_Obj_number_to_family.php",
		"/Users/masudrahman/Desktop/iCONCUR COPY 101516/database/migrations/2016_10_22_143832_add_Obj_version_to_Family_values.php",
		"/Users/masudrahman/Desktop/iCONCUR COPY 101516/mydb_backup.sql",
		"/Users/masudrahman/Desktop/iCONCUR COPY 101516/app/Http/routes.php",
		"/Users/masudrahman/Desktop/iCONCUR COPY 101516/.gitignore",
		"/Users/masudrahman/Desktop/iCONCUR COPY 101516/database/migrations/2016_05_24_230723_create_Family_table.php",
		"/Users/masudrahman/Desktop/iCONCUR COPY 101516/database/migrations/2016_05_24_230723_create_Family_values_table.php",
		"/Users/masudrahman/Desktop/iCONCUR COPY 101516/database/migrations/2016_10_22_153414_add_Obj_version_to_User_values.php",
		"/Users/masudrahman/Code/iCONCUR/database/seeds/DatabaseSeeder.php",
		"/Users/masudrahman/Code/iCONCUR/phpunit.xml",
		"/usr/local/var/mysql/masuds-mbp.dynamic.ucsd.edu.err",
		"/usr/local/var/mysql/masudrahman.pid",
		"/usr/local/Cellar/mysql/5.7.16/support-files/my.cnf",
		"/usr/local/Cellar/mysql/5.7.16/README",
		"/Users/masudrahman/Code/iCONCUR/storage/logs/laravel.log",
		"/Users/masudrahman/Code/iCONCUR/bootstrap/cache/.gitignore",
		"/Users/masudrahman/Code/EasyFlight/README.md",
		"/Users/masudrahman/Code/EasyFlight/app/views/flight_info/index.html.erb",
		"/Users/masudrahman/Code/EasyFlight/app/bot/example.rb",
		"/Users/masudrahman/Code/EasyFlight/config/routes.rb",
		"/Users/masudrahman/Code/EasyFlight/app/views/layouts/application.html.erb",
		"/Users/masudrahman/Code/EasyFlight/db/migrate/20161001091911_create_data.rb",
		"/Users/masudrahman/Code/EasyFlight/app/controllers/application_controller.rb",
		"/Users/masudrahman/Code/EasyFlight/app/views/data/list.html.erb",
		"/Users/masudrahman/Code/EasyFlight/app/controllers/data_controller.rb",
		"/Users/masudrahman/Code/EasyFlight/db/migrate/20161001084010_data.rb",
		"/Users/masudrahman/Code/EasyFlight/app/views/layouts/mailer.html.erb",
		"/Users/masudrahman/Desktop/web_scraper.rb",
		"/Users/masudrahman/Code/EasyFlight/db/migrate/20161001091911",
		"/Users/masudrahman/Code/EasyFlight/app/models/application_record.rb",
		"/Users/masudrahman/Code/EasyFlight/app/models/datum.rb",
		"/Users/masudrahman/Code/EasyFlight/app/helpers/application_helper.rb",
		"/Users/masudrahman/Code/EasyFlight/db/seeds.rb",
		"/Users/masudrahman/Code/marine-v1.0/HTML/news.html",
		"/Users/masudrahman/Code/marine-v1.0/HTML/contact.html",
		"/Users/masudrahman/Code/marine-v1.0/HTML/services.html",
		"/Users/masudrahman/Code/marine-v1.0/HTML/index-business.html",
		"/Users/masudrahman/Code/marine-v1.0/HTML/css/style.css",
		"/Users/masudrahman/Code/marine-v1.0/HTML/about.html",
		"/Users/masudrahman/Code/marine-v1.0/HTML/sc-tabs-accordions.html",
		"/Users/masudrahman/Code/marine-v1.0/HTML/index-business2.html",
		"/Users/masudrahman/Code/housing-model/ml-model.py",
		"/Users/masudrahman/Code/housing-model/scrapy.py",
		"/Users/masudrahman/Code/Selenium/test_python_org_search.py",
		"/Users/masudrahman/Code/Selenium/taco.py",
		"/Users/masudrahman/Code/Selenium/python_org_search.py",
		"/Users/masudrahman/Code/marine-v1.0/HTML/page-contactus.html",
		"/Users/masudrahman/Code/marine-v1.0/HTML/blog-single.html",
		"/Users/masudrahman/Code/marine-v1.0/HTML/page-services.html",
		"/Users/masudrahman/Code/marine-v1.0/HTML/index-corporation.html",
		"/Users/masudrahman/Code/marine-v1.0/HTML/blog-big-image.html",
		"/Users/masudrahman/Code/wordpress/wp-content/themes/startwordpress/content.php",
		"/Users/masudrahman/Code/wordpress/wp-content/themes/startwordpress/sidebar.php",
		"/Users/masudrahman/Code/wordpress/wp-content/themes/startwordpress/page.php"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"",
			"static.php",
			"sharing.blade.php",
			"sharing.php",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"rating",
			"btn-",
			"y.items",
			"cookie",
			"name",
			"cookie",
			"swag",
			"cookie",
			"filename.json",
			"filename",
			"slow",
			"0.7",
			"<br>",
			"ms",
			"<br>",
			"Layer",
			"options",
			"input",
			"button",
			"leaflet.js",
			"Download",
			"Down",
			"pointTo",
			"marker1",
			"//",
			"result",
			"<option>",
			"</a></li>",
			"<li><a href=\"#\">",
			"Great",
			"meow",
			"e",
			"geojsonFeature",
			"onEachFeature",
			"domor",
			"geojsonFeature",
			"\",\n",
			"app.use",
			"index.html",
			"geoJSON",
			"speedof.me",
			"dropdown",
			"more_info",
			"please see the flowchart",
			"youtu",
			"youtu.be",
			"data encryption",
			"make_choice_button",
			"Make a New",
			"132",
			"p>",
			"<p>",
			"p",
			"31",
			"131",
			"</div>",
			"<div class=\"radio\">",
			"radio",
			"radio-inline",
			"stem",
			"130",
			"sharing",
			"a",
			"sharing.php",
			"sharing",
			"130",
			"q_130",
			"130",
			"0",
			"stem",
			"stem_cell_yes",
			"layouts.php",
			"My Sharing Choices",
			"Stem cell researchers can use my data",
			"q_39",
			"stem",
			"stem_cell",
			"sharing.title",
			"sharing",
			"stem cell",
			"simple",
			"users",
			"User_id",
			"users_table",
			"varchar",
			"quiz",
			"mypage",
			"Forms_ID",
			"Question",
			"controller",
			"View::make",
			"home",
			"Conditions",
			"Terms & Conditions",
			"Terms",
			"Accept",
			"My Page",
			"sidebar",
			"img",
			"<a",
			"flow",
			"Privacy policy",
			"static",
			"static.php",
			"blade",
			"home",
			"iCONCUR is designed to empower patients",
			"youtube",
			"https://www.youtube.com/watch?v=pQCEy8piR6w",
			"youtu",
			"quiz",
			"navigate",
			"Informed consent",
			"Ordering",
			"Forms_ID",
			"Obj_version",
			"insert",
			"obj_num",
			"Obj_number",
			"<div",
			"<div>",
			"get_fl",
			"books",
			"title",
			"index",
			"digital",
			"clear",
			"img"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "views/index.handlebars",
					"settings":
					{
						"buffer_size": 13302,
						"regions":
						{
						},
						"selection":
						[
							[
								11368,
								11368
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6016.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"settings":
					{
						"buffer_size": 399979,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										375,
										385
									],
									[
										809,
										817
									],
									[
										1030,
										1038
									],
									[
										1212,
										1220
									],
									[
										1411,
										1419
									],
									[
										1597,
										1605
									],
									[
										1798,
										1806
									],
									[
										2031,
										2039
									],
									[
										2335,
										2343
									],
									[
										2772,
										2780
									],
									[
										7471,
										7479
									],
									[
										7752,
										7760
									],
									[
										7930,
										7938
									],
									[
										8157,
										8165
									],
									[
										8281,
										8289
									],
									[
										8373,
										8381
									],
									[
										8401,
										8409
									],
									[
										8422,
										8430
									],
									[
										8467,
										8475
									],
									[
										8478,
										8486
									],
									[
										8550,
										8558
									],
									[
										8573,
										8581
									],
									[
										8741,
										8749
									],
									[
										8788,
										8796
									],
									[
										8906,
										8914
									],
									[
										8930,
										8938
									],
									[
										8958,
										8966
									],
									[
										9011,
										9019
									],
									[
										9046,
										9054
									],
									[
										9069,
										9077
									],
									[
										9236,
										9244
									],
									[
										9247,
										9255
									],
									[
										10966,
										10974
									],
									[
										18475,
										18483
									],
									[
										21808,
										21816
									],
									[
										25196,
										25204
									],
									[
										25481,
										25489
									],
									[
										25519,
										25527
									],
									[
										25567,
										25575
									],
									[
										25951,
										25959
									],
									[
										26177,
										26185
									],
									[
										26250,
										26258
									],
									[
										26444,
										26452
									],
									[
										28634,
										28642
									],
									[
										30308,
										30316
									],
									[
										30631,
										30639
									],
									[
										30924,
										30932
									],
									[
										30988,
										30996
									],
									[
										31182,
										31190
									],
									[
										31459,
										31467
									],
									[
										31475,
										31483
									],
									[
										31777,
										31785
									],
									[
										31797,
										31805
									],
									[
										32038,
										32046
									],
									[
										32160,
										32168
									],
									[
										32341,
										32349
									],
									[
										32362,
										32370
									],
									[
										32427,
										32435
									],
									[
										32577,
										32585
									],
									[
										32733,
										32741
									],
									[
										32777,
										32785
									],
									[
										32964,
										32972
									],
									[
										33026,
										33034
									],
									[
										33099,
										33107
									],
									[
										33160,
										33168
									],
									[
										33171,
										33179
									],
									[
										33211,
										33219
									],
									[
										33222,
										33230
									],
									[
										33350,
										33358
									],
									[
										38249,
										38257
									],
									[
										39438,
										39446
									],
									[
										39454,
										39462
									],
									[
										39905,
										39913
									],
									[
										40220,
										40228
									],
									[
										40570,
										40578
									],
									[
										40586,
										40594
									],
									[
										41013,
										41021
									],
									[
										41120,
										41128
									],
									[
										41411,
										41419
									],
									[
										41714,
										41722
									],
									[
										41911,
										41919
									],
									[
										42052,
										42060
									],
									[
										42095,
										42103
									],
									[
										42163,
										42171
									],
									[
										42264,
										42272
									],
									[
										42295,
										42303
									],
									[
										42423,
										42431
									],
									[
										42555,
										42563
									],
									[
										42608,
										42616
									],
									[
										42668,
										42676
									],
									[
										42795,
										42803
									],
									[
										42874,
										42882
									],
									[
										42913,
										42921
									],
									[
										42980,
										42988
									],
									[
										43011,
										43019
									],
									[
										43117,
										43125
									],
									[
										43161,
										43169
									],
									[
										43221,
										43229
									],
									[
										43274,
										43282
									],
									[
										43438,
										43446
									],
									[
										43479,
										43487
									],
									[
										43519,
										43527
									],
									[
										43579,
										43587
									],
									[
										43753,
										43761
									],
									[
										70850,
										70858
									],
									[
										71224,
										71232
									],
									[
										71495,
										71503
									],
									[
										71878,
										71886
									],
									[
										73545,
										73553
									],
									[
										73891,
										73899
									],
									[
										74091,
										74099
									],
									[
										74311,
										74319
									],
									[
										74410,
										74418
									],
									[
										74992,
										75000
									],
									[
										75394,
										75402
									],
									[
										75534,
										75542
									],
									[
										75551,
										75559
									],
									[
										75664,
										75672
									],
									[
										75763,
										75771
									],
									[
										75855,
										75863
									],
									[
										75947,
										75955
									],
									[
										76234,
										76242
									],
									[
										76257,
										76265
									],
									[
										76713,
										76721
									],
									[
										76919,
										76927
									],
									[
										77153,
										77161
									],
									[
										77359,
										77367
									],
									[
										77593,
										77601
									],
									[
										77969,
										77977
									],
									[
										78350,
										78358
									],
									[
										78731,
										78739
									],
									[
										79105,
										79113
									],
									[
										79445,
										79453
									],
									[
										79782,
										79790
									],
									[
										80112,
										80120
									],
									[
										80399,
										80407
									],
									[
										80741,
										80749
									],
									[
										81039,
										81047
									],
									[
										81150,
										81158
									],
									[
										81506,
										81514
									],
									[
										81634,
										81642
									],
									[
										81991,
										81999
									],
									[
										82102,
										82110
									],
									[
										82455,
										82463
									],
									[
										82566,
										82574
									],
									[
										82911,
										82919
									],
									[
										83024,
										83032
									],
									[
										83387,
										83395
									],
									[
										83500,
										83508
									],
									[
										83867,
										83875
									],
									[
										83978,
										83986
									],
									[
										84342,
										84350
									],
									[
										84653,
										84661
									],
									[
										84905,
										84913
									],
									[
										85110,
										85118
									],
									[
										85312,
										85320
									],
									[
										85496,
										85504
									],
									[
										85696,
										85704
									],
									[
										85882,
										85890
									],
									[
										86213,
										86221
									],
									[
										86350,
										86358
									],
									[
										86415,
										86423
									],
									[
										86738,
										86746
									],
									[
										86944,
										86952
									],
									[
										87222,
										87230
									],
									[
										87239,
										87247
									],
									[
										87285,
										87293
									],
									[
										87411,
										87419
									],
									[
										87518,
										87526
									],
									[
										87528,
										87536
									],
									[
										87566,
										87574
									],
									[
										87825,
										87833
									],
									[
										88031,
										88039
									],
									[
										88400,
										88408
									],
									[
										88669,
										88677
									],
									[
										89057,
										89065
									],
									[
										89211,
										89219
									],
									[
										89581,
										89589
									],
									[
										89950,
										89958
									],
									[
										90191,
										90199
									],
									[
										90432,
										90440
									],
									[
										90673,
										90681
									],
									[
										91073,
										91081
									],
									[
										94910,
										94918
									],
									[
										96369,
										96377
									],
									[
										98579,
										98587
									],
									[
										102296,
										102304
									],
									[
										103710,
										103718
									],
									[
										105515,
										105523
									],
									[
										110395,
										110403
									],
									[
										112322,
										112330
									],
									[
										114153,
										114161
									],
									[
										114497,
										114505
									],
									[
										115953,
										115961
									],
									[
										117348,
										117356
									],
									[
										121399,
										121407
									],
									[
										123982,
										123990
									],
									[
										139413,
										139421
									],
									[
										144430,
										144438
									],
									[
										144766,
										144774
									],
									[
										164545,
										164553
									],
									[
										182080,
										182088
									],
									[
										182270,
										182278
									],
									[
										189630,
										189638
									],
									[
										189967,
										189975
									],
									[
										190195,
										190203
									],
									[
										190409,
										190417
									],
									[
										190652,
										190660
									],
									[
										191637,
										191645
									],
									[
										192334,
										192342
									],
									[
										192542,
										192550
									],
									[
										193129,
										193137
									],
									[
										200962,
										200970
									],
									[
										201282,
										201290
									],
									[
										201497,
										201505
									],
									[
										201703,
										201711
									],
									[
										201940,
										201948
									],
									[
										203901,
										203909
									],
									[
										204236,
										204244
									],
									[
										204453,
										204461
									],
									[
										204700,
										204708
									],
									[
										207229,
										207237
									],
									[
										207350,
										207358
									],
									[
										209041,
										209049
									],
									[
										211925,
										211933
									],
									[
										212325,
										212333
									],
									[
										212464,
										212472
									],
									[
										212750,
										212758
									],
									[
										216383,
										216391
									],
									[
										218609,
										218617
									],
									[
										218925,
										218933
									],
									[
										219018,
										219026
									],
									[
										219223,
										219231
									],
									[
										219484,
										219492
									],
									[
										221024,
										221032
									],
									[
										263717,
										263725
									],
									[
										265192,
										265200
									],
									[
										307166,
										307174
									],
									[
										308714,
										308722
									],
									[
										313699,
										313707
									],
									[
										315182,
										315190
									],
									[
										319934,
										319942
									],
									[
										320248,
										320256
									],
									[
										320654,
										320662
									],
									[
										320749,
										320757
									],
									[
										321013,
										321021
									],
									[
										321572,
										321580
									],
									[
										321919,
										321927
									],
									[
										322099,
										322107
									],
									[
										322274,
										322282
									],
									[
										322305,
										322313
									],
									[
										322496,
										322504
									],
									[
										333237,
										333245
									],
									[
										333575,
										333583
									],
									[
										335776,
										335784
									],
									[
										336128,
										336136
									],
									[
										338770,
										338778
									],
									[
										356325,
										356333
									],
									[
										356802,
										356810
									],
									[
										361492,
										361500
									],
									[
										361914,
										361922
									],
									[
										362241,
										362249
									],
									[
										362503,
										362511
									],
									[
										363012,
										363020
									],
									[
										363359,
										363367
									],
									[
										363539,
										363547
									],
									[
										363714,
										363722
									],
									[
										363745,
										363753
									],
									[
										363936,
										363944
									],
									[
										364162,
										364170
									],
									[
										364333,
										364341
									],
									[
										364493,
										364501
									],
									[
										364511,
										364519
									],
									[
										364708,
										364716
									],
									[
										364851,
										364859
									],
									[
										365012,
										365020
									],
									[
										365217,
										365225
									],
									[
										365417,
										365425
									],
									[
										370504,
										370512
									],
									[
										371647,
										371655
									],
									[
										373243,
										373251
									],
									[
										374757,
										374765
									],
									[
										375695,
										375703
									],
									[
										376768,
										376776
									],
									[
										377310,
										377318
									],
									[
										379627,
										379635
									],
									[
										380003,
										380011
									],
									[
										380205,
										380213
									],
									[
										380421,
										380429
									],
									[
										380622,
										380630
									],
									[
										380829,
										380837
									],
									[
										381023,
										381031
									],
									[
										381257,
										381265
									],
									[
										381588,
										381596
									],
									[
										382008,
										382016
									],
									[
										382264,
										382272
									],
									[
										382709,
										382717
									],
									[
										382947,
										382955
									],
									[
										383209,
										383217
									],
									[
										383650,
										383658
									],
									[
										383822,
										383830
									],
									[
										384162,
										384170
									],
									[
										384224,
										384232
									],
									[
										384365,
										384373
									],
									[
										390927,
										390935
									],
									[
										391251,
										391259
									],
									[
										391414,
										391422
									],
									[
										391695,
										391703
									],
									[
										391916,
										391924
									],
									[
										392080,
										392088
									],
									[
										398651,
										398659
									],
									[
										398895,
										398903
									],
									[
										399049,
										399057
									],
									[
										399243,
										399251
									],
									[
										399384,
										399392
									],
									[
										399655,
										399668
									],
									[
										399915,
										399928
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								399721,
								399721
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 4,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 66495.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "routes/index.js",
					"settings":
					{
						"buffer_size": 130,
						"regions":
						{
						},
						"selection":
						[
							[
								99,
								99
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "views/history.handlebars",
					"settings":
					{
						"buffer_size": 4247,
						"regions":
						{
						},
						"selection":
						[
							[
								3210,
								3210
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 611.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 220.0,
	"status_bar_visible": true
}
